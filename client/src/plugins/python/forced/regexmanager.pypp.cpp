// <osiris_sps_source_header>
// This file is part of Osiris Serverless Portal System.
// Copyright (C)2005-2012 Osiris Team (info@osiris-sps.org) / http://www.osiris-sps.org )
//
// Osiris Serverless Portal System is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Osiris Serverless Portal System is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Osiris Serverless Portal System.  If not, see <http://www.gnu.org/licenses/>.
// </osiris_sps_source_header>

// This file has been generated by Py++.

#include "stdafx.h"
#include "pypluspluscommon.h"
#include "boost/python.hpp"
#include "__call_policies.pypp.hpp"
#include "regexmanager.h"
#include "regexmanager.pypp.hpp"

namespace bp = boost::python;

struct RegexManager_wrapper : ::osiris::RegexManager, ::osiris::PythonWrapper< ::osiris::RegexManager > {

    RegexManager_wrapper( )
    : ::osiris::RegexManager( )
      , ::osiris::PythonWrapper< ::osiris::RegexManager >(){
        // null constructor
    
    }

    static boost::python::object match( ::osiris::RegexManager const & inst, ::osiris::String const & str, ::osiris::String const & regex, bool nocase=true ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.match(str, regex, nocase);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object replace( ::osiris::RegexManager const & inst, ::osiris::String const & str, ::osiris::String const & regex, ::osiris::String const & format, bool nocase=true ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::String result = inst.replace(str, regex, format, nocase);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getRegex( ::osiris::RegexManager const & inst, ::osiris::String const & regex, bool nocase=true ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::shared_ptr<boost::wregex> result = inst.getRegex(regex, nocase);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

};

void register_RegexManager_class(){

    ::boost::python::class_< RegexManager_wrapper, ::boost::python::bases< ::osiris::StaticSingleton< osiris::RegexManager, true > >, ::boost::noncopyable >( "RegexManager", ::boost::python::no_init )    
        .def( ::boost::python::init< >() )    
        .def( 
            "match"
            , (boost::python::object (*)( ::osiris::RegexManager const &,::osiris::String const &,::osiris::String const &,bool ))( &RegexManager_wrapper::match )
            , ( ::boost::python::arg("inst"), ::boost::python::arg("str"), ::boost::python::arg("regex"), ::boost::python::arg("nocase")=(bool)(true) ) )    
        .def( 
            "replace"
            , (boost::python::object (*)( ::osiris::RegexManager const &,::osiris::String const &,::osiris::String const &,::osiris::String const &,bool ))( &RegexManager_wrapper::replace )
            , ( ::boost::python::arg("inst"), ::boost::python::arg("str"), ::boost::python::arg("regex"), ::boost::python::arg("format"), ::boost::python::arg("nocase")=(bool)(true) ) )    
        .def( 
            "getRegex"
            , (boost::python::object (*)( ::osiris::RegexManager const &,::osiris::String const &,bool ))( &RegexManager_wrapper::getRegex )
            , ( ::boost::python::arg("inst"), ::boost::python::arg("regex"), ::boost::python::arg("nocase")=(bool)(true) ) );

}
