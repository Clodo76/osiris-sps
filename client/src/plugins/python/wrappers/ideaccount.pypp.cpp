// This file has been generated by Py++.

#include "stdafx.h"
#include "pypluspluscommon.h"
#include "boost/python.hpp"
#include "__call_policies.pypp.hpp"
#include "ideaccount.h"
#include "dataaccount.h"
#include "ideaccount.pypp.hpp"

namespace bp = boost::python;

static boost::python::object getAccount_81a7959660e76fbae82ba66de471c7e4( ::osiris::IdeAccount const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::boost::shared_ptr<osiris::DataAccount> result = inst.getAccount();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getID_0e0acb33b9f4db8ebe527a9882150e6d( ::osiris::IdeAccount const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::String const & result = inst.getID();
    __pythreadSaver.restore();
    typedef bp::return_value_policy< bp::copy_const_reference > call_policies_t;
    return boost::python::object( pyplusplus::call_policies::make_object< call_policies_t, ::osiris::String const & >( result ) );
}

static boost::python::object getName_8dfe4c11dc829d738415eaba89567839( ::osiris::IdeAccount const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::String const & result = inst.getName();
    __pythreadSaver.restore();
    typedef bp::return_value_policy< bp::copy_const_reference > call_policies_t;
    return boost::python::object( pyplusplus::call_policies::make_object< call_policies_t, ::osiris::String const & >( result ) );
}

static boost::python::object getSkinID_6156637fd2e490834fe324051e858875( ::osiris::IdeAccount const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::UniqueID result = inst.getSkinID();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getLanguage_db20b926f30ae6409e825cfbcdc725b4( ::osiris::IdeAccount const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::String result = inst.getLanguage();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object hasLanguage_b11ece8646a0b5a67af7b1f4f1941fa5( ::osiris::IdeAccount const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    bool result = inst.hasLanguage();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getDeleted_275f23072682b1fca083a53c78a6768b( ::osiris::IdeAccount const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    bool result = inst.getDeleted();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getViewMode_98d29313367d7f861bae8611f2fbd1f0( ::osiris::IdeAccount const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::DataViewMode result = inst.getViewMode();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getRealPassword_d53598a3acadaa31368300343fb195e9( ::osiris::IdeAccount const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::String const & result = inst.getRealPassword();
    __pythreadSaver.restore();
    typedef bp::return_value_policy< bp::copy_const_reference > call_policies_t;
    return boost::python::object( pyplusplus::call_policies::make_object< call_policies_t, ::osiris::String const & >( result ) );
}

static boost::python::object getLastAccessDate_e990670d71b3b5daa641b42a04079b21( ::osiris::IdeAccount const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::DateTime const & result = inst.getLastAccessDate();
    __pythreadSaver.restore();
    typedef bp::return_value_policy< bp::copy_const_reference > call_policies_t;
    return boost::python::object( pyplusplus::call_policies::make_object< call_policies_t, ::osiris::DateTime const & >( result ) );
}

static boost::python::object getReferenceDate_59cd64530a087aecc437bfd24f12085a( ::osiris::IdeAccount const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::DateTime const & result = inst.getReferenceDate();
    __pythreadSaver.restore();
    typedef bp::return_value_policy< bp::copy_const_reference > call_policies_t;
    return boost::python::object( pyplusplus::call_policies::make_object< call_policies_t, ::osiris::DateTime const & >( result ) );
}

static boost::python::object loadUser_5381223bdd14a1cb552676cc3e4963b0( ::osiris::IdeAccount & inst, ::boost::shared_ptr< osiris::IPortalDatabase > database ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::boost::shared_ptr<osiris::ObjectsUser> result = inst.loadUser(database);
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static void setDeleted_b4ae39b903f379b56443ccba25462e35( ::osiris::IdeAccount & inst, bool deleted ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.setDeleted(deleted);
    __pythreadSaver.restore();
}

static void setLanguage_61a9177a427acbf11546e9892d7c93ed( ::osiris::IdeAccount & inst, ::osiris::String const & language ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.setLanguage(language);
    __pythreadSaver.restore();
}

static void setLastAccessDate_53e47fb793a8eca66b10bb15f6fc329e( ::osiris::IdeAccount & inst, ::osiris::DateTime const & date ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.setLastAccessDate(date);
    __pythreadSaver.restore();
}

static void setName_7e0f0196bb506cd98d780b9957335c89( ::osiris::IdeAccount & inst, ::osiris::String const & name ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.setName(name);
    __pythreadSaver.restore();
}

static boost::python::object setRealPassword_4b0a43e67c44fcfaf6525a5c62198247( ::osiris::IdeAccount & inst, ::osiris::String const & password ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    bool result = inst.setRealPassword(password);
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static void setReferenceDate_db89e02c3ee13a79f2b257d46505d5e4( ::osiris::IdeAccount & inst, ::osiris::DateTime const & date ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.setReferenceDate(date);
    __pythreadSaver.restore();
}

static void setSkin_3eedd8cad4d9c2aa06f811d0c145a2df( ::osiris::IdeAccount & inst, ::osiris::UniqueID const & id ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.setSkin(id);
    __pythreadSaver.restore();
}

static void setViewMode_b6f13a21a963298e5a758881d863a5ad( ::osiris::IdeAccount & inst, ::osiris::DataViewMode mode ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.setViewMode(mode);
    __pythreadSaver.restore();
}

static boost::python::object updateAccount_80c9225a49ef480388fae791d79bb6e8( ::osiris::IdeAccount & inst, ::boost::shared_ptr< osiris::IPortalDatabase > database ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    bool result = inst.updateAccount(database);
    __pythreadSaver.restore();
    return boost::python::object( result );
}

void register_IdeAccount_class(){

    { //::osiris::IdeAccount
        typedef ::boost::python::class_< ::osiris::IdeAccount, ::boost::noncopyable > IdeAccount_exposer_t;
        IdeAccount_exposer_t IdeAccount_exposer = IdeAccount_exposer_t( "IdeAccount", ::boost::python::init< ::boost::shared_ptr< osiris::DataAccount > >(( ::boost::python::arg("account") )) );
        ::boost::python::scope IdeAccount_scope( IdeAccount_exposer );
        ::boost::python::implicitly_convertible< ::boost::shared_ptr< osiris::DataAccount >, ::osiris::IdeAccount >();
        { //::osiris::IdeAccount::getAccount
        
            typedef boost::python::object ( *getAccount_function_type )( ::osiris::IdeAccount const & );
            
            IdeAccount_exposer.def( 
                "getAccount"
                , getAccount_function_type( &getAccount_81a7959660e76fbae82ba66de471c7e4 ) );
        
        }
        { //::osiris::IdeAccount::getID
        
            typedef boost::python::object ( *getID_function_type )( ::osiris::IdeAccount const & );
            
            IdeAccount_exposer.def( 
                "getID"
                , getID_function_type( &getID_0e0acb33b9f4db8ebe527a9882150e6d ) );
        
        }
        { //::osiris::IdeAccount::getName
        
            typedef boost::python::object ( *getName_function_type )( ::osiris::IdeAccount const & );
            
            IdeAccount_exposer.def( 
                "getName"
                , getName_function_type( &getName_8dfe4c11dc829d738415eaba89567839 ) );
        
        }
        { //::osiris::IdeAccount::getSkinID
        
            typedef boost::python::object ( *getSkinID_function_type )( ::osiris::IdeAccount const & );
            
            IdeAccount_exposer.def( 
                "getSkinID"
                , getSkinID_function_type( &getSkinID_6156637fd2e490834fe324051e858875 ) );
        
        }
        { //::osiris::IdeAccount::getLanguage
        
            typedef boost::python::object ( *getLanguage_function_type )( ::osiris::IdeAccount const & );
            
            IdeAccount_exposer.def( 
                "getLanguage"
                , getLanguage_function_type( &getLanguage_db20b926f30ae6409e825cfbcdc725b4 ) );
        
        }
        { //::osiris::IdeAccount::hasLanguage
        
            typedef boost::python::object ( *hasLanguage_function_type )( ::osiris::IdeAccount const & );
            
            IdeAccount_exposer.def( 
                "hasLanguage"
                , hasLanguage_function_type( &hasLanguage_b11ece8646a0b5a67af7b1f4f1941fa5 ) );
        
        }
        { //::osiris::IdeAccount::getDeleted
        
            typedef boost::python::object ( *getDeleted_function_type )( ::osiris::IdeAccount const & );
            
            IdeAccount_exposer.def( 
                "getDeleted"
                , getDeleted_function_type( &getDeleted_275f23072682b1fca083a53c78a6768b ) );
        
        }
        { //::osiris::IdeAccount::getViewMode
        
            typedef boost::python::object ( *getViewMode_function_type )( ::osiris::IdeAccount const & );
            
            IdeAccount_exposer.def( 
                "getViewMode"
                , getViewMode_function_type( &getViewMode_98d29313367d7f861bae8611f2fbd1f0 ) );
        
        }
        { //::osiris::IdeAccount::getRealPassword
        
            typedef boost::python::object ( *getRealPassword_function_type )( ::osiris::IdeAccount const & );
            
            IdeAccount_exposer.def( 
                "getRealPassword"
                , getRealPassword_function_type( &getRealPassword_d53598a3acadaa31368300343fb195e9 ) );
        
        }
        { //::osiris::IdeAccount::getLastAccessDate
        
            typedef boost::python::object ( *getLastAccessDate_function_type )( ::osiris::IdeAccount const & );
            
            IdeAccount_exposer.def( 
                "getLastAccessDate"
                , getLastAccessDate_function_type( &getLastAccessDate_e990670d71b3b5daa641b42a04079b21 ) );
        
        }
        { //::osiris::IdeAccount::getReferenceDate
        
            typedef boost::python::object ( *getReferenceDate_function_type )( ::osiris::IdeAccount const & );
            
            IdeAccount_exposer.def( 
                "getReferenceDate"
                , getReferenceDate_function_type( &getReferenceDate_59cd64530a087aecc437bfd24f12085a ) );
        
        }
        { //::osiris::IdeAccount::loadUser
        
            typedef boost::python::object ( *loadUser_function_type )( ::osiris::IdeAccount &,::boost::shared_ptr<osiris::IPortalDatabase> );
            
            IdeAccount_exposer.def( 
                "loadUser"
                , loadUser_function_type( &loadUser_5381223bdd14a1cb552676cc3e4963b0 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("database") ) );
        
        }
        { //::osiris::IdeAccount::setDeleted
        
            typedef void ( *setDeleted_function_type )( ::osiris::IdeAccount &,bool );
            
            IdeAccount_exposer.def( 
                "setDeleted"
                , setDeleted_function_type( &setDeleted_b4ae39b903f379b56443ccba25462e35 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("deleted") ) );
        
        }
        { //::osiris::IdeAccount::setLanguage
        
            typedef void ( *setLanguage_function_type )( ::osiris::IdeAccount &,::osiris::String const & );
            
            IdeAccount_exposer.def( 
                "setLanguage"
                , setLanguage_function_type( &setLanguage_61a9177a427acbf11546e9892d7c93ed )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("language") ) );
        
        }
        { //::osiris::IdeAccount::setLastAccessDate
        
            typedef void ( *setLastAccessDate_function_type )( ::osiris::IdeAccount &,::osiris::DateTime const & );
            
            IdeAccount_exposer.def( 
                "setLastAccessDate"
                , setLastAccessDate_function_type( &setLastAccessDate_53e47fb793a8eca66b10bb15f6fc329e )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("date") ) );
        
        }
        { //::osiris::IdeAccount::setName
        
            typedef void ( *setName_function_type )( ::osiris::IdeAccount &,::osiris::String const & );
            
            IdeAccount_exposer.def( 
                "setName"
                , setName_function_type( &setName_7e0f0196bb506cd98d780b9957335c89 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("name") ) );
        
        }
        { //::osiris::IdeAccount::setRealPassword
        
            typedef boost::python::object ( *setRealPassword_function_type )( ::osiris::IdeAccount &,::osiris::String const & );
            
            IdeAccount_exposer.def( 
                "setRealPassword"
                , setRealPassword_function_type( &setRealPassword_4b0a43e67c44fcfaf6525a5c62198247 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("password") ) );
        
        }
        { //::osiris::IdeAccount::setReferenceDate
        
            typedef void ( *setReferenceDate_function_type )( ::osiris::IdeAccount &,::osiris::DateTime const & );
            
            IdeAccount_exposer.def( 
                "setReferenceDate"
                , setReferenceDate_function_type( &setReferenceDate_db89e02c3ee13a79f2b257d46505d5e4 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("date") ) );
        
        }
        { //::osiris::IdeAccount::setSkin
        
            typedef void ( *setSkin_function_type )( ::osiris::IdeAccount &,::osiris::UniqueID const & );
            
            IdeAccount_exposer.def( 
                "setSkin"
                , setSkin_function_type( &setSkin_3eedd8cad4d9c2aa06f811d0c145a2df )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("id") ) );
        
        }
        { //::osiris::IdeAccount::setViewMode
        
            typedef void ( *setViewMode_function_type )( ::osiris::IdeAccount &,::osiris::DataViewMode );
            
            IdeAccount_exposer.def( 
                "setViewMode"
                , setViewMode_function_type( &setViewMode_b6f13a21a963298e5a758881d863a5ad )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("mode") ) );
        
        }
        { //::osiris::IdeAccount::updateAccount
        
            typedef boost::python::object ( *updateAccount_function_type )( ::osiris::IdeAccount &,::boost::shared_ptr<osiris::IPortalDatabase> );
            
            IdeAccount_exposer.def( 
                "updateAccount"
                , updateAccount_function_type( &updateAccount_80c9225a49ef480388fae791d79bb6e8 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("database") ) );
        
        }
        { //property "name"[fget=::osiris::IdeAccount::getName, fset=::osiris::IdeAccount::setName]
        
            typedef ::osiris::String const & ( ::osiris::IdeAccount::*fget )(  ) const;
            typedef void ( ::osiris::IdeAccount::*fset )( ::osiris::String const & ) ;
            
            IdeAccount_exposer.add_property( 
                "name"
                , ::boost::python::make_function( 
                      fget( &::osiris::IdeAccount::getName )
                    , bp::return_value_policy< bp::copy_const_reference >() ) 
                , fset( &::osiris::IdeAccount::setName )
                , "get\\set property, built on top of \"osiris::String const & osiris::IdeAccount::getName() const [member function]\" and \"void osiris::IdeAccount::setName(osiris::String const & name) [member function]\"" );
        
        }
        { //property "language"[fget=::osiris::IdeAccount::getLanguage, fset=::osiris::IdeAccount::setLanguage]
        
            typedef ::osiris::String ( ::osiris::IdeAccount::*fget )(  ) const;
            typedef void ( ::osiris::IdeAccount::*fset )( ::osiris::String const & ) ;
            
            IdeAccount_exposer.add_property( 
                "language"
                , fget( &::osiris::IdeAccount::getLanguage )
                , fset( &::osiris::IdeAccount::setLanguage )
                , "get\\set property, built on top of \"osiris::String osiris::IdeAccount::getLanguage() const [member function]\" and \"void osiris::IdeAccount::setLanguage(osiris::String const & language) [member function]\"" );
        
        }
        { //property "deleted"[fget=::osiris::IdeAccount::getDeleted, fset=::osiris::IdeAccount::setDeleted]
        
            typedef bool ( ::osiris::IdeAccount::*fget )(  ) const;
            typedef void ( ::osiris::IdeAccount::*fset )( bool ) ;
            
            IdeAccount_exposer.add_property( 
                "deleted"
                , fget( &::osiris::IdeAccount::getDeleted )
                , fset( &::osiris::IdeAccount::setDeleted )
                , "get\\set property, built on top of \"bool osiris::IdeAccount::getDeleted() const [member function]\" and \"void osiris::IdeAccount::setDeleted(bool deleted) [member function]\"" );
        
        }
        { //property "viewMode"[fget=::osiris::IdeAccount::getViewMode, fset=::osiris::IdeAccount::setViewMode]
        
            typedef ::osiris::DataViewMode ( ::osiris::IdeAccount::*fget )(  ) const;
            typedef void ( ::osiris::IdeAccount::*fset )( ::osiris::DataViewMode ) ;
            
            IdeAccount_exposer.add_property( 
                "viewMode"
                , fget( &::osiris::IdeAccount::getViewMode )
                , fset( &::osiris::IdeAccount::setViewMode )
                , "get\\set property, built on top of \"osiris::DataViewMode osiris::IdeAccount::getViewMode() const [member function]\" and \"void osiris::IdeAccount::setViewMode(osiris::DataViewMode mode) [member function]\"" );
        
        }
        { //property "lastAccessDate"[fget=::osiris::IdeAccount::getLastAccessDate, fset=::osiris::IdeAccount::setLastAccessDate]
        
            typedef ::osiris::DateTime const & ( ::osiris::IdeAccount::*fget )(  ) const;
            typedef void ( ::osiris::IdeAccount::*fset )( ::osiris::DateTime const & ) ;
            
            IdeAccount_exposer.add_property( 
                "lastAccessDate"
                , ::boost::python::make_function( 
                      fget( &::osiris::IdeAccount::getLastAccessDate )
                    , bp::return_value_policy< bp::copy_const_reference >() ) 
                , fset( &::osiris::IdeAccount::setLastAccessDate )
                , "get\\set property, built on top of \"osiris::DateTime const & osiris::IdeAccount::getLastAccessDate() const [member function]\" and \"void osiris::IdeAccount::setLastAccessDate(osiris::DateTime const & date) [member function]\"" );
        
        }
        { //property "referenceDate"[fget=::osiris::IdeAccount::getReferenceDate, fset=::osiris::IdeAccount::setReferenceDate]
        
            typedef ::osiris::DateTime const & ( ::osiris::IdeAccount::*fget )(  ) const;
            typedef void ( ::osiris::IdeAccount::*fset )( ::osiris::DateTime const & ) ;
            
            IdeAccount_exposer.add_property( 
                "referenceDate"
                , ::boost::python::make_function( 
                      fget( &::osiris::IdeAccount::getReferenceDate )
                    , bp::return_value_policy< bp::copy_const_reference >() ) 
                , fset( &::osiris::IdeAccount::setReferenceDate )
                , "get\\set property, built on top of \"osiris::DateTime const & osiris::IdeAccount::getReferenceDate() const [member function]\" and \"void osiris::IdeAccount::setReferenceDate(osiris::DateTime const & date) [member function]\"" );
        
        }
        { //property "account"[fget=::osiris::IdeAccount::getAccount]
        
            typedef ::boost::shared_ptr<osiris::DataAccount> ( ::osiris::IdeAccount::*fget )(  ) const;
            
            IdeAccount_exposer.add_property( 
                "account"
                , fget( &::osiris::IdeAccount::getAccount )
                , "get property, built on top of \"boost::shared_ptr<osiris::DataAccount> osiris::IdeAccount::getAccount() const [member function]\"" );
        
        }
        { //property "id"[fget=::osiris::IdeAccount::getID]
        
            typedef ::osiris::String const & ( ::osiris::IdeAccount::*fget )(  ) const;
            
            IdeAccount_exposer.add_property( 
                "id"
                , ::boost::python::make_function( 
                      fget( &::osiris::IdeAccount::getID )
                    , bp::return_value_policy< bp::copy_const_reference >() ) 
                , "get property, built on top of \"osiris::String const & osiris::IdeAccount::getID() const [member function]\"" );
        
        }
        { //property "skinID"[fget=::osiris::IdeAccount::getSkinID]
        
            typedef ::osiris::UniqueID ( ::osiris::IdeAccount::*fget )(  ) const;
            
            IdeAccount_exposer.add_property( 
                "skinID"
                , fget( &::osiris::IdeAccount::getSkinID )
                , "get property, built on top of \"osiris::UniqueID osiris::IdeAccount::getSkinID() const [member function]\"" );
        
        }
        { //property "realPassword"[fget=::osiris::IdeAccount::getRealPassword]
        
            typedef ::osiris::String const & ( ::osiris::IdeAccount::*fget )(  ) const;
            
            IdeAccount_exposer.add_property( 
                "realPassword"
                , ::boost::python::make_function( 
                      fget( &::osiris::IdeAccount::getRealPassword )
                    , bp::return_value_policy< bp::copy_const_reference >() ) 
                , "get property, built on top of \"osiris::String const & osiris::IdeAccount::getRealPassword() const [member function]\"" );
        
        }
        ::boost::python::register_ptr_to_python< boost::shared_ptr< ::osiris::IdeAccount > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IdeAccount >, boost::shared_ptr< ::osiris::Object > >();
    }

}
