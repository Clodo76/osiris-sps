// This file has been generated by Py++.

#include "stdafx.h"
#include "pypluspluscommon.h"
#include "boost/python.hpp"
#include "__call_policies.pypp.hpp"
#include "xmlnodes.h"
#include "datetime.h"
#include "xmlnode.h"
#include "xmlnodes.pypp.hpp"

namespace bp = boost::python;

static boost::python::object getNode_3c633a1bb16d579f7abf6110df71d721( ::osiris::XMLNodes & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::XMLNode & result = inst.getNode();
    __pythreadSaver.restore();
    typedef bp::return_value_policy< bp::reference_existing_object > call_policies_t;
    return boost::python::object( pyplusplus::call_policies::make_object< call_policies_t, ::osiris::XMLNode & >( result ) );
}

static boost::python::object getNode_daf4419d80b8c9cfb243f96979a92cdb( ::osiris::XMLNodes const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::XMLNode const & result = inst.getNode();
    __pythreadSaver.restore();
    typedef bp::return_value_policy< bp::copy_const_reference > call_policies_t;
    return boost::python::object( pyplusplus::call_policies::make_object< call_policies_t, ::osiris::XMLNode const & >( result ) );
}

static boost::python::object empty_d6f364c3672fcc6f04fe4087a7cff73e( ::osiris::XMLNodes const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    bool result = inst.empty();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object size_6cf4aca395fedde0d05627dc43eb66e8( ::osiris::XMLNodes const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::uint32 result = inst.size();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static void clear_37afb558d4f0e2634c0bd84d7accca3b( ::osiris::XMLNodes & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.clear();
    __pythreadSaver.restore();
}

static boost::python::object add_cc461580a7929bbf7b77bb62a19d9b46( ::osiris::XMLNodes & inst, ::boost::shared_ptr< osiris::XMLNode > node ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::boost::shared_ptr<osiris::XMLNode> result = inst.add(node);
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object add_4288f2b3474a2847113027f42b9138cd( ::osiris::XMLNodes & inst, ::osiris::String const & name ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::boost::shared_ptr<osiris::XMLNode> result = inst.add(name);
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object find_13d9ed344d6873adbf9fbf0a24e90f81( ::osiris::XMLNodes const & inst, ::osiris::String const & name ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::boost::shared_ptr<osiris::XMLNode> result = inst.find(name);
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object find_bb833aeb2ebfcbac2ce9a6cf8cbb3d30( ::osiris::XMLNodes const & inst, ::size_t index ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::boost::shared_ptr<osiris::XMLNode> result = inst.find(index);
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static void push_back_5f0c30a5290d41cf8b4f172e76b30811( ::osiris::XMLNodes & inst, ::boost::shared_ptr< osiris::XMLNode > node ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.push_back(node);
    __pythreadSaver.restore();
}

static void push_front_362aeeb061ba2e1ed764a5e5da8f94d8( ::osiris::XMLNodes & inst, ::boost::shared_ptr< osiris::XMLNode > node ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.push_front(node);
    __pythreadSaver.restore();
}

static void remove_4108151c8681839513623ecbbb533189( ::osiris::XMLNodes & inst, ::osiris::String const & name ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.remove(name);
    __pythreadSaver.restore();
}

void register_XMLNodes_class(){

    { //::osiris::XMLNodes
        typedef ::boost::python::class_< ::osiris::XMLNodes > XMLNodes_exposer_t;
        XMLNodes_exposer_t XMLNodes_exposer = XMLNodes_exposer_t( "XMLNodes", ::boost::python::init< ::osiris::XMLNode & >(( ::boost::python::arg("node") )) );
        ::boost::python::scope XMLNodes_scope( XMLNodes_exposer );
        ::boost::python::implicitly_convertible< ::osiris::XMLNode &, ::osiris::XMLNodes >();
        { //::osiris::XMLNodes::getNode
        
            typedef boost::python::object ( *getNode_function_type )( ::osiris::XMLNodes & );
            
            XMLNodes_exposer.def( 
                "getNode"
                , getNode_function_type( &getNode_3c633a1bb16d579f7abf6110df71d721 ) );
        
        }
        { //::osiris::XMLNodes::getNode
        
            typedef boost::python::object ( *getNode_function_type )( ::osiris::XMLNodes const & );
            
            XMLNodes_exposer.def( 
                "getNode"
                , getNode_function_type( &getNode_daf4419d80b8c9cfb243f96979a92cdb ) );
        
        }
        { //::osiris::XMLNodes::empty
        
            typedef boost::python::object ( *empty_function_type )( ::osiris::XMLNodes const & );
            
            XMLNodes_exposer.def( 
                "empty"
                , empty_function_type( &empty_d6f364c3672fcc6f04fe4087a7cff73e ) );
        
        }
        { //::osiris::XMLNodes::size
        
            typedef boost::python::object ( *size_function_type )( ::osiris::XMLNodes const & );
            
            XMLNodes_exposer.def( 
                "size"
                , size_function_type( &size_6cf4aca395fedde0d05627dc43eb66e8 ) );
        
        }
        { //::osiris::XMLNodes::clear
        
            typedef void ( *clear_function_type )( ::osiris::XMLNodes & );
            
            XMLNodes_exposer.def( 
                "clear"
                , clear_function_type( &clear_37afb558d4f0e2634c0bd84d7accca3b ) );
        
        }
        { //::osiris::XMLNodes::add
        
            typedef boost::python::object ( *add_function_type )( ::osiris::XMLNodes &,::boost::shared_ptr<osiris::XMLNode> );
            
            XMLNodes_exposer.def( 
                "add"
                , add_function_type( &add_cc461580a7929bbf7b77bb62a19d9b46 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("node") ) );
        
        }
        { //::osiris::XMLNodes::add
        
            typedef boost::python::object ( *add_function_type )( ::osiris::XMLNodes &,::osiris::String const & );
            
            XMLNodes_exposer.def( 
                "add"
                , add_function_type( &add_4288f2b3474a2847113027f42b9138cd )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("name") ) );
        
        }
        { //::osiris::XMLNodes::find
        
            typedef boost::python::object ( *find_function_type )( ::osiris::XMLNodes const &,::osiris::String const & );
            
            XMLNodes_exposer.def( 
                "find"
                , find_function_type( &find_13d9ed344d6873adbf9fbf0a24e90f81 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("name") ) );
        
        }
        { //::osiris::XMLNodes::find
        
            typedef boost::python::object ( *find_function_type )( ::osiris::XMLNodes const &,::size_t );
            
            XMLNodes_exposer.def( 
                "find"
                , find_function_type( &find_bb833aeb2ebfcbac2ce9a6cf8cbb3d30 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("index") ) );
        
        }
        { //::osiris::XMLNodes::push_back
        
            typedef void ( *push_back_function_type )( ::osiris::XMLNodes &,::boost::shared_ptr<osiris::XMLNode> );
            
            XMLNodes_exposer.def( 
                "push_back"
                , push_back_function_type( &push_back_5f0c30a5290d41cf8b4f172e76b30811 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("node") ) );
        
        }
        { //::osiris::XMLNodes::push_front
        
            typedef void ( *push_front_function_type )( ::osiris::XMLNodes &,::boost::shared_ptr<osiris::XMLNode> );
            
            XMLNodes_exposer.def( 
                "push_front"
                , push_front_function_type( &push_front_362aeeb061ba2e1ed764a5e5da8f94d8 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("node") ) );
        
        }
        { //::osiris::XMLNodes::remove
        
            typedef void ( *remove_function_type )( ::osiris::XMLNodes &,::osiris::String const & );
            
            XMLNodes_exposer.def( 
                "remove"
                , remove_function_type( &remove_4108151c8681839513623ecbbb533189 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("name") ) );
        
        }
        ::boost::python::register_ptr_to_python< boost::shared_ptr< ::osiris::XMLNodes > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::XMLNodes >, boost::shared_ptr< ::osiris::Object > >();
    }

}
