// This file has been generated by Py++.

#include "stdafx.h"
#include "pypluspluscommon.h"
#include "boost/python.hpp"
#include "__call_policies.pypp.hpp"
#include "xmlmanager.h"
#include "httpurl.h"
#include "xmldocument.h"
#include "xmlmanager.pypp.hpp"

namespace bp = boost::python;

struct XMLManager_wrapper : ::osiris::XMLManager, ::osiris::PythonWrapper< ::osiris::XMLManager > {

    XMLManager_wrapper( )
    : ::osiris::XMLManager( )
      , ::osiris::PythonWrapper< ::osiris::XMLManager >(){
        // null constructor
    
    }

    static boost::python::object parseBuffer( ::osiris::XMLManager & inst, ::osiris::Buffer const & buffer, ::osiris::IXMLHandler * handler, ::boost::shared_ptr< osiris::XMLSchema > schema=(nullptr), ::osiris::String const & encoding=("UTF-8") ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.parseBuffer(buffer, handler, schema, encoding);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object parseFile( ::osiris::XMLManager & inst, ::osiris::String const & filename, ::osiris::IXMLHandler * handler, ::boost::shared_ptr< osiris::XMLSchema > schema=(nullptr) ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.parseFile(filename, handler, schema);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object parseString( ::osiris::XMLManager & inst, ::osiris::String const & str, ::osiris::IXMLHandler * handler, ::boost::shared_ptr< osiris::XMLSchema > schema=(nullptr) ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.parseString(str, handler, schema);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object parseStringUTF8( ::osiris::XMLManager & inst, ::std::string const & str, ::osiris::IXMLHandler * handler, ::boost::shared_ptr< osiris::XMLSchema > schema=(nullptr) ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.parseStringUTF8(str, handler, schema);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object parseStream( ::osiris::XMLManager & inst, ::boost::shared_ptr< osiris::IStream > stream, ::osiris::IXMLHandler * handler, ::boost::shared_ptr< osiris::XMLSchema > schema=(nullptr), ::osiris::String const & encoding=("UTF-8") ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.parseStream(stream, handler, schema, encoding);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object parseUrl( ::osiris::XMLManager & inst, ::osiris::HttpUrl const & url, ::osiris::IXMLHandler * handler, ::osiris::String const & userAgent, ::boost::shared_ptr< boost::asio::io_service > service, ::boost::shared_ptr< osiris::TCPSocket > socket, ::boost::shared_ptr< osiris::XMLSchema > schema=(nullptr) ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.parseUrl(url, handler, userAgent, service, socket, schema);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object writeBuffer( ::osiris::XMLManager const & inst, ::osiris::XMLDocument const & document, ::osiris::Buffer & buffer, ::osiris::String const & encoding=("UTF-8") ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.writeBuffer(document, buffer, encoding);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object writeFile( ::osiris::XMLManager const & inst, ::osiris::XMLDocument const & document, ::osiris::String const & filename, ::osiris::String const & encoding=("UTF-8") ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.writeFile(document, filename, encoding);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object writeString( ::osiris::XMLManager const & inst, ::osiris::XMLDocument const & document, ::osiris::String & str ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.writeString(document, str);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object writeStringUTF8( ::osiris::XMLManager const & inst, ::osiris::XMLDocument const & document, ::std::string & str ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.writeStringUTF8(document, str);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object writeStream( ::osiris::XMLManager const & inst, ::osiris::XMLDocument const & document, ::boost::shared_ptr< osiris::IStream > stream, ::osiris::String const & encoding=("UTF-8") ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.writeStream(document, stream, encoding);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object validateBuffer( ::osiris::XMLManager const & inst, ::osiris::Buffer const & buffer, ::boost::shared_ptr< osiris::XMLSchema > schema=(nullptr) ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.validateBuffer(buffer, schema);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object validateFile( ::osiris::XMLManager const & inst, ::osiris::String const & filename, ::boost::shared_ptr< osiris::XMLSchema > schema=(nullptr) ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.validateFile(filename, schema);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object validateString( ::osiris::XMLManager const & inst, ::osiris::String const & str, ::boost::shared_ptr< osiris::XMLSchema > schema=(nullptr) ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.validateString(str, schema);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

};

void register_XMLManager_class(){

    ::boost::python::class_< XMLManager_wrapper, ::boost::python::bases< ::osiris::StaticSingleton< osiris::XMLManager, true > >, ::boost::noncopyable >( "XMLManager", ::boost::python::no_init )    
        .def( ::boost::python::init< >() )    
        .def( 
            "parseBuffer"
            , (boost::python::object (*)( ::osiris::XMLManager &,::osiris::Buffer const &,::osiris::IXMLHandler *,::boost::shared_ptr<osiris::XMLSchema>,::osiris::String const & ))( &XMLManager_wrapper::parseBuffer )
            , ( ::boost::python::arg("inst"), ::boost::python::arg("buffer"), ::boost::python::arg("handler"), ::boost::python::arg("schema")=(nullptr), ::boost::python::arg("encoding")=("UTF-8") ) )    
        .def( 
            "parseFile"
            , (boost::python::object (*)( ::osiris::XMLManager &,::osiris::String const &,::osiris::IXMLHandler *,::boost::shared_ptr<osiris::XMLSchema> ))( &XMLManager_wrapper::parseFile )
            , ( ::boost::python::arg("inst"), ::boost::python::arg("filename"), ::boost::python::arg("handler"), ::boost::python::arg("schema")=(nullptr) ) )    
        .def( 
            "parseString"
            , (boost::python::object (*)( ::osiris::XMLManager &,::osiris::String const &,::osiris::IXMLHandler *,::boost::shared_ptr<osiris::XMLSchema> ))( &XMLManager_wrapper::parseString )
            , ( ::boost::python::arg("inst"), ::boost::python::arg("str"), ::boost::python::arg("handler"), ::boost::python::arg("schema")=(nullptr) ) )    
        .def( 
            "parseStringUTF8"
            , (boost::python::object (*)( ::osiris::XMLManager &,::std::string const &,::osiris::IXMLHandler *,::boost::shared_ptr<osiris::XMLSchema> ))( &XMLManager_wrapper::parseStringUTF8 )
            , ( ::boost::python::arg("inst"), ::boost::python::arg("str"), ::boost::python::arg("handler"), ::boost::python::arg("schema")=(nullptr) ) )    
        .def( 
            "parseStream"
            , (boost::python::object (*)( ::osiris::XMLManager &,::boost::shared_ptr<osiris::IStream>,::osiris::IXMLHandler *,::boost::shared_ptr<osiris::XMLSchema>,::osiris::String const & ))( &XMLManager_wrapper::parseStream )
            , ( ::boost::python::arg("inst"), ::boost::python::arg("stream"), ::boost::python::arg("handler"), ::boost::python::arg("schema")=(nullptr), ::boost::python::arg("encoding")=("UTF-8") ) )    
        .def( 
            "parseUrl"
            , (boost::python::object (*)( ::osiris::XMLManager &,::osiris::HttpUrl const &,::osiris::IXMLHandler *,::osiris::String const &,::boost::shared_ptr<boost::asio::io_service>,::boost::shared_ptr<osiris::TCPSocket>,::boost::shared_ptr<osiris::XMLSchema> ))( &XMLManager_wrapper::parseUrl )
            , ( ::boost::python::arg("inst"), ::boost::python::arg("url"), ::boost::python::arg("handler"), ::boost::python::arg("userAgent"), ::boost::python::arg("service"), ::boost::python::arg("socket"), ::boost::python::arg("schema")=(nullptr) ) )    
        .def( 
            "writeBuffer"
            , (boost::python::object (*)( ::osiris::XMLManager const &,::osiris::XMLDocument const &,::osiris::Buffer &,::osiris::String const & ))( &XMLManager_wrapper::writeBuffer )
            , ( ::boost::python::arg("inst"), ::boost::python::arg("document"), ::boost::python::arg("buffer"), ::boost::python::arg("encoding")=("UTF-8") ) )    
        .def( 
            "writeFile"
            , (boost::python::object (*)( ::osiris::XMLManager const &,::osiris::XMLDocument const &,::osiris::String const &,::osiris::String const & ))( &XMLManager_wrapper::writeFile )
            , ( ::boost::python::arg("inst"), ::boost::python::arg("document"), ::boost::python::arg("filename"), ::boost::python::arg("encoding")=("UTF-8") ) )    
        .def( 
            "writeString"
            , (boost::python::object (*)( ::osiris::XMLManager const &,::osiris::XMLDocument const &,::osiris::String & ))( &XMLManager_wrapper::writeString )
            , ( ::boost::python::arg("inst"), ::boost::python::arg("document"), ::boost::python::arg("str") ) )    
        .def( 
            "writeStringUTF8"
            , (boost::python::object (*)( ::osiris::XMLManager const &,::osiris::XMLDocument const &,::std::string & ))( &XMLManager_wrapper::writeStringUTF8 )
            , ( ::boost::python::arg("inst"), ::boost::python::arg("document"), ::boost::python::arg("str") ) )    
        .def( 
            "writeStream"
            , (boost::python::object (*)( ::osiris::XMLManager const &,::osiris::XMLDocument const &,::boost::shared_ptr<osiris::IStream>,::osiris::String const & ))( &XMLManager_wrapper::writeStream )
            , ( ::boost::python::arg("inst"), ::boost::python::arg("document"), ::boost::python::arg("stream"), ::boost::python::arg("encoding")=("UTF-8") ) )    
        .def( 
            "validateBuffer"
            , (boost::python::object (*)( ::osiris::XMLManager const &,::osiris::Buffer const &,::boost::shared_ptr<osiris::XMLSchema> ))( &XMLManager_wrapper::validateBuffer )
            , ( ::boost::python::arg("inst"), ::boost::python::arg("buffer"), ::boost::python::arg("schema")=(nullptr) ) )    
        .def( 
            "validateFile"
            , (boost::python::object (*)( ::osiris::XMLManager const &,::osiris::String const &,::boost::shared_ptr<osiris::XMLSchema> ))( &XMLManager_wrapper::validateFile )
            , ( ::boost::python::arg("inst"), ::boost::python::arg("filename"), ::boost::python::arg("schema")=(nullptr) ) )    
        .def( 
            "validateString"
            , (boost::python::object (*)( ::osiris::XMLManager const &,::osiris::String const &,::boost::shared_ptr<osiris::XMLSchema> ))( &XMLManager_wrapper::validateString )
            , ( ::boost::python::arg("inst"), ::boost::python::arg("str"), ::boost::python::arg("schema")=(nullptr) ) );

}
