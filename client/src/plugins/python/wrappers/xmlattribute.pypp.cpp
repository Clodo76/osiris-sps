// This file has been generated by Py++.

#include "stdafx.h"
#include "pypluspluscommon.h"
#include "boost/python.hpp"
#include "__call_policies.pypp.hpp"
#include "xmlattribute.h"
#include "xmlnode.h"
#include "xmlattribute.pypp.hpp"

namespace bp = boost::python;

static boost::python::object getNode_8ad4208f5cf271289dbc24b579febfe2( ::osiris::XMLAttribute & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::XMLNode & result = inst.getNode();
    __pythreadSaver.restore();
    typedef bp::return_value_policy< bp::reference_existing_object > call_policies_t;
    return boost::python::object( pyplusplus::call_policies::make_object< call_policies_t, ::osiris::XMLNode & >( result ) );
}

static boost::python::object getNode_8f4db62d18a7a733b4fcfa494e187972( ::osiris::XMLAttribute const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::XMLNode const & result = inst.getNode();
    __pythreadSaver.restore();
    typedef bp::return_value_policy< bp::copy_const_reference > call_policies_t;
    return boost::python::object( pyplusplus::call_policies::make_object< call_policies_t, ::osiris::XMLNode const & >( result ) );
}

static boost::python::object getName_acfc0eea1e952eb43ca254ea514881e3( ::osiris::XMLAttribute const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::String const & result = inst.getName();
    __pythreadSaver.restore();
    typedef bp::return_value_policy< bp::copy_const_reference > call_policies_t;
    return boost::python::object( pyplusplus::call_policies::make_object< call_policies_t, ::osiris::String const & >( result ) );
}

static boost::python::object getValue_8d07e6f4788c147b71884a3b95968270( ::osiris::XMLAttribute const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::String const & result = inst.getValue();
    __pythreadSaver.restore();
    typedef bp::return_value_policy< bp::copy_const_reference > call_policies_t;
    return boost::python::object( pyplusplus::call_policies::make_object< call_policies_t, ::osiris::String const & >( result ) );
}

static void setName_d67b3a373b0013675b94eedc00db89d1( ::osiris::XMLAttribute & inst, ::osiris::String const & name ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.setName(name);
    __pythreadSaver.restore();
}

static void setValue_5b5d4093a4a0ebca7bb2bf34bca1e191( ::osiris::XMLAttribute & inst, ::osiris::String const & value ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.setValue(value);
    __pythreadSaver.restore();
}

void register_XMLAttribute_class(){

    { //::osiris::XMLAttribute
        typedef ::boost::python::class_< ::osiris::XMLAttribute, ::boost::noncopyable > XMLAttribute_exposer_t;
        XMLAttribute_exposer_t XMLAttribute_exposer = XMLAttribute_exposer_t( "XMLAttribute", ::boost::python::init< ::osiris::XMLNode &, ::osiris::String const &, ::osiris::String const & >(( ::boost::python::arg("node"), ::boost::python::arg("name"), ::boost::python::arg("value") )) );
        ::boost::python::scope XMLAttribute_scope( XMLAttribute_exposer );
        { //::osiris::XMLAttribute::getNode
        
            typedef boost::python::object ( *getNode_function_type )( ::osiris::XMLAttribute & );
            
            XMLAttribute_exposer.def( 
                "getNode"
                , getNode_function_type( &getNode_8ad4208f5cf271289dbc24b579febfe2 ) );
        
        }
        { //::osiris::XMLAttribute::getNode
        
            typedef boost::python::object ( *getNode_function_type )( ::osiris::XMLAttribute const & );
            
            XMLAttribute_exposer.def( 
                "getNode"
                , getNode_function_type( &getNode_8f4db62d18a7a733b4fcfa494e187972 ) );
        
        }
        { //::osiris::XMLAttribute::getName
        
            typedef boost::python::object ( *getName_function_type )( ::osiris::XMLAttribute const & );
            
            XMLAttribute_exposer.def( 
                "getName"
                , getName_function_type( &getName_acfc0eea1e952eb43ca254ea514881e3 ) );
        
        }
        { //::osiris::XMLAttribute::getValue
        
            typedef boost::python::object ( *getValue_function_type )( ::osiris::XMLAttribute const & );
            
            XMLAttribute_exposer.def( 
                "getValue"
                , getValue_function_type( &getValue_8d07e6f4788c147b71884a3b95968270 ) );
        
        }
        { //::osiris::XMLAttribute::setName
        
            typedef void ( *setName_function_type )( ::osiris::XMLAttribute &,::osiris::String const & );
            
            XMLAttribute_exposer.def( 
                "setName"
                , setName_function_type( &setName_d67b3a373b0013675b94eedc00db89d1 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("name") ) );
        
        }
        { //::osiris::XMLAttribute::setValue
        
            typedef void ( *setValue_function_type )( ::osiris::XMLAttribute &,::osiris::String const & );
            
            XMLAttribute_exposer.def( 
                "setValue"
                , setValue_function_type( &setValue_5b5d4093a4a0ebca7bb2bf34bca1e191 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("value") ) );
        
        }
        { //property "name"[fget=::osiris::XMLAttribute::getName, fset=::osiris::XMLAttribute::setName]
        
            typedef ::osiris::String const & ( ::osiris::XMLAttribute::*fget )(  ) const;
            typedef void ( ::osiris::XMLAttribute::*fset )( ::osiris::String const & ) ;
            
            XMLAttribute_exposer.add_property( 
                "name"
                , ::boost::python::make_function( 
                      fget( &::osiris::XMLAttribute::getName )
                    , bp::return_value_policy< bp::copy_const_reference >() ) 
                , fset( &::osiris::XMLAttribute::setName )
                , "get\\set property, built on top of \"osiris::String const & osiris::XMLAttribute::getName() const [member function]\" and \"void osiris::XMLAttribute::setName(osiris::String const & name) [member function]\"" );
        
        }
        { //property "value"[fget=::osiris::XMLAttribute::getValue, fset=::osiris::XMLAttribute::setValue]
        
            typedef ::osiris::String const & ( ::osiris::XMLAttribute::*fget )(  ) const;
            typedef void ( ::osiris::XMLAttribute::*fset )( ::osiris::String const & ) ;
            
            XMLAttribute_exposer.add_property( 
                "value"
                , ::boost::python::make_function( 
                      fget( &::osiris::XMLAttribute::getValue )
                    , bp::return_value_policy< bp::copy_const_reference >() ) 
                , fset( &::osiris::XMLAttribute::setValue )
                , "get\\set property, built on top of \"osiris::String const & osiris::XMLAttribute::getValue() const [member function]\" and \"void osiris::XMLAttribute::setValue(osiris::String const & value) [member function]\"" );
        
        }
        ::boost::python::register_ptr_to_python< boost::shared_ptr< ::osiris::XMLAttribute > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::XMLAttribute >, boost::shared_ptr< ::osiris::Object > >();
    }

}
