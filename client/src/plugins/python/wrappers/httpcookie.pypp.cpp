// This file has been generated by Py++.

#include "stdafx.h"
#include "pypluspluscommon.h"
#include "boost/python.hpp"
#include "__call_policies.pypp.hpp"
#include "httpcookie.h"
#include "httpcookie.pypp.hpp"

namespace bp = boost::python;

static boost::python::object getName_9913c436116e25c42e8cec8476702865( ::osiris::HttpCookie const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::std::string const & result = inst.getName();
    __pythreadSaver.restore();
    typedef bp::return_value_policy< bp::copy_const_reference > call_policies_t;
    return boost::python::object( pyplusplus::call_policies::make_object< call_policies_t, ::std::string const & >( result ) );
}

static boost::python::object getValue_4ec340f42efcc7e1e2a3048eebfb750d( ::osiris::HttpCookie const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::std::string const & result = inst.getValue();
    __pythreadSaver.restore();
    typedef bp::return_value_policy< bp::copy_const_reference > call_policies_t;
    return boost::python::object( pyplusplus::call_policies::make_object< call_policies_t, ::std::string const & >( result ) );
}

static boost::python::object getExpires_18dcfdfc751f135a6f9ba7283f1819a7( ::osiris::HttpCookie const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::boost::posix_time::ptime const & result = inst.getExpires();
    __pythreadSaver.restore();
    typedef bp::return_value_policy< bp::copy_const_reference > call_policies_t;
    return boost::python::object( pyplusplus::call_policies::make_object< call_policies_t, ::boost::posix_time::ptime const & >( result ) );
}

static boost::python::object getDomain_bc2473ebadb19160905792bf79d21ba7( ::osiris::HttpCookie const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::std::string const & result = inst.getDomain();
    __pythreadSaver.restore();
    typedef bp::return_value_policy< bp::copy_const_reference > call_policies_t;
    return boost::python::object( pyplusplus::call_policies::make_object< call_policies_t, ::std::string const & >( result ) );
}

static boost::python::object getPath_1cc3b27c13c83458a70b372e08ae6a18( ::osiris::HttpCookie const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::std::string const & result = inst.getPath();
    __pythreadSaver.restore();
    typedef bp::return_value_policy< bp::copy_const_reference > call_policies_t;
    return boost::python::object( pyplusplus::call_policies::make_object< call_policies_t, ::std::string const & >( result ) );
}

static boost::python::object getSecure_92f13ce63bf463cc4a4f504c2ae7dcc2( ::osiris::HttpCookie const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    bool result = inst.getSecure();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

void register_HttpCookie_class(){

    { //::osiris::HttpCookie
        typedef ::boost::python::class_< ::osiris::HttpCookie > HttpCookie_exposer_t;
        HttpCookie_exposer_t HttpCookie_exposer = HttpCookie_exposer_t( "HttpCookie", ::boost::python::init< ::std::string const &, ::std::string const &, ::boost::posix_time::ptime const &, ::std::string const &, ::std::string const &, bool >(( ::boost::python::arg("name"), ::boost::python::arg("value"), ::boost::python::arg("expires"), ::boost::python::arg("domain"), ::boost::python::arg("path"), ::boost::python::arg("secure") )) );
        ::boost::python::scope HttpCookie_scope( HttpCookie_exposer );
        { //::osiris::HttpCookie::getName
        
            typedef boost::python::object ( *getName_function_type )( ::osiris::HttpCookie const & );
            
            HttpCookie_exposer.def( 
                "getName"
                , getName_function_type( &getName_9913c436116e25c42e8cec8476702865 ) );
        
        }
        { //::osiris::HttpCookie::getValue
        
            typedef boost::python::object ( *getValue_function_type )( ::osiris::HttpCookie const & );
            
            HttpCookie_exposer.def( 
                "getValue"
                , getValue_function_type( &getValue_4ec340f42efcc7e1e2a3048eebfb750d ) );
        
        }
        { //::osiris::HttpCookie::getExpires
        
            typedef boost::python::object ( *getExpires_function_type )( ::osiris::HttpCookie const & );
            
            HttpCookie_exposer.def( 
                "getExpires"
                , getExpires_function_type( &getExpires_18dcfdfc751f135a6f9ba7283f1819a7 ) );
        
        }
        { //::osiris::HttpCookie::getDomain
        
            typedef boost::python::object ( *getDomain_function_type )( ::osiris::HttpCookie const & );
            
            HttpCookie_exposer.def( 
                "getDomain"
                , getDomain_function_type( &getDomain_bc2473ebadb19160905792bf79d21ba7 ) );
        
        }
        { //::osiris::HttpCookie::getPath
        
            typedef boost::python::object ( *getPath_function_type )( ::osiris::HttpCookie const & );
            
            HttpCookie_exposer.def( 
                "getPath"
                , getPath_function_type( &getPath_1cc3b27c13c83458a70b372e08ae6a18 ) );
        
        }
        { //::osiris::HttpCookie::getSecure
        
            typedef boost::python::object ( *getSecure_function_type )( ::osiris::HttpCookie const & );
            
            HttpCookie_exposer.def( 
                "getSecure"
                , getSecure_function_type( &getSecure_92f13ce63bf463cc4a4f504c2ae7dcc2 ) );
        
        }
        HttpCookie_exposer.def_readonly( "MAX_EXPIRES_DATE", ::osiris::HttpCookie::MAX_EXPIRES_DATE );
        { //property "name"[fget=::osiris::HttpCookie::getName]
        
            typedef ::std::string const & ( ::osiris::HttpCookie::*fget )(  ) const;
            
            HttpCookie_exposer.add_property( 
                "name"
                , ::boost::python::make_function( 
                      fget( &::osiris::HttpCookie::getName )
                    , bp::return_value_policy< bp::copy_const_reference >() ) 
                , "get property, built on top of \"std::string const & osiris::HttpCookie::getName() const [member function]\"" );
        
        }
        { //property "value"[fget=::osiris::HttpCookie::getValue]
        
            typedef ::std::string const & ( ::osiris::HttpCookie::*fget )(  ) const;
            
            HttpCookie_exposer.add_property( 
                "value"
                , ::boost::python::make_function( 
                      fget( &::osiris::HttpCookie::getValue )
                    , bp::return_value_policy< bp::copy_const_reference >() ) 
                , "get property, built on top of \"std::string const & osiris::HttpCookie::getValue() const [member function]\"" );
        
        }
        { //property "expires"[fget=::osiris::HttpCookie::getExpires]
        
            typedef ::boost::posix_time::ptime const & ( ::osiris::HttpCookie::*fget )(  ) const;
            
            HttpCookie_exposer.add_property( 
                "expires"
                , ::boost::python::make_function( 
                      fget( &::osiris::HttpCookie::getExpires )
                    , bp::return_value_policy< bp::copy_const_reference >() ) 
                , "get property, built on top of \"boost::posix_time::ptime const & osiris::HttpCookie::getExpires() const [member function]\"" );
        
        }
        { //property "domain"[fget=::osiris::HttpCookie::getDomain]
        
            typedef ::std::string const & ( ::osiris::HttpCookie::*fget )(  ) const;
            
            HttpCookie_exposer.add_property( 
                "domain"
                , ::boost::python::make_function( 
                      fget( &::osiris::HttpCookie::getDomain )
                    , bp::return_value_policy< bp::copy_const_reference >() ) 
                , "get property, built on top of \"std::string const & osiris::HttpCookie::getDomain() const [member function]\"" );
        
        }
        { //property "path"[fget=::osiris::HttpCookie::getPath]
        
            typedef ::std::string const & ( ::osiris::HttpCookie::*fget )(  ) const;
            
            HttpCookie_exposer.add_property( 
                "path"
                , ::boost::python::make_function( 
                      fget( &::osiris::HttpCookie::getPath )
                    , bp::return_value_policy< bp::copy_const_reference >() ) 
                , "get property, built on top of \"std::string const & osiris::HttpCookie::getPath() const [member function]\"" );
        
        }
        { //property "secure"[fget=::osiris::HttpCookie::getSecure]
        
            typedef bool ( ::osiris::HttpCookie::*fget )(  ) const;
            
            HttpCookie_exposer.add_property( 
                "secure"
                , fget( &::osiris::HttpCookie::getSecure )
                , "get property, built on top of \"bool osiris::HttpCookie::getSecure() const [member function]\"" );
        
        }
    }

}
