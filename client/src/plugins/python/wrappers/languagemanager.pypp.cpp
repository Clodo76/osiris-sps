// This file has been generated by Py++.

#include "stdafx.h"
#include "pypluspluscommon.h"
#include "boost/python.hpp"
#include "__call_policies.pypp.hpp"
#include "languagemanager.h"
#include "languageculture.h"
#include "languagefolder.h"
#include "languagemanager.pypp.hpp"

namespace bp = boost::python;

static boost::python::object getAlternative_62b6db6348092b546ccbb882bdf08d4d( ::osiris::LanguageManager const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::String result = inst.getAlternative();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getDumpKey_cff335f3b7a93172f44a0ff584d95ad6( ::osiris::LanguageManager const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    bool result = inst.getDumpKey();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getInvariant_3a6e52d3b1254bc20ba9de9c3a081a09( ::osiris::LanguageManager const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::boost::shared_ptr<osiris::LanguageCulture> result = inst.getInvariant();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getRootFolder_64f5026cb0721f4559c025390f208cc7( ::osiris::LanguageManager const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::boost::shared_ptr<osiris::LanguageFolder> result = inst.getRootFolder();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getFolders_6f410da03f6d520955b2ca1f5ded8b57( ::osiris::LanguageManager const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::std::list<boost::shared_ptr<osiris::LanguageFolder>, osiris::StdAllocator<boost::shared_ptr<osiris::LanguageFolder>, osiris::SysAllocator<boost::shared_ptr<osiris::LanguageFolder> > > > result = inst.getFolders();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getCultures_ad0e9e448e35c3a9633218cfdb7d58c5( ::osiris::LanguageManager & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::boost::unordered::unordered_map<osiris::String, boost::shared_ptr<osiris::LanguageCulture>, boost::hash<osiris::String>, std::equal_to<osiris::String>, osiris::StdAllocator<std::pair<osiris::String const, boost::shared_ptr<osiris::LanguageCulture> >, osiris::SysAllocator<std::pair<osiris::String const, boost::shared_ptr<osiris::LanguageCulture> > > > > & result = inst.getCultures();
    __pythreadSaver.restore();
    typedef bp::return_value_policy< bp::reference_existing_object > call_policies_t;
    return boost::python::object( pyplusplus::call_policies::make_object< call_policies_t, ::boost::unordered::unordered_map<osiris::String, boost::shared_ptr<osiris::LanguageCulture>, boost::hash<osiris::String>, std::equal_to<osiris::String>, osiris::StdAllocator<std::pair<osiris::String const, boost::shared_ptr<osiris::LanguageCulture> >, osiris::SysAllocator<std::pair<osiris::String const, boost::shared_ptr<osiris::LanguageCulture> > > > > & >( result ) );
}

static void clear_4b74f324801acef930d55cdc8bba5852( ::osiris::LanguageManager & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.clear();
    __pythreadSaver.restore();
}

static boost::python::object getText_cbc7b3c3d764b1f663cb22cda1b2a032( ::osiris::LanguageManager const & inst, ::osiris::String const & culture, ::osiris::String const & name ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::String result = inst.getText(culture, name);
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getText_ca75a8c2a6deefddb3a20fe3db1ba709( ::osiris::LanguageManager const & inst, ::osiris::String const & culture, ::osiris::LanguageResult const & result ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::String result2 = inst.getText(culture, result);
    __pythreadSaver.restore();
    return boost::python::object( result2 );
}

static void notifyKey_a9003941009c1bdbd816c8b5df747162( ::osiris::LanguageManager const & inst, ::osiris::String const & culture, ::osiris::String const & name, ::osiris::String const & value ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.notifyKey(culture, name, value);
    __pythreadSaver.restore();
}

static void notifyUnknownKey_2a5a0528ac5182769ade38fe2d15360f( ::osiris::LanguageManager const & inst, ::osiris::String const & culture, ::osiris::String const & name ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.notifyUnknownKey(culture, name);
    __pythreadSaver.restore();
}

static boost::python::object addFolder_badfe0821c8168ee2f80058edfa20130( ::osiris::LanguageManager & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::boost::shared_ptr<osiris::LanguageFolder> result = inst.addFolder();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static void addFolder_aeed1e748b70b183d22997b168788668( ::osiris::LanguageManager & inst, ::boost::shared_ptr< osiris::LanguageFolder > arg0 ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.addFolder(arg0);
    __pythreadSaver.restore();
}

static void addListener_4294287e201ace392e995e4acdb9b52b( ::osiris::LanguageManager & inst, ::boost::shared_ptr< osiris::LanguageFolderListener > listener ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.addListener(listener);
    __pythreadSaver.restore();
}

static boost::python::object getCulture_7957c0064b81a74be5305bf1b04f2142( ::osiris::LanguageManager const & inst, ::osiris::String const & id ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::boost::shared_ptr<osiris::LanguageCulture> result = inst.getCulture(id);
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object hasCulture_7d6eee83896744411b4ba0bfd5739b03( ::osiris::LanguageManager const & inst, ::osiris::String const & id ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    bool result = inst.hasCulture(id);
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object hasCultureNotNeutral_c339f8a7de1188d53e95d6e768231861( ::osiris::LanguageManager const & inst, ::osiris::String const & id ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    bool result = inst.hasCultureNotNeutral(id);
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static void loadCultures_0a83ed5d464374932cebcc533bbcc68e( ::osiris::LanguageManager & inst, ::osiris::String const & path ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.loadCultures(path);
    __pythreadSaver.restore();
}

static boost::python::object localize_75f28dc0a144354345e312e17d94e9d3( ::osiris::LanguageManager const & inst, ::osiris::String const & culture ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::String result = inst.localize(culture);
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static void removeFolder_cde4cb917ab35690cdbe6ee8153e5a82( ::osiris::LanguageManager & inst, ::boost::shared_ptr< osiris::LanguageFolder > folder ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.removeFolder(folder);
    __pythreadSaver.restore();
}

static void removeListener_18b7c2929db152e684ee0ee0f0712df6( ::osiris::LanguageManager & inst, ::boost::shared_ptr< osiris::LanguageFolderListener > listener ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.removeListener(listener);
    __pythreadSaver.restore();
}

static void setAlternative_f92cc64e30a2693a9c529299518ed96a( ::osiris::LanguageManager & inst, ::osiris::String const & alt ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.setAlternative(alt);
    __pythreadSaver.restore();
}

static void setDumpKey_e7a1cf8a0ed31233445fea39d387892c( ::osiris::LanguageManager & inst, bool const & value ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.setDumpKey(value);
    __pythreadSaver.restore();
}

void register_LanguageManager_class(){

    { //::osiris::LanguageManager
        typedef ::boost::python::class_< ::osiris::LanguageManager, ::boost::python::bases< ::osiris::StaticSingleton< osiris::LanguageManager, true > >, ::boost::noncopyable > LanguageManager_exposer_t;
        LanguageManager_exposer_t LanguageManager_exposer = LanguageManager_exposer_t( "LanguageManager", ::boost::python::no_init );
        ::boost::python::scope LanguageManager_scope( LanguageManager_exposer );
        LanguageManager_exposer.def( ::boost::python::init< >() );
        { //::osiris::LanguageManager::getAlternative
        
            typedef boost::python::object ( *getAlternative_function_type )( ::osiris::LanguageManager const & );
            
            LanguageManager_exposer.def( 
                "getAlternative"
                , getAlternative_function_type( &getAlternative_62b6db6348092b546ccbb882bdf08d4d ) );
        
        }
        { //::osiris::LanguageManager::getDumpKey
        
            typedef boost::python::object ( *getDumpKey_function_type )( ::osiris::LanguageManager const & );
            
            LanguageManager_exposer.def( 
                "getDumpKey"
                , getDumpKey_function_type( &getDumpKey_cff335f3b7a93172f44a0ff584d95ad6 ) );
        
        }
        { //::osiris::LanguageManager::getInvariant
        
            typedef boost::python::object ( *getInvariant_function_type )( ::osiris::LanguageManager const & );
            
            LanguageManager_exposer.def( 
                "getInvariant"
                , getInvariant_function_type( &getInvariant_3a6e52d3b1254bc20ba9de9c3a081a09 ) );
        
        }
        { //::osiris::LanguageManager::getRootFolder
        
            typedef boost::python::object ( *getRootFolder_function_type )( ::osiris::LanguageManager const & );
            
            LanguageManager_exposer.def( 
                "getRootFolder"
                , getRootFolder_function_type( &getRootFolder_64f5026cb0721f4559c025390f208cc7 ) );
        
        }
        { //::osiris::LanguageManager::getFolders
        
            typedef boost::python::object ( *getFolders_function_type )( ::osiris::LanguageManager const & );
            
            LanguageManager_exposer.def( 
                "getFolders"
                , getFolders_function_type( &getFolders_6f410da03f6d520955b2ca1f5ded8b57 ) );
        
        }
        { //::osiris::LanguageManager::getCultures
        
            typedef boost::python::object ( *getCultures_function_type )( ::osiris::LanguageManager & );
            
            LanguageManager_exposer.def( 
                "getCultures"
                , getCultures_function_type( &getCultures_ad0e9e448e35c3a9633218cfdb7d58c5 ) );
        
        }
        { //::osiris::LanguageManager::clear
        
            typedef void ( *clear_function_type )( ::osiris::LanguageManager & );
            
            LanguageManager_exposer.def( 
                "clear"
                , clear_function_type( &clear_4b74f324801acef930d55cdc8bba5852 ) );
        
        }
        { //::osiris::LanguageManager::getText
        
            typedef boost::python::object ( *getText_function_type )( ::osiris::LanguageManager const &,::osiris::String const &,::osiris::String const & );
            
            LanguageManager_exposer.def( 
                "getText"
                , getText_function_type( &getText_cbc7b3c3d764b1f663cb22cda1b2a032 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("culture"), ::boost::python::arg("name") ) );
        
        }
        { //::osiris::LanguageManager::getText
        
            typedef boost::python::object ( *getText_function_type )( ::osiris::LanguageManager const &,::osiris::String const &,::osiris::LanguageResult const & );
            
            LanguageManager_exposer.def( 
                "getText"
                , getText_function_type( &getText_ca75a8c2a6deefddb3a20fe3db1ba709 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("culture"), ::boost::python::arg("result") ) );
        
        }
        { //::osiris::LanguageManager::notifyKey
        
            typedef void ( *notifyKey_function_type )( ::osiris::LanguageManager const &,::osiris::String const &,::osiris::String const &,::osiris::String const & );
            
            LanguageManager_exposer.def( 
                "notifyKey"
                , notifyKey_function_type( &notifyKey_a9003941009c1bdbd816c8b5df747162 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("culture"), ::boost::python::arg("name"), ::boost::python::arg("value") ) );
        
        }
        { //::osiris::LanguageManager::notifyUnknownKey
        
            typedef void ( *notifyUnknownKey_function_type )( ::osiris::LanguageManager const &,::osiris::String const &,::osiris::String const & );
            
            LanguageManager_exposer.def( 
                "notifyUnknownKey"
                , notifyUnknownKey_function_type( &notifyUnknownKey_2a5a0528ac5182769ade38fe2d15360f )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("culture"), ::boost::python::arg("name") ) );
        
        }
        { //::osiris::LanguageManager::addFolder
        
            typedef boost::python::object ( *addFolder_function_type )( ::osiris::LanguageManager & );
            
            LanguageManager_exposer.def( 
                "addFolder"
                , addFolder_function_type( &addFolder_badfe0821c8168ee2f80058edfa20130 ) );
        
        }
        { //::osiris::LanguageManager::addFolder
        
            typedef void ( *addFolder_function_type )( ::osiris::LanguageManager &,::boost::shared_ptr<osiris::LanguageFolder> );
            
            LanguageManager_exposer.def( 
                "addFolder"
                , addFolder_function_type( &addFolder_aeed1e748b70b183d22997b168788668 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("arg0") ) );
        
        }
        { //::osiris::LanguageManager::addListener
        
            typedef void ( *addListener_function_type )( ::osiris::LanguageManager &,::boost::shared_ptr<osiris::LanguageFolderListener> );
            
            LanguageManager_exposer.def( 
                "addListener"
                , addListener_function_type( &addListener_4294287e201ace392e995e4acdb9b52b )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("listener") ) );
        
        }
        { //::osiris::LanguageManager::getCulture
        
            typedef boost::python::object ( *getCulture_function_type )( ::osiris::LanguageManager const &,::osiris::String const & );
            
            LanguageManager_exposer.def( 
                "getCulture"
                , getCulture_function_type( &getCulture_7957c0064b81a74be5305bf1b04f2142 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("id") ) );
        
        }
        { //::osiris::LanguageManager::hasCulture
        
            typedef boost::python::object ( *hasCulture_function_type )( ::osiris::LanguageManager const &,::osiris::String const & );
            
            LanguageManager_exposer.def( 
                "hasCulture"
                , hasCulture_function_type( &hasCulture_7d6eee83896744411b4ba0bfd5739b03 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("id") ) );
        
        }
        { //::osiris::LanguageManager::hasCultureNotNeutral
        
            typedef boost::python::object ( *hasCultureNotNeutral_function_type )( ::osiris::LanguageManager const &,::osiris::String const & );
            
            LanguageManager_exposer.def( 
                "hasCultureNotNeutral"
                , hasCultureNotNeutral_function_type( &hasCultureNotNeutral_c339f8a7de1188d53e95d6e768231861 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("id") ) );
        
        }
        { //::osiris::LanguageManager::loadCultures
        
            typedef void ( *loadCultures_function_type )( ::osiris::LanguageManager &,::osiris::String const & );
            
            LanguageManager_exposer.def( 
                "loadCultures"
                , loadCultures_function_type( &loadCultures_0a83ed5d464374932cebcc533bbcc68e )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("path") ) );
        
        }
        { //::osiris::LanguageManager::localize
        
            typedef boost::python::object ( *localize_function_type )( ::osiris::LanguageManager const &,::osiris::String const & );
            
            LanguageManager_exposer.def( 
                "localize"
                , localize_function_type( &localize_75f28dc0a144354345e312e17d94e9d3 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("culture") ) );
        
        }
        { //::osiris::LanguageManager::removeFolder
        
            typedef void ( *removeFolder_function_type )( ::osiris::LanguageManager &,::boost::shared_ptr<osiris::LanguageFolder> );
            
            LanguageManager_exposer.def( 
                "removeFolder"
                , removeFolder_function_type( &removeFolder_cde4cb917ab35690cdbe6ee8153e5a82 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("folder") ) );
        
        }
        { //::osiris::LanguageManager::removeListener
        
            typedef void ( *removeListener_function_type )( ::osiris::LanguageManager &,::boost::shared_ptr<osiris::LanguageFolderListener> );
            
            LanguageManager_exposer.def( 
                "removeListener"
                , removeListener_function_type( &removeListener_18b7c2929db152e684ee0ee0f0712df6 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("listener") ) );
        
        }
        { //::osiris::LanguageManager::setAlternative
        
            typedef void ( *setAlternative_function_type )( ::osiris::LanguageManager &,::osiris::String const & );
            
            LanguageManager_exposer.def( 
                "setAlternative"
                , setAlternative_function_type( &setAlternative_f92cc64e30a2693a9c529299518ed96a )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("alt") ) );
        
        }
        { //::osiris::LanguageManager::setDumpKey
        
            typedef void ( *setDumpKey_function_type )( ::osiris::LanguageManager &,bool const & );
            
            LanguageManager_exposer.def( 
                "setDumpKey"
                , setDumpKey_function_type( &setDumpKey_e7a1cf8a0ed31233445fea39d387892c )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("value") ) );
        
        }
        { //property "alternative"[fget=::osiris::LanguageManager::getAlternative, fset=::osiris::LanguageManager::setAlternative]
        
            typedef ::osiris::String ( ::osiris::LanguageManager::*fget )(  ) const;
            typedef void ( ::osiris::LanguageManager::*fset )( ::osiris::String const & ) ;
            
            LanguageManager_exposer.add_property( 
                "alternative"
                , fget( &::osiris::LanguageManager::getAlternative )
                , fset( &::osiris::LanguageManager::setAlternative )
                , "get\\set property, built on top of \"osiris::String osiris::LanguageManager::getAlternative() const [member function]\" and \"void osiris::LanguageManager::setAlternative(osiris::String const & alt) [member function]\"" );
        
        }
        { //property "dumpKey"[fget=::osiris::LanguageManager::getDumpKey, fset=::osiris::LanguageManager::setDumpKey]
        
            typedef bool ( ::osiris::LanguageManager::*fget )(  ) const;
            typedef void ( ::osiris::LanguageManager::*fset )( bool const & ) ;
            
            LanguageManager_exposer.add_property( 
                "dumpKey"
                , fget( &::osiris::LanguageManager::getDumpKey )
                , fset( &::osiris::LanguageManager::setDumpKey )
                , "get\\set property, built on top of \"bool osiris::LanguageManager::getDumpKey() const [member function]\" and \"void osiris::LanguageManager::setDumpKey(bool const & value) [member function]\"" );
        
        }
        { //property "invariant"[fget=::osiris::LanguageManager::getInvariant]
        
            typedef ::boost::shared_ptr<osiris::LanguageCulture> ( ::osiris::LanguageManager::*fget )(  ) const;
            
            LanguageManager_exposer.add_property( 
                "invariant"
                , fget( &::osiris::LanguageManager::getInvariant )
                , "get property, built on top of \"boost::shared_ptr<osiris::LanguageCulture> osiris::LanguageManager::getInvariant() const [member function]\"" );
        
        }
        { //property "rootFolder"[fget=::osiris::LanguageManager::getRootFolder]
        
            typedef ::boost::shared_ptr<osiris::LanguageFolder> ( ::osiris::LanguageManager::*fget )(  ) const;
            
            LanguageManager_exposer.add_property( 
                "rootFolder"
                , fget( &::osiris::LanguageManager::getRootFolder )
                , "get property, built on top of \"boost::shared_ptr<osiris::LanguageFolder> osiris::LanguageManager::getRootFolder() const [member function]\"" );
        
        }
        { //property "folders"[fget=::osiris::LanguageManager::getFolders]
        
            typedef ::std::list<boost::shared_ptr<osiris::LanguageFolder>, osiris::StdAllocator<boost::shared_ptr<osiris::LanguageFolder>, osiris::SysAllocator<boost::shared_ptr<osiris::LanguageFolder> > > > ( ::osiris::LanguageManager::*fget )(  ) const;
            
            LanguageManager_exposer.add_property( 
                "folders"
                , fget( &::osiris::LanguageManager::getFolders )
                , "get property, built on top of \"std::list<boost::shared_ptr<osiris::LanguageFolder>, osiris::StdAllocator<boost::shared_ptr<osiris::LanguageFolder>, osiris::SysAllocator<boost::shared_ptr<osiris::LanguageFolder> > > > osiris::LanguageManager::getFolders() const [member function]\"" );
        
        }
    }

}
