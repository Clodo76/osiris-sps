// This file has been generated by Py++.

#include "stdafx.h"
#include "pypluspluscommon.h"
#include "boost/python.hpp"
#include "__call_policies.pypp.hpp"
#include "image.h"
#include "image.pypp.hpp"

namespace bp = boost::python;

static boost::python::object getType_33b72c0568ac56473a82d602f7f76025( ::osiris::Image const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::Image::ImageType result = inst.getType();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getWidth_0865860c0460f8d16c36b6f26587b8d9( ::osiris::Image const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::uint32 result = inst.getWidth();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getHeight_499bf0eba2a8d916107371f16c81366e( ::osiris::Image const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::uint32 result = inst.getHeight();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object load_8fada17a7b2469594f0ed265a1a594f6( ::osiris::Image & inst, ::osiris::String const & filename, ::osiris::Image::ImageType type=(::osiris::Image::itUnknown) ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    bool result = inst.load(filename, type);
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object load_a66ee7de1bb95e68523a344aba940f28( ::osiris::Image & inst, ::osiris::Buffer const & buffer, ::osiris::Image::ImageType type=(::osiris::Image::itUnknown) ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    bool result = inst.load(buffer, type);
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object save_a612497f90b2b61ac47daa336f41fd42( ::osiris::Image & inst, ::osiris::String const & filename, ::osiris::Image::ImageType type=(::osiris::Image::itUnknown) ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    bool result = inst.save(filename, type);
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object save_642816af6ac8d7c4241e771ab132019d( ::osiris::Image & inst, ::osiris::Buffer & buffer, ::osiris::Image::ImageType type=(::osiris::Image::itUnknown) ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    bool result = inst.save(buffer, type);
    __pythreadSaver.restore();
    return boost::python::object( result );
}

void register_Image_class(){

    { //::osiris::Image
        typedef ::boost::python::class_< ::osiris::Image, ::boost::noncopyable > Image_exposer_t;
        Image_exposer_t Image_exposer = Image_exposer_t( "Image", ::boost::python::init< >() );
        ::boost::python::scope Image_scope( Image_exposer );
        ::boost::python::enum_< ::osiris::Image::ImageType>("ImageType")
            .value("itUnknown", ::osiris::Image::itUnknown)
            .value("itBmp", ::osiris::Image::itBmp)
            .value("itIco", ::osiris::Image::itIco)
            .value("itJpg", ::osiris::Image::itJpg)
            .value("itGif", ::osiris::Image::itGif)
            .value("itPcx", ::osiris::Image::itPcx)
            .value("itPng", ::osiris::Image::itPng)
            .value("itTiff", ::osiris::Image::itTiff)
            .export_values()
            ;
        Image_exposer.def( ::boost::python::init< ::osiris::String const &, ::boost::python::optional< ::osiris::Image::ImageType > >(( ::boost::python::arg("filename"), ::boost::python::arg("type")=(long)(::osiris::Image::itUnknown) )) );
        ::boost::python::implicitly_convertible< ::osiris::String const &, ::osiris::Image >();
        { //::osiris::Image::getType
        
            typedef boost::python::object ( *getType_function_type )( ::osiris::Image const & );
            
            Image_exposer.def( 
                "getType"
                , getType_function_type( &getType_33b72c0568ac56473a82d602f7f76025 ) );
        
        }
        { //::osiris::Image::getWidth
        
            typedef boost::python::object ( *getWidth_function_type )( ::osiris::Image const & );
            
            Image_exposer.def( 
                "getWidth"
                , getWidth_function_type( &getWidth_0865860c0460f8d16c36b6f26587b8d9 ) );
        
        }
        { //::osiris::Image::getHeight
        
            typedef boost::python::object ( *getHeight_function_type )( ::osiris::Image const & );
            
            Image_exposer.def( 
                "getHeight"
                , getHeight_function_type( &getHeight_499bf0eba2a8d916107371f16c81366e ) );
        
        }
        { //::osiris::Image::load
        
            typedef boost::python::object ( *load_function_type )( ::osiris::Image &,::osiris::String const &,::osiris::Image::ImageType );
            
            Image_exposer.def( 
                "load"
                , load_function_type( &load_8fada17a7b2469594f0ed265a1a594f6 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("filename"), ::boost::python::arg("type")=(::osiris::Image::itUnknown) ) );
        
        }
        { //::osiris::Image::load
        
            typedef boost::python::object ( *load_function_type )( ::osiris::Image &,::osiris::Buffer const &,::osiris::Image::ImageType );
            
            Image_exposer.def( 
                "load"
                , load_function_type( &load_a66ee7de1bb95e68523a344aba940f28 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("buffer"), ::boost::python::arg("type")=(::osiris::Image::itUnknown) ) );
        
        }
        { //::osiris::Image::save
        
            typedef boost::python::object ( *save_function_type )( ::osiris::Image &,::osiris::String const &,::osiris::Image::ImageType );
            
            Image_exposer.def( 
                "save"
                , save_function_type( &save_a612497f90b2b61ac47daa336f41fd42 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("filename"), ::boost::python::arg("type")=(::osiris::Image::itUnknown) ) );
        
        }
        { //::osiris::Image::save
        
            typedef boost::python::object ( *save_function_type )( ::osiris::Image &,::osiris::Buffer &,::osiris::Image::ImageType );
            
            Image_exposer.def( 
                "save"
                , save_function_type( &save_642816af6ac8d7c4241e771ab132019d )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("buffer"), ::boost::python::arg("type")=(::osiris::Image::itUnknown) ) );
        
        }
        { //property "type"[fget=::osiris::Image::getType]
        
            typedef ::osiris::Image::ImageType ( ::osiris::Image::*fget )(  ) const;
            
            Image_exposer.add_property( 
                "type"
                , fget( &::osiris::Image::getType )
                , "get property, built on top of \"osiris::Image::ImageType osiris::Image::getType() const [member function]\"" );
        
        }
        { //property "width"[fget=::osiris::Image::getWidth]
        
            typedef ::osiris::uint32 ( ::osiris::Image::*fget )(  ) const;
            
            Image_exposer.add_property( 
                "width"
                , fget( &::osiris::Image::getWidth )
                , "get property, built on top of \"osiris::uint32 osiris::Image::getWidth() const [member function]\"" );
        
        }
        { //property "height"[fget=::osiris::Image::getHeight]
        
            typedef ::osiris::uint32 ( ::osiris::Image::*fget )(  ) const;
            
            Image_exposer.add_property( 
                "height"
                , fget( &::osiris::Image::getHeight )
                , "get property, built on top of \"osiris::uint32 osiris::Image::getHeight() const [member function]\"" );
        
        }
    }

}
