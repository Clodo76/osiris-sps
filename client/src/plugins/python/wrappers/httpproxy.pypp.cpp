// This file has been generated by Py++.

#include "stdafx.h"
#include "pypluspluscommon.h"
#include "boost/python.hpp"
#include "__call_policies.pypp.hpp"
#include "httpproxy.h"
#include "httpproxy.pypp.hpp"

namespace bp = boost::python;

static boost::python::object getResponse_cd31914958f79074129f4849a44b8104( ::osiris::HttpProxy const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::Buffer const & result = inst.getResponse();
    __pythreadSaver.restore();
    typedef bp::return_value_policy< bp::copy_const_reference > call_policies_t;
    return boost::python::object( pyplusplus::call_policies::make_object< call_policies_t, ::osiris::Buffer const & >( result ) );
}

static boost::python::object perform_c91561f0298ea8af8f5a57e0fb58e861( ::osiris::HttpProxy & inst, ::boost::shared_ptr< osiris::HttpRequest > request ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    bool result = inst.perform(request);
    __pythreadSaver.restore();
    return boost::python::object( result );
}

void register_HttpProxy_class(){

    { //::osiris::HttpProxy
        typedef ::boost::python::class_< ::osiris::HttpProxy, ::boost::noncopyable > HttpProxy_exposer_t;
        HttpProxy_exposer_t HttpProxy_exposer = HttpProxy_exposer_t( "HttpProxy", ::boost::python::init< ::boost::shared_ptr< boost::asio::io_service >, ::boost::shared_ptr< osiris::TCPSocket > >(( ::boost::python::arg("service"), ::boost::python::arg("socket") )) );
        ::boost::python::scope HttpProxy_scope( HttpProxy_exposer );
        { //::osiris::HttpProxy::getResponse
        
            typedef boost::python::object ( *getResponse_function_type )( ::osiris::HttpProxy const & );
            
            HttpProxy_exposer.def( 
                "getResponse"
                , getResponse_function_type( &getResponse_cd31914958f79074129f4849a44b8104 ) );
        
        }
        { //::osiris::HttpProxy::perform
        
            typedef boost::python::object ( *perform_function_type )( ::osiris::HttpProxy &,::boost::shared_ptr<osiris::HttpRequest> );
            
            HttpProxy_exposer.def( 
                "perform"
                , perform_function_type( &perform_c91561f0298ea8af8f5a57e0fb58e861 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("request") ) );
        
        }
        { //property "response"[fget=::osiris::HttpProxy::getResponse]
        
            typedef ::osiris::Buffer const & ( ::osiris::HttpProxy::*fget )(  ) const;
            
            HttpProxy_exposer.add_property( 
                "response"
                , ::boost::python::make_function( 
                      fget( &::osiris::HttpProxy::getResponse )
                    , bp::return_value_policy< bp::copy_const_reference >() ) 
                , "get property, built on top of \"osiris::Buffer const & osiris::HttpProxy::getResponse() const [member function]\"" );
        
        }
    }

}
