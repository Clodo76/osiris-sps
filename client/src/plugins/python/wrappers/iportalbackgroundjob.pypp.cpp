// This file has been generated by Py++.

#include "stdafx.h"
#include "pypluspluscommon.h"
#include "boost/python.hpp"
#include "__call_policies.pypp.hpp"
#include "iportalbackgroundjob.h"
#include "portalsimporterjob.h"
#include "portalsstabilityjob.h"
#include "iportalbackgroundjob.pypp.hpp"

namespace bp = boost::python;

struct IPortalBackgroundJob_wrapper : ::osiris::IPortalBackgroundJob, ::osiris::PythonWrapper< ::osiris::IPortalBackgroundJob > {

    IPortalBackgroundJob_wrapper(bool visible, ::osiris::uint32 id, ::boost::shared_ptr< osiris::Portal > portal, ::osiris::TaskPriority priority=::osiris::taskPriorityNormal )
    : ::osiris::IPortalBackgroundJob( visible, id, portal, priority )
      , ::osiris::PythonWrapper< ::osiris::IPortalBackgroundJob >(){
        // constructor
    
    }

    static boost::python::object getPortal( ::osiris::IPortalBackgroundJob const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::shared_ptr<osiris::Portal> result = inst.getPortal();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    virtual ::boost::shared_ptr< osiris::IBackgroundJob::Details > getDetails(  ) const {
        ::osiris::PythonState __pystate(getPythonThreadState());
        ::osiris::PythonOverride func_getDetails = this->get_override( "getDetails" );
        return func_getDetails(  );
    }

    virtual void onProgress(  ){
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_onProgress = this->get_override( "onProgress" ) )
            func_onProgress(  );
        else{
            __pystate.leave();
            this->::osiris::IBackgroundJob::onProgress(  );
        }
    }
    
    virtual void default_onProgress(  ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::IBackgroundJob::onProgress( );
    }

    virtual ::osiris::IJob::JobStatus run(  ){
        ::osiris::PythonState __pystate(getPythonThreadState());
        ::osiris::PythonOverride func_run = this->get_override( "run" );
        return func_run(  );
    }

    virtual ::osiris::IJob::JobStatus start(  ) {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_start = this->get_override( "start" ) )
            return func_start(  );
        else{
            __pystate.leave();
            return this->::osiris::IJob::start(  );
        }
    }
    
    ::osiris::IJob::JobStatus default_start(  ) {
        ::osiris::PythonThreadSaver __pythreadSaver;
        return ::osiris::IJob::start( );
    }

    virtual void stop(  ) {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_stop = this->get_override( "stop" ) )
            func_stop(  );
        else{
            __pystate.leave();
            this->::osiris::IJob::stop(  );
        }
    }
    
    void default_stop(  ) {
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::IJob::stop( );
    }

};

void register_IPortalBackgroundJob_class(){

    { //::osiris::IPortalBackgroundJob
        typedef ::boost::python::class_< IPortalBackgroundJob_wrapper, ::boost::python::bases< ::osiris::IBackgroundJob >, ::boost::noncopyable > IPortalBackgroundJob_exposer_t;
        IPortalBackgroundJob_exposer_t IPortalBackgroundJob_exposer = IPortalBackgroundJob_exposer_t( "IPortalBackgroundJob", ::boost::python::init< bool, ::osiris::uint32, ::boost::shared_ptr< osiris::Portal >, ::boost::python::optional< ::osiris::TaskPriority > >(( ::boost::python::arg("visible"), ::boost::python::arg("id"), ::boost::python::arg("portal"), ::boost::python::arg("priority")=::osiris::taskPriorityNormal )) );
        ::boost::python::scope IPortalBackgroundJob_scope( IPortalBackgroundJob_exposer );
        { //::osiris::IPortalBackgroundJob::getPortal
        
            typedef boost::python::object ( *getPortal_function_type )( ::osiris::IPortalBackgroundJob const & );
            
            IPortalBackgroundJob_exposer.def( 
                "getPortal"
                , getPortal_function_type( &IPortalBackgroundJob_wrapper::getPortal ) );
        
        }
        { //::osiris::IBackgroundJob::getDetails
        
            typedef ::boost::shared_ptr<osiris::IBackgroundJob::Details> ( ::osiris::IBackgroundJob::*getDetails_function_type )(  ) const;
            
            IPortalBackgroundJob_exposer.def( 
                "getDetails"
                , ( getDetails_function_type(&::osiris::IBackgroundJob::getDetails) ) );
        
        }
        { //::osiris::IBackgroundJob::onProgress
        
            typedef void ( IPortalBackgroundJob_wrapper::*onProgress_function_type )(  ) ;
            
            IPortalBackgroundJob_exposer.def( 
                "onProgress"
                , onProgress_function_type( &IPortalBackgroundJob_wrapper::default_onProgress ) );
        
        }
        { //::osiris::IJob::run
        
            typedef ::osiris::IJob::JobStatus ( IPortalBackgroundJob_wrapper::*run_function_type )(  ) ;
            
            IPortalBackgroundJob_exposer.def( 
                "run"
                , run_function_type( &IPortalBackgroundJob_wrapper::run ) );
        
        }
        { //::osiris::IJob::start
        
            typedef ::osiris::IJob::JobStatus ( ::osiris::IJob::*start_function_type )(  ) ;
            typedef ::osiris::IJob::JobStatus ( IPortalBackgroundJob_wrapper::*default_start_function_type )(  ) ;
            
            IPortalBackgroundJob_exposer.def( 
                "start"
                , start_function_type(&::osiris::IJob::start)
                , default_start_function_type(&IPortalBackgroundJob_wrapper::default_start) );
        
        }
        { //::osiris::IJob::stop
        
            typedef void ( ::osiris::IJob::*stop_function_type )(  ) ;
            typedef void ( IPortalBackgroundJob_wrapper::*default_stop_function_type )(  ) ;
            
            IPortalBackgroundJob_exposer.def( 
                "stop"
                , stop_function_type(&::osiris::IJob::stop)
                , default_stop_function_type(&IPortalBackgroundJob_wrapper::default_stop) );
        
        }
        { //property "portal"[fget=::osiris::IPortalBackgroundJob::getPortal]
        
            typedef ::boost::shared_ptr<osiris::Portal> ( ::osiris::IPortalBackgroundJob::*fget )(  ) const;
            
            IPortalBackgroundJob_exposer.add_property( 
                "portal"
                , fget( &::osiris::IPortalBackgroundJob::getPortal )
                , "get property, built on top of \"boost::shared_ptr<osiris::Portal> osiris::IPortalBackgroundJob::getPortal() const [member function]\"" );
        
        }
    }

}
