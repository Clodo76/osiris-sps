// This file has been generated by Py++.

#include "stdafx.h"
#include "pypluspluscommon.h"
#include "boost/python.hpp"
#include "__call_policies.pypp.hpp"
#include "ihtmlcontrol.h"
#include "datatree.h"
#include "htmlattributes.h"
#include "htmlevent.h"
#include "eventssource.h"
#include "htmlvirtualpage.h"
#include "htmlwriter.h"
#include "httprequest.h"
#include "httpresponse.h"
#include "httpsession.h"
#include "htmloption.h"
#include "htmlimage.h"
#include "htmlscript.h"
#include "ihtmlinput.h"
#include "htmlcheckbox.h"
#include "htmlfilebrowser.h"
#include "htmltextbox.h"
#include "idepickerbool.h"
#include "htmlpanel.h"
#include "htmldiv.h"
#include "htmltooltip.h"
#include "htmlpager.h"
#include "htmlpopup.h"
#include "idepickerculture.h"
#include "idepickerselect.h"
#include "idepickerskin.h"
#include "idepickercomponent.h"
#include "idepickersections.h"
#include "extensionsmodulecontrol.h"
#include "extensionsmoduleeditor.h"
#include "extensionsmoduleviewer.h"
#include "extensionsinvalidmodule.h"
#include "extensionsmoduleviewerhidden.h"
#include "extensionscomponentcontrol.h"
#include "extensionscomponenteditor.h"
#include "extensionscomponentviewer.h"
#include "extensionsinvalidcomponent.h"
#include "idepositioneditor.h"
#include "idesearchparam.h"
#include "htmltabpage.h"
#include "htmltab.h"
#include "htmlroller.h"
#include "htmllinkbutton.h"
#include "ihtmlselect.h"
#include "htmlcombobox.h"
#include "htmllistbox.h"
#include "htmllink.h"
#include "htmltablerow.h"
#include "htmltextarea.h"
#include "htmlpage.h"
#include "iidepage.h"
#include "iideportalpage.h"
#include "iidemainpage.h"
#include "htmlliteral.h"
#include "htmlbr.h"
#include "htmltabctrl.h"
#include "htmltablecell.h"
#include "htmltableheader.h"
#include "htmlparagraph.h"
#include "htmlspace.h"
#include "idepickernumber.h"
#include "idepickerobject.h"
#include "ideblock.h"
#include "ideomleditor.h"
#include "idebutton.h"
#include "idehelpbox.h"
#include "idepickerdatetime.h"
#include "idepickerdatetimespecial.h"
#include "idepickercolor.h"
#include "idevoteeditor.h"
#include "idepickerobjectex.h"
#include "idemailbox.h"
#include "idesearchresults.h"
#include "idetablequery.h"
#include "idesearchglobalparams.h"
#include "idesearchquery.h"
#include "ideassistant.h"
#include "htmltable.h"
#include "htmloptiongroup.h"
#include "htmlxslcontrol.h"
#include "htmlspan.h"
#include "htmlbutton.h"
#include "htmltext.h"
#include "ihtmlcontrol.pypp.hpp"

namespace bp = boost::python;

struct IHtmlControl_wrapper : ::osiris::IHtmlControl, ::osiris::PythonWrapper< ::osiris::IHtmlControl > {

    IHtmlControl_wrapper( )
    : ::osiris::IHtmlControl( )
      , ::osiris::PythonWrapper< ::osiris::IHtmlControl >(){
        // null constructor
    
    }

    static boost::python::object getID( ::osiris::IHtmlControl const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::String const & result = inst.getID();
        __pythreadSaver.restore();
        typedef bp::return_value_policy< bp::copy_const_reference > call_policies_t;
        return boost::python::object( pyplusplus::call_policies::make_object< call_policies_t, ::osiris::String const & >( result ) );
    }

    static boost::python::object getUID( ::osiris::IHtmlControl const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::String const & result = inst.getUID();
        __pythreadSaver.restore();
        typedef bp::return_value_policy< bp::copy_const_reference > call_policies_t;
        return boost::python::object( pyplusplus::call_policies::make_object< call_policies_t, ::osiris::String const & >( result ) );
    }

    static boost::python::object hasID( ::osiris::IHtmlControl const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.hasID();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getCss( ::osiris::IHtmlControl const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::String const & result = inst.getCss();
        __pythreadSaver.restore();
        typedef bp::return_value_policy< bp::copy_const_reference > call_policies_t;
        return boost::python::object( pyplusplus::call_policies::make_object< call_policies_t, ::osiris::String const & >( result ) );
    }

    static boost::python::object hasCss( ::osiris::IHtmlControl const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.hasCss();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getStyle( ::osiris::IHtmlControl const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::String const & result = inst.getStyle();
        __pythreadSaver.restore();
        typedef bp::return_value_policy< bp::copy_const_reference > call_policies_t;
        return boost::python::object( pyplusplus::call_policies::make_object< call_policies_t, ::osiris::String const & >( result ) );
    }

    static boost::python::object hasStyle( ::osiris::IHtmlControl const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.hasStyle();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getPage( ::osiris::IHtmlControl const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::shared_ptr<osiris::HtmlPage> result = inst.getPage();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getParent( ::osiris::IHtmlControl const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::shared_ptr<osiris::IHtmlControl> result = inst.getParent();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getAttributes( ::osiris::IHtmlControl const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::shared_ptr<osiris::HtmlAttributes> result = inst.getAttributes();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getControls( ::osiris::IHtmlControl const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::shared_ptr<osiris::HtmlControls> result = inst.getControls();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getEvents( ::osiris::IHtmlControl const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::shared_ptr<osiris::EventsSource<osiris::String, osiris::IEvent> > result = inst.getEvents();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getEventInit( ::osiris::IHtmlControl const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::shared_ptr<osiris::EventSource> result = inst.getEventInit();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getEventLoad( ::osiris::IHtmlControl const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::shared_ptr<osiris::EventSource> result = inst.getEventLoad();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getEventPreRender( ::osiris::IHtmlControl const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::shared_ptr<osiris::EventSource> result = inst.getEventPreRender();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object hasChilds( ::osiris::IHtmlControl const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.hasChilds();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getViewState( ::osiris::IHtmlControl const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::DataTree const & result = inst.getViewState();
        __pythreadSaver.restore();
        typedef bp::return_value_policy< bp::copy_const_reference > call_policies_t;
        return boost::python::object( pyplusplus::call_policies::make_object< call_policies_t, ::osiris::DataTree const & >( result ) );
    }

    static boost::python::object getPostBack( ::osiris::IHtmlControl const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.getPostBack();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    virtual ::boost::shared_ptr< osiris::HttpSession > getSession(  ) const  {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_getSession = this->get_override( "getSession" ) )
            return func_getSession(  );
        else{
            __pystate.leave();
            return this->::osiris::IHtmlControl::getSession(  );
        }
    }
    
    ::boost::shared_ptr< osiris::HttpSession > default_getSession(  ) const  {
        ::osiris::PythonThreadSaver __pythreadSaver;
        return ::osiris::IHtmlControl::getSession( );
    }

    static boost::python::object getRequest( ::osiris::IHtmlControl const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::shared_ptr<osiris::HttpRequest> result = inst.getRequest();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getResponse( ::osiris::IHtmlControl const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::shared_ptr<osiris::HttpResponse> result = inst.getResponse();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getTarget( ::osiris::IHtmlControl const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::String result = inst.getTarget();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getEventCommand_c2c7c037d3d207a3d92f37d61d2dbb27( ::osiris::IHtmlControl const & inst, ::osiris::String const & eventName, ::osiris::String const & e ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::String result = inst.getEventCommand(eventName, e);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getWidth( ::osiris::IHtmlControl const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::HtmlUnit result = inst.getWidth();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getHeight( ::osiris::IHtmlControl const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::HtmlUnit result = inst.getHeight();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getVisible( ::osiris::IHtmlControl const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.getVisible();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static void render( ::osiris::IHtmlControl & inst, ::boost::shared_ptr< osiris::HtmlPage > page, ::osiris::HtmlWriter & writer ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        inst.render(page, writer);
        __pythreadSaver.restore();
    }

    bool decodeEvent( ::osiris::String const & command, ::osiris::String & eventName, ::osiris::HtmlEvent & e ) const {
        return ::osiris::IHtmlControl::decodeEvent( boost::ref(command), boost::ref(eventName), boost::ref(e) );
    }

    virtual void onInit(  ){
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_onInit = this->get_override( "onInit" ) )
            func_onInit(  );
        else{
            __pystate.leave();
            this->::osiris::IHtmlControl::onInit(  );
        }
    }
    
    virtual void default_onInit(  ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::IHtmlControl::onInit( );
    }

    virtual void onLoad(  ){
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_onLoad = this->get_override( "onLoad" ) )
            func_onLoad(  );
        else{
            __pystate.leave();
            this->::osiris::IHtmlControl::onLoad(  );
        }
    }
    
    virtual void default_onLoad(  ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::IHtmlControl::onLoad( );
    }

    virtual void onPreRender(  ){
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_onPreRender = this->get_override( "onPreRender" ) )
            func_onPreRender(  );
        else{
            __pystate.leave();
            this->::osiris::IHtmlControl::onPreRender(  );
        }
    }
    
    virtual void default_onPreRender(  ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::IHtmlControl::onPreRender( );
    }

    ::osiris::String encodeEvent( ::osiris::String const & eventName, ::osiris::HtmlEvent const * e=(osiris::null) ) const {
        return ::osiris::IHtmlControl::encodeEvent( boost::ref(eventName), boost::python::ptr(e) );
    }

    static boost::python::object findTarget( ::osiris::IHtmlControl & inst, ::osiris::String const & target ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::shared_ptr<osiris::IHtmlControl> result = inst.findTarget(target);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getEventCommand_5f9eb79715d8c7f66e3fdd78ba915328( ::osiris::IHtmlControl const & inst, ::osiris::String const & eventName, ::osiris::HtmlEvent const * e=(osiris::null) ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::String result = inst.getEventCommand(eventName, e);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    virtual void onEvent( ::osiris::String const & name, ::osiris::IEvent * e=(osiris::null) ){
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_onEvent = this->get_override( "onEvent" ) )
            func_onEvent( boost::ref(name), boost::python::ptr(e) );
        else{
            __pystate.leave();
            this->::osiris::IHtmlControl::onEvent( boost::ref(name), boost::python::ptr(e) );
        }
    }
    
    virtual void default_onEvent( ::osiris::String const & name, ::osiris::IEvent * e=(osiris::null) ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::IHtmlControl::onEvent( boost::ref(name), boost::python::ptr(e) );
    }

    virtual void onLoadViewState( ::osiris::DataTree const & state ){
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_onLoadViewState = this->get_override( "onLoadViewState" ) )
            func_onLoadViewState( boost::ref(state) );
        else{
            __pystate.leave();
            this->::osiris::IHtmlControl::onLoadViewState( boost::ref(state) );
        }
    }
    
    virtual void default_onLoadViewState( ::osiris::DataTree const & state ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::IHtmlControl::onLoadViewState( boost::ref(state) );
    }

    virtual void onRender( ::osiris::HtmlWriter & writer ){
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_onRender = this->get_override( "onRender" ) )
            func_onRender( boost::ref(writer) );
        else{
            __pystate.leave();
            this->::osiris::IHtmlControl::onRender( boost::ref(writer) );
        }
    }
    
    virtual void default_onRender( ::osiris::HtmlWriter & writer ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::IHtmlControl::onRender( boost::ref(writer) );
    }

    virtual void onSaveViewState( ::osiris::DataTree & state ){
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_onSaveViewState = this->get_override( "onSaveViewState" ) )
            func_onSaveViewState( boost::ref(state) );
        else{
            __pystate.leave();
            this->::osiris::IHtmlControl::onSaveViewState( boost::ref(state) );
        }
    }
    
    virtual void default_onSaveViewState( ::osiris::DataTree & state ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::IHtmlControl::onSaveViewState( boost::ref(state) );
    }

    static void raiseEvent( ::osiris::IHtmlControl & inst, ::osiris::String const & command ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        inst.raiseEvent(command);
        __pythreadSaver.restore();
    }

    virtual void renderAttributes( ::osiris::HtmlWriter & writer ) {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_renderAttributes = this->get_override( "renderAttributes" ) )
            func_renderAttributes( boost::ref(writer) );
        else{
            __pystate.leave();
            this->::osiris::IHtmlControl::renderAttributes( boost::ref(writer) );
        }
    }
    
    void default_renderAttributes( ::osiris::HtmlWriter & writer ) {
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::IHtmlControl::renderAttributes( boost::ref(writer) );
    }

    virtual void renderChilds( ::osiris::HtmlWriter & writer ) {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_renderChilds = this->get_override( "renderChilds" ) )
            func_renderChilds( boost::ref(writer) );
        else{
            __pystate.leave();
            this->::osiris::IHtmlControl::renderChilds( boost::ref(writer) );
        }
    }
    
    void default_renderChilds( ::osiris::HtmlWriter & writer ) {
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::IHtmlControl::renderChilds( boost::ref(writer) );
    }

    void saveViewState( ::osiris::DataTree & states ){
        ::osiris::IHtmlControl::saveViewState( boost::ref(states) );
    }

    static void setCss( ::osiris::IHtmlControl & inst, ::osiris::String const & css ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        inst.setCss(css);
        __pythreadSaver.restore();
    }

    static void setHeight( ::osiris::IHtmlControl & inst, ::osiris::HtmlUnit const & height ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        inst.setHeight(height);
        __pythreadSaver.restore();
    }

    static void setID( ::osiris::IHtmlControl & inst, ::osiris::String const & id ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        inst.setID(id);
        __pythreadSaver.restore();
    }

    static void setStyle( ::osiris::IHtmlControl & inst, ::osiris::String const & style ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        inst.setStyle(style);
        __pythreadSaver.restore();
    }

    static void setUID( ::osiris::IHtmlControl & inst, ::osiris::String const & id ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        inst.setUID(id);
        __pythreadSaver.restore();
    }

    static void setVisible( ::osiris::IHtmlControl & inst, bool visible ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        inst.setVisible(visible);
        __pythreadSaver.restore();
    }

    static void setWidth( ::osiris::IHtmlControl & inst, ::osiris::HtmlUnit const & width ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        inst.setWidth(width);
        __pythreadSaver.restore();
    }

};

void register_IHtmlControl_class(){

    { //::osiris::IHtmlControl
        typedef ::boost::python::class_< IHtmlControl_wrapper, ::boost::noncopyable > IHtmlControl_exposer_t;
        IHtmlControl_exposer_t IHtmlControl_exposer = IHtmlControl_exposer_t( "IHtmlControl", ::boost::python::no_init );
        ::boost::python::scope IHtmlControl_scope( IHtmlControl_exposer );
        IHtmlControl_exposer.def( ::boost::python::init< >() );
        { //::osiris::IHtmlControl::getID
        
            typedef boost::python::object ( *getID_function_type )( ::osiris::IHtmlControl const & );
            
            IHtmlControl_exposer.def( 
                "getID"
                , getID_function_type( &IHtmlControl_wrapper::getID ) );
        
        }
        { //::osiris::IHtmlControl::getUID
        
            typedef boost::python::object ( *getUID_function_type )( ::osiris::IHtmlControl const & );
            
            IHtmlControl_exposer.def( 
                "getUID"
                , getUID_function_type( &IHtmlControl_wrapper::getUID ) );
        
        }
        { //::osiris::IHtmlControl::hasID
        
            typedef boost::python::object ( *hasID_function_type )( ::osiris::IHtmlControl const & );
            
            IHtmlControl_exposer.def( 
                "hasID"
                , hasID_function_type( &IHtmlControl_wrapper::hasID ) );
        
        }
        { //::osiris::IHtmlControl::getCss
        
            typedef boost::python::object ( *getCss_function_type )( ::osiris::IHtmlControl const & );
            
            IHtmlControl_exposer.def( 
                "getCss"
                , getCss_function_type( &IHtmlControl_wrapper::getCss ) );
        
        }
        { //::osiris::IHtmlControl::hasCss
        
            typedef boost::python::object ( *hasCss_function_type )( ::osiris::IHtmlControl const & );
            
            IHtmlControl_exposer.def( 
                "hasCss"
                , hasCss_function_type( &IHtmlControl_wrapper::hasCss ) );
        
        }
        { //::osiris::IHtmlControl::getStyle
        
            typedef boost::python::object ( *getStyle_function_type )( ::osiris::IHtmlControl const & );
            
            IHtmlControl_exposer.def( 
                "getStyle"
                , getStyle_function_type( &IHtmlControl_wrapper::getStyle ) );
        
        }
        { //::osiris::IHtmlControl::hasStyle
        
            typedef boost::python::object ( *hasStyle_function_type )( ::osiris::IHtmlControl const & );
            
            IHtmlControl_exposer.def( 
                "hasStyle"
                , hasStyle_function_type( &IHtmlControl_wrapper::hasStyle ) );
        
        }
        { //::osiris::IHtmlControl::getPage
        
            typedef boost::python::object ( *getPage_function_type )( ::osiris::IHtmlControl const & );
            
            IHtmlControl_exposer.def( 
                "getPage"
                , getPage_function_type( &IHtmlControl_wrapper::getPage ) );
        
        }
        { //::osiris::IHtmlControl::getParent
        
            typedef boost::python::object ( *getParent_function_type )( ::osiris::IHtmlControl const & );
            
            IHtmlControl_exposer.def( 
                "getParent"
                , getParent_function_type( &IHtmlControl_wrapper::getParent ) );
        
        }
        { //::osiris::IHtmlControl::getAttributes
        
            typedef boost::python::object ( *getAttributes_function_type )( ::osiris::IHtmlControl const & );
            
            IHtmlControl_exposer.def( 
                "getAttributes"
                , getAttributes_function_type( &IHtmlControl_wrapper::getAttributes ) );
        
        }
        { //::osiris::IHtmlControl::getControls
        
            typedef boost::python::object ( *getControls_function_type )( ::osiris::IHtmlControl const & );
            
            IHtmlControl_exposer.def( 
                "getControls"
                , getControls_function_type( &IHtmlControl_wrapper::getControls ) );
        
        }
        { //::osiris::IHtmlControl::getEvents
        
            typedef boost::python::object ( *getEvents_function_type )( ::osiris::IHtmlControl const & );
            
            IHtmlControl_exposer.def( 
                "getEvents"
                , getEvents_function_type( &IHtmlControl_wrapper::getEvents ) );
        
        }
        { //::osiris::IHtmlControl::getEventInit
        
            typedef boost::python::object ( *getEventInit_function_type )( ::osiris::IHtmlControl const & );
            
            IHtmlControl_exposer.def( 
                "getEventInit"
                , getEventInit_function_type( &IHtmlControl_wrapper::getEventInit ) );
        
        }
        { //::osiris::IHtmlControl::getEventLoad
        
            typedef boost::python::object ( *getEventLoad_function_type )( ::osiris::IHtmlControl const & );
            
            IHtmlControl_exposer.def( 
                "getEventLoad"
                , getEventLoad_function_type( &IHtmlControl_wrapper::getEventLoad ) );
        
        }
        { //::osiris::IHtmlControl::getEventPreRender
        
            typedef boost::python::object ( *getEventPreRender_function_type )( ::osiris::IHtmlControl const & );
            
            IHtmlControl_exposer.def( 
                "getEventPreRender"
                , getEventPreRender_function_type( &IHtmlControl_wrapper::getEventPreRender ) );
        
        }
        { //::osiris::IHtmlControl::hasChilds
        
            typedef boost::python::object ( *hasChilds_function_type )( ::osiris::IHtmlControl const & );
            
            IHtmlControl_exposer.def( 
                "hasChilds"
                , hasChilds_function_type( &IHtmlControl_wrapper::hasChilds ) );
        
        }
        { //::osiris::IHtmlControl::getViewState
        
            typedef boost::python::object ( *getViewState_function_type )( ::osiris::IHtmlControl const & );
            
            IHtmlControl_exposer.def( 
                "getViewState"
                , getViewState_function_type( &IHtmlControl_wrapper::getViewState ) );
        
        }
        { //::osiris::IHtmlControl::getPostBack
        
            typedef boost::python::object ( *getPostBack_function_type )( ::osiris::IHtmlControl const & );
            
            IHtmlControl_exposer.def( 
                "getPostBack"
                , getPostBack_function_type( &IHtmlControl_wrapper::getPostBack ) );
        
        }
        { //::osiris::IHtmlControl::getSession
        
            typedef ::boost::shared_ptr< osiris::HttpSession > ( ::osiris::IHtmlControl::*getSession_function_type )(  ) const;
            typedef ::boost::shared_ptr< osiris::HttpSession > ( IHtmlControl_wrapper::*default_getSession_function_type )(  ) const;
            
            IHtmlControl_exposer.def( 
                "getSession"
                , getSession_function_type(&::osiris::IHtmlControl::getSession)
                , default_getSession_function_type(&IHtmlControl_wrapper::default_getSession) );
        
        }
        { //::osiris::IHtmlControl::getRequest
        
            typedef boost::python::object ( *getRequest_function_type )( ::osiris::IHtmlControl const & );
            
            IHtmlControl_exposer.def( 
                "getRequest"
                , getRequest_function_type( &IHtmlControl_wrapper::getRequest ) );
        
        }
        { //::osiris::IHtmlControl::getResponse
        
            typedef boost::python::object ( *getResponse_function_type )( ::osiris::IHtmlControl const & );
            
            IHtmlControl_exposer.def( 
                "getResponse"
                , getResponse_function_type( &IHtmlControl_wrapper::getResponse ) );
        
        }
        { //::osiris::IHtmlControl::getTarget
        
            typedef boost::python::object ( *getTarget_function_type )( ::osiris::IHtmlControl const & );
            
            IHtmlControl_exposer.def( 
                "getTarget"
                , getTarget_function_type( &IHtmlControl_wrapper::getTarget ) );
        
        }
        { //::osiris::IHtmlControl::getEventCommand
        
            typedef boost::python::object ( *getEventCommand_function_type )( ::osiris::IHtmlControl const &,::osiris::String const &,::osiris::String const & );
            
            IHtmlControl_exposer.def( 
                "getEventCommand"
                , getEventCommand_function_type( &IHtmlControl_wrapper::getEventCommand_c2c7c037d3d207a3d92f37d61d2dbb27 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("eventName"), ::boost::python::arg("e") ) );
        
        }
        { //::osiris::IHtmlControl::getWidth
        
            typedef boost::python::object ( *getWidth_function_type )( ::osiris::IHtmlControl const & );
            
            IHtmlControl_exposer.def( 
                "getWidth"
                , getWidth_function_type( &IHtmlControl_wrapper::getWidth ) );
        
        }
        { //::osiris::IHtmlControl::getHeight
        
            typedef boost::python::object ( *getHeight_function_type )( ::osiris::IHtmlControl const & );
            
            IHtmlControl_exposer.def( 
                "getHeight"
                , getHeight_function_type( &IHtmlControl_wrapper::getHeight ) );
        
        }
        { //::osiris::IHtmlControl::getVisible
        
            typedef boost::python::object ( *getVisible_function_type )( ::osiris::IHtmlControl const & );
            
            IHtmlControl_exposer.def( 
                "getVisible"
                , getVisible_function_type( &IHtmlControl_wrapper::getVisible ) );
        
        }
        { //::osiris::IHtmlControl::render
        
            typedef void ( *render_function_type )( ::osiris::IHtmlControl &,::boost::shared_ptr<osiris::HtmlPage>,::osiris::HtmlWriter & );
            
            IHtmlControl_exposer.def( 
                "render"
                , render_function_type( &IHtmlControl_wrapper::render )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("page"), ::boost::python::arg("writer") ) );
        
        }
        { //::osiris::IHtmlControl::decodeEvent
        
            typedef bool ( IHtmlControl_wrapper::*decodeEvent_function_type )( ::osiris::String const &,::osiris::String &,::osiris::HtmlEvent & ) const;
            
            IHtmlControl_exposer.def( 
                "decodeEvent"
                , decodeEvent_function_type( &IHtmlControl_wrapper::decodeEvent )
                , ( ::boost::python::arg("command"), ::boost::python::arg("eventName"), ::boost::python::arg("e") ) );
        
        }
        { //::osiris::IHtmlControl::onInit
        
            typedef void ( IHtmlControl_wrapper::*onInit_function_type )(  ) ;
            
            IHtmlControl_exposer.def( 
                "onInit"
                , onInit_function_type( &IHtmlControl_wrapper::default_onInit ) );
        
        }
        { //::osiris::IHtmlControl::onLoad
        
            typedef void ( IHtmlControl_wrapper::*onLoad_function_type )(  ) ;
            
            IHtmlControl_exposer.def( 
                "onLoad"
                , onLoad_function_type( &IHtmlControl_wrapper::default_onLoad ) );
        
        }
        { //::osiris::IHtmlControl::onPreRender
        
            typedef void ( IHtmlControl_wrapper::*onPreRender_function_type )(  ) ;
            
            IHtmlControl_exposer.def( 
                "onPreRender"
                , onPreRender_function_type( &IHtmlControl_wrapper::default_onPreRender ) );
        
        }
        { //::osiris::IHtmlControl::encodeEvent
        
            typedef ::osiris::String ( IHtmlControl_wrapper::*encodeEvent_function_type )( ::osiris::String const &,::osiris::HtmlEvent const * ) const;
            
            IHtmlControl_exposer.def( 
                "encodeEvent"
                , encodeEvent_function_type( &IHtmlControl_wrapper::encodeEvent )
                , ( ::boost::python::arg("eventName"), ::boost::python::arg("e")=(osiris::null) ) );
        
        }
        { //::osiris::IHtmlControl::findTarget
        
            typedef boost::python::object ( *findTarget_function_type )( ::osiris::IHtmlControl &,::osiris::String const & );
            
            IHtmlControl_exposer.def( 
                "findTarget"
                , findTarget_function_type( &IHtmlControl_wrapper::findTarget )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("target") ) );
        
        }
        { //::osiris::IHtmlControl::getEventCommand
        
            typedef boost::python::object ( *getEventCommand_function_type )( ::osiris::IHtmlControl const &,::osiris::String const &,::osiris::HtmlEvent const * );
            
            IHtmlControl_exposer.def( 
                "getEventCommand"
                , getEventCommand_function_type( &IHtmlControl_wrapper::getEventCommand_5f9eb79715d8c7f66e3fdd78ba915328 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("eventName"), ::boost::python::arg("e")=(osiris::null) ) );
        
        }
        { //::osiris::IHtmlControl::onEvent
        
            typedef void ( IHtmlControl_wrapper::*onEvent_function_type )( ::osiris::String const &,::osiris::IEvent * ) ;
            
            IHtmlControl_exposer.def( 
                "onEvent"
                , onEvent_function_type( &IHtmlControl_wrapper::default_onEvent )
                , ( ::boost::python::arg("name"), ::boost::python::arg("e")=(osiris::null) ) );
        
        }
        { //::osiris::IHtmlControl::onLoadViewState
        
            typedef void ( IHtmlControl_wrapper::*onLoadViewState_function_type )( ::osiris::DataTree const & ) ;
            
            IHtmlControl_exposer.def( 
                "onLoadViewState"
                , onLoadViewState_function_type( &IHtmlControl_wrapper::default_onLoadViewState )
                , ( ::boost::python::arg("state") ) );
        
        }
        { //::osiris::IHtmlControl::onRender
        
            typedef void ( IHtmlControl_wrapper::*onRender_function_type )( ::osiris::HtmlWriter & ) ;
            
            IHtmlControl_exposer.def( 
                "onRender"
                , onRender_function_type( &IHtmlControl_wrapper::default_onRender )
                , ( ::boost::python::arg("writer") ) );
        
        }
        { //::osiris::IHtmlControl::onSaveViewState
        
            typedef void ( IHtmlControl_wrapper::*onSaveViewState_function_type )( ::osiris::DataTree & ) ;
            
            IHtmlControl_exposer.def( 
                "onSaveViewState"
                , onSaveViewState_function_type( &IHtmlControl_wrapper::default_onSaveViewState )
                , ( ::boost::python::arg("state") ) );
        
        }
        { //::osiris::IHtmlControl::raiseEvent
        
            typedef void ( *raiseEvent_function_type )( ::osiris::IHtmlControl &,::osiris::String const & );
            
            IHtmlControl_exposer.def( 
                "raiseEvent"
                , raiseEvent_function_type( &IHtmlControl_wrapper::raiseEvent )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("command") ) );
        
        }
        { //::osiris::IHtmlControl::renderAttributes
        
            typedef void ( ::osiris::IHtmlControl::*renderAttributes_function_type )( ::osiris::HtmlWriter & ) ;
            typedef void ( IHtmlControl_wrapper::*default_renderAttributes_function_type )( ::osiris::HtmlWriter & ) ;
            
            IHtmlControl_exposer.def( 
                "renderAttributes"
                , renderAttributes_function_type(&::osiris::IHtmlControl::renderAttributes)
                , default_renderAttributes_function_type(&IHtmlControl_wrapper::default_renderAttributes)
                , ( ::boost::python::arg("writer") ) );
        
        }
        { //::osiris::IHtmlControl::renderChilds
        
            typedef void ( ::osiris::IHtmlControl::*renderChilds_function_type )( ::osiris::HtmlWriter & ) ;
            typedef void ( IHtmlControl_wrapper::*default_renderChilds_function_type )( ::osiris::HtmlWriter & ) ;
            
            IHtmlControl_exposer.def( 
                "renderChilds"
                , renderChilds_function_type(&::osiris::IHtmlControl::renderChilds)
                , default_renderChilds_function_type(&IHtmlControl_wrapper::default_renderChilds)
                , ( ::boost::python::arg("writer") ) );
        
        }
        { //::osiris::IHtmlControl::saveViewState
        
            typedef void ( IHtmlControl_wrapper::*saveViewState_function_type )( ::osiris::DataTree & ) ;
            
            IHtmlControl_exposer.def( 
                "saveViewState"
                , saveViewState_function_type( &IHtmlControl_wrapper::saveViewState )
                , ( ::boost::python::arg("states") ) );
        
        }
        { //::osiris::IHtmlControl::setCss
        
            typedef void ( *setCss_function_type )( ::osiris::IHtmlControl &,::osiris::String const & );
            
            IHtmlControl_exposer.def( 
                "setCss"
                , setCss_function_type( &IHtmlControl_wrapper::setCss )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("css") ) );
        
        }
        { //::osiris::IHtmlControl::setHeight
        
            typedef void ( *setHeight_function_type )( ::osiris::IHtmlControl &,::osiris::HtmlUnit const & );
            
            IHtmlControl_exposer.def( 
                "setHeight"
                , setHeight_function_type( &IHtmlControl_wrapper::setHeight )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("height") ) );
        
        }
        { //::osiris::IHtmlControl::setID
        
            typedef void ( *setID_function_type )( ::osiris::IHtmlControl &,::osiris::String const & );
            
            IHtmlControl_exposer.def( 
                "setID"
                , setID_function_type( &IHtmlControl_wrapper::setID )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("id") ) );
        
        }
        { //::osiris::IHtmlControl::setStyle
        
            typedef void ( *setStyle_function_type )( ::osiris::IHtmlControl &,::osiris::String const & );
            
            IHtmlControl_exposer.def( 
                "setStyle"
                , setStyle_function_type( &IHtmlControl_wrapper::setStyle )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("style") ) );
        
        }
        { //::osiris::IHtmlControl::setUID
        
            typedef void ( *setUID_function_type )( ::osiris::IHtmlControl &,::osiris::String const & );
            
            IHtmlControl_exposer.def( 
                "setUID"
                , setUID_function_type( &IHtmlControl_wrapper::setUID )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("id") ) );
        
        }
        { //::osiris::IHtmlControl::setVisible
        
            typedef void ( *setVisible_function_type )( ::osiris::IHtmlControl &,bool );
            
            IHtmlControl_exposer.def( 
                "setVisible"
                , setVisible_function_type( &IHtmlControl_wrapper::setVisible )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("visible") ) );
        
        }
        { //::osiris::IHtmlControl::setWidth
        
            typedef void ( *setWidth_function_type )( ::osiris::IHtmlControl &,::osiris::HtmlUnit const & );
            
            IHtmlControl_exposer.def( 
                "setWidth"
                , setWidth_function_type( &IHtmlControl_wrapper::setWidth )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("width") ) );
        
        }
        IHtmlControl_exposer.def_readonly( "EVENT_ONINIT", ::osiris::IHtmlControl::EVENT_ONINIT );
        IHtmlControl_exposer.def_readonly( "EVENT_ONLOAD", ::osiris::IHtmlControl::EVENT_ONLOAD );
        IHtmlControl_exposer.def_readonly( "EVENT_ONPRERENDER", ::osiris::IHtmlControl::EVENT_ONPRERENDER );
        { //property "id"[fget=::osiris::IHtmlControl::getID, fset=::osiris::IHtmlControl::setID]
        
            typedef ::osiris::String const & ( ::osiris::IHtmlControl::*fget )(  ) const;
            typedef void ( ::osiris::IHtmlControl::*fset )( ::osiris::String const & ) ;
            
            IHtmlControl_exposer.add_property( 
                "id"
                , ::boost::python::make_function( 
                      fget( &::osiris::IHtmlControl::getID )
                    , bp::return_value_policy< bp::copy_const_reference >() ) 
                , fset( &::osiris::IHtmlControl::setID )
                , "get\\set property, built on top of \"osiris::String const & osiris::IHtmlControl::getID() const [member function]\" and \"void osiris::IHtmlControl::setID(osiris::String const & id) [member function]\"" );
        
        }
        { //property "uid"[fget=::osiris::IHtmlControl::getUID, fset=::osiris::IHtmlControl::setUID]
        
            typedef ::osiris::String const & ( ::osiris::IHtmlControl::*fget )(  ) const;
            typedef void ( ::osiris::IHtmlControl::*fset )( ::osiris::String const & ) ;
            
            IHtmlControl_exposer.add_property( 
                "uid"
                , ::boost::python::make_function( 
                      fget( &::osiris::IHtmlControl::getUID )
                    , bp::return_value_policy< bp::copy_const_reference >() ) 
                , fset( &::osiris::IHtmlControl::setUID )
                , "get\\set property, built on top of \"osiris::String const & osiris::IHtmlControl::getUID() const [member function]\" and \"void osiris::IHtmlControl::setUID(osiris::String const & id) [member function]\"" );
        
        }
        { //property "css"[fget=::osiris::IHtmlControl::getCss, fset=::osiris::IHtmlControl::setCss]
        
            typedef ::osiris::String const & ( ::osiris::IHtmlControl::*fget )(  ) const;
            typedef void ( ::osiris::IHtmlControl::*fset )( ::osiris::String const & ) ;
            
            IHtmlControl_exposer.add_property( 
                "css"
                , ::boost::python::make_function( 
                      fget( &::osiris::IHtmlControl::getCss )
                    , bp::return_value_policy< bp::copy_const_reference >() ) 
                , fset( &::osiris::IHtmlControl::setCss )
                , "get\\set property, built on top of \"osiris::String const & osiris::IHtmlControl::getCss() const [member function]\" and \"void osiris::IHtmlControl::setCss(osiris::String const & css) [member function]\"" );
        
        }
        { //property "style"[fget=::osiris::IHtmlControl::getStyle, fset=::osiris::IHtmlControl::setStyle]
        
            typedef ::osiris::String const & ( ::osiris::IHtmlControl::*fget )(  ) const;
            typedef void ( ::osiris::IHtmlControl::*fset )( ::osiris::String const & ) ;
            
            IHtmlControl_exposer.add_property( 
                "style"
                , ::boost::python::make_function( 
                      fget( &::osiris::IHtmlControl::getStyle )
                    , bp::return_value_policy< bp::copy_const_reference >() ) 
                , fset( &::osiris::IHtmlControl::setStyle )
                , "get\\set property, built on top of \"osiris::String const & osiris::IHtmlControl::getStyle() const [member function]\" and \"void osiris::IHtmlControl::setStyle(osiris::String const & style) [member function]\"" );
        
        }
        { //property "width"[fget=::osiris::IHtmlControl::getWidth, fset=::osiris::IHtmlControl::setWidth]
        
            typedef ::osiris::HtmlUnit ( ::osiris::IHtmlControl::*fget )(  ) const;
            typedef void ( ::osiris::IHtmlControl::*fset )( ::osiris::HtmlUnit const & ) ;
            
            IHtmlControl_exposer.add_property( 
                "width"
                , fget( &::osiris::IHtmlControl::getWidth )
                , fset( &::osiris::IHtmlControl::setWidth )
                , "get\\set property, built on top of \"osiris::HtmlUnit osiris::IHtmlControl::getWidth() const [member function]\" and \"void osiris::IHtmlControl::setWidth(osiris::HtmlUnit const & width) [member function]\"" );
        
        }
        { //property "height"[fget=::osiris::IHtmlControl::getHeight, fset=::osiris::IHtmlControl::setHeight]
        
            typedef ::osiris::HtmlUnit ( ::osiris::IHtmlControl::*fget )(  ) const;
            typedef void ( ::osiris::IHtmlControl::*fset )( ::osiris::HtmlUnit const & ) ;
            
            IHtmlControl_exposer.add_property( 
                "height"
                , fget( &::osiris::IHtmlControl::getHeight )
                , fset( &::osiris::IHtmlControl::setHeight )
                , "get\\set property, built on top of \"osiris::HtmlUnit osiris::IHtmlControl::getHeight() const [member function]\" and \"void osiris::IHtmlControl::setHeight(osiris::HtmlUnit const & height) [member function]\"" );
        
        }
        { //property "visible"[fget=::osiris::IHtmlControl::getVisible, fset=::osiris::IHtmlControl::setVisible]
        
            typedef bool ( ::osiris::IHtmlControl::*fget )(  ) const;
            typedef void ( ::osiris::IHtmlControl::*fset )( bool ) ;
            
            IHtmlControl_exposer.add_property( 
                "visible"
                , fget( &::osiris::IHtmlControl::getVisible )
                , fset( &::osiris::IHtmlControl::setVisible )
                , "get\\set property, built on top of \"bool osiris::IHtmlControl::getVisible() const [member function]\" and \"void osiris::IHtmlControl::setVisible(bool visible) [member function]\"" );
        
        }
        { //property "page"[fget=::osiris::IHtmlControl::getPage]
        
            typedef ::boost::shared_ptr<osiris::HtmlPage> ( ::osiris::IHtmlControl::*fget )(  ) const;
            
            IHtmlControl_exposer.add_property( 
                "page"
                , fget( &::osiris::IHtmlControl::getPage )
                , "get property, built on top of \"boost::shared_ptr<osiris::HtmlPage> osiris::IHtmlControl::getPage() const [member function]\"" );
        
        }
        { //property "parent"[fget=::osiris::IHtmlControl::getParent]
        
            typedef ::boost::shared_ptr<osiris::IHtmlControl> ( ::osiris::IHtmlControl::*fget )(  ) const;
            
            IHtmlControl_exposer.add_property( 
                "parent"
                , fget( &::osiris::IHtmlControl::getParent )
                , "get property, built on top of \"boost::shared_ptr<osiris::IHtmlControl> osiris::IHtmlControl::getParent() const [member function]\"" );
        
        }
        { //property "attributes"[fget=::osiris::IHtmlControl::getAttributes]
        
            typedef ::boost::shared_ptr<osiris::HtmlAttributes> ( ::osiris::IHtmlControl::*fget )(  ) const;
            
            IHtmlControl_exposer.add_property( 
                "attributes"
                , fget( &::osiris::IHtmlControl::getAttributes )
                , "get property, built on top of \"boost::shared_ptr<osiris::HtmlAttributes> osiris::IHtmlControl::getAttributes() const [member function]\"" );
        
        }
        { //property "controls"[fget=::osiris::IHtmlControl::getControls]
        
            typedef ::boost::shared_ptr<osiris::HtmlControls> ( ::osiris::IHtmlControl::*fget )(  ) const;
            
            IHtmlControl_exposer.add_property( 
                "controls"
                , fget( &::osiris::IHtmlControl::getControls )
                , "get property, built on top of \"boost::shared_ptr<osiris::HtmlControls> osiris::IHtmlControl::getControls() const [member function]\"" );
        
        }
        { //property "events"[fget=::osiris::IHtmlControl::getEvents]
        
            typedef ::boost::shared_ptr<osiris::EventsSource<osiris::String, osiris::IEvent> > ( ::osiris::IHtmlControl::*fget )(  ) const;
            
            IHtmlControl_exposer.add_property( 
                "events"
                , fget( &::osiris::IHtmlControl::getEvents )
                , "get property, built on top of \"boost::shared_ptr<osiris::EventsSource<osiris::String, osiris::IEvent> > osiris::IHtmlControl::getEvents() const [member function]\"" );
        
        }
        { //property "eventInit"[fget=::osiris::IHtmlControl::getEventInit]
        
            typedef ::boost::shared_ptr<osiris::EventSource> ( ::osiris::IHtmlControl::*fget )(  ) const;
            
            IHtmlControl_exposer.add_property( 
                "eventInit"
                , fget( &::osiris::IHtmlControl::getEventInit )
                , "get property, built on top of \"boost::shared_ptr<osiris::EventSource> osiris::IHtmlControl::getEventInit() const [member function]\"" );
        
        }
        { //property "eventLoad"[fget=::osiris::IHtmlControl::getEventLoad]
        
            typedef ::boost::shared_ptr<osiris::EventSource> ( ::osiris::IHtmlControl::*fget )(  ) const;
            
            IHtmlControl_exposer.add_property( 
                "eventLoad"
                , fget( &::osiris::IHtmlControl::getEventLoad )
                , "get property, built on top of \"boost::shared_ptr<osiris::EventSource> osiris::IHtmlControl::getEventLoad() const [member function]\"" );
        
        }
        { //property "eventPreRender"[fget=::osiris::IHtmlControl::getEventPreRender]
        
            typedef ::boost::shared_ptr<osiris::EventSource> ( ::osiris::IHtmlControl::*fget )(  ) const;
            
            IHtmlControl_exposer.add_property( 
                "eventPreRender"
                , fget( &::osiris::IHtmlControl::getEventPreRender )
                , "get property, built on top of \"boost::shared_ptr<osiris::EventSource> osiris::IHtmlControl::getEventPreRender() const [member function]\"" );
        
        }
        { //property "viewState"[fget=::osiris::IHtmlControl::getViewState]
        
            typedef ::osiris::DataTree const & ( ::osiris::IHtmlControl::*fget )(  ) const;
            
            IHtmlControl_exposer.add_property( 
                "viewState"
                , ::boost::python::make_function( 
                      fget( &::osiris::IHtmlControl::getViewState )
                    , bp::return_value_policy< bp::copy_const_reference >() ) 
                , "get property, built on top of \"osiris::DataTree const & osiris::IHtmlControl::getViewState() const [member function]\"" );
        
        }
        { //property "postBack"[fget=::osiris::IHtmlControl::getPostBack]
        
            typedef bool ( ::osiris::IHtmlControl::*fget )(  ) const;
            
            IHtmlControl_exposer.add_property( 
                "postBack"
                , fget( &::osiris::IHtmlControl::getPostBack )
                , "get property, built on top of \"bool osiris::IHtmlControl::getPostBack() const [member function]\"" );
        
        }
        { //property "session"[fget=::osiris::IHtmlControl::getSession]
        
            typedef ::boost::shared_ptr<osiris::HttpSession> ( ::osiris::IHtmlControl::*fget )(  ) const;
            
            IHtmlControl_exposer.add_property( 
                "session"
                , fget( &::osiris::IHtmlControl::getSession )
                , "get property, built on top of \"boost::shared_ptr<osiris::HttpSession> osiris::IHtmlControl::getSession() const [member function]\"" );
        
        }
        { //property "request"[fget=::osiris::IHtmlControl::getRequest]
        
            typedef ::boost::shared_ptr<osiris::HttpRequest> ( ::osiris::IHtmlControl::*fget )(  ) const;
            
            IHtmlControl_exposer.add_property( 
                "request"
                , fget( &::osiris::IHtmlControl::getRequest )
                , "get property, built on top of \"boost::shared_ptr<osiris::HttpRequest> osiris::IHtmlControl::getRequest() const [member function]\"" );
        
        }
        { //property "response"[fget=::osiris::IHtmlControl::getResponse]
        
            typedef ::boost::shared_ptr<osiris::HttpResponse> ( ::osiris::IHtmlControl::*fget )(  ) const;
            
            IHtmlControl_exposer.add_property( 
                "response"
                , fget( &::osiris::IHtmlControl::getResponse )
                , "get property, built on top of \"boost::shared_ptr<osiris::HttpResponse> osiris::IHtmlControl::getResponse() const [member function]\"" );
        
        }
        { //property "target"[fget=::osiris::IHtmlControl::getTarget]
        
            typedef ::osiris::String ( ::osiris::IHtmlControl::*fget )(  ) const;
            
            IHtmlControl_exposer.add_property( 
                "target"
                , fget( &::osiris::IHtmlControl::getTarget )
                , "get property, built on top of \"osiris::String osiris::IHtmlControl::getTarget() const [member function]\"" );
        
        }
        ::boost::python::register_ptr_to_python< boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IHtmlControl >, boost::shared_ptr< ::boost::noncopyable_::noncopyable > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IHtmlControl >, boost::shared_ptr< ::boost::signals::trackable > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IHtmlControl >, boost::shared_ptr< ::osiris::enable_this_ptr< osiris::IHtmlControl > > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IHtmlControl >, boost::shared_ptr< ::osiris::Object > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::HtmlOption >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::HtmlImage >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::HtmlScript >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IHtmlInput >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::HtmlCheckBox >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::HtmlFileBrowser >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::HtmlTextBox >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IdePickerBool >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::HtmlPanel >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::HtmlDiv >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::HtmlTooltip >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::HtmlPager >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::HtmlPopup >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IPageControl< osiris::HtmlDiv > >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IdePickerCulture >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IdePickerSelect >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IdePickerSkin >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IdePickerComponent >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IdePickerSections >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IPortalPageControl< osiris::HtmlDiv > >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::ExtensionsModuleControl >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::ExtensionsModuleEditor >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::ExtensionsModuleViewer >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::ExtensionsInvalidModule >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::ExtensionsModuleViewerHidden >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::ExtensionsComponentControl >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::ExtensionsComponentEditor >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::ExtensionsComponentViewer >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::ExtensionsInvalidComponent >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IdePositionEditor >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IdeSearchParam >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::HtmlTabPage >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::HtmlTab >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::HtmlRoller >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::HtmlLinkButton >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IHtmlSelect >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::HtmlComboBox >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::HtmlListBox >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::HtmlLink >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::HtmlTableRow >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::HtmlTextArea >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::HtmlPage >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IPage >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IPortalPage >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IMainPage >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::HtmlVirtualPage< osiris::IMainPage > >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::HtmlLiteral >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::HtmlBR >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::HtmlTabCtrl >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::HtmlTableCell >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::HtmlTableHeader >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::HtmlParagraph >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::HtmlSpace >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IPageControl< osiris::IHtmlControl > >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IdePickerNumber >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IdePickerObject >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IXSLRenderer< osiris::IPageControl< osiris::IHtmlControl > > >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IdeBlock >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IdeOMLEditor >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IdeButton >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IdeHelpBox >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IdePickerDateTime >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IdePickerDateTimeSpecial >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IdePickerColor >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IPortalPageControl< osiris::IHtmlControl > >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IdeVoteEditor >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IXSLRenderer< osiris::IPortalPageControl< osiris::IHtmlControl > > >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IdePickerObjectEx >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IdeMailBox >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IdeSearchResults >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IdeTableQuery >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IdeSearchGlobalParams >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IdeSearchQuery >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IdeAssistant >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::HtmlTable >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::HtmlOptionGroup >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::HtmlXSLControl >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::HtmlSpan >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::HtmlButton >, boost::shared_ptr< ::osiris::IHtmlControl > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::HtmlText >, boost::shared_ptr< ::osiris::IHtmlControl > >();
    }

}
