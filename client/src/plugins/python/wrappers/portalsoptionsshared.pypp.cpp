// This file has been generated by Py++.

#include "stdafx.h"
#include "pypluspluscommon.h"
#include "boost/python.hpp"
#include "__call_policies.pypp.hpp"
#include "portalsoptionsshared.h"
#include "datetime.h"
#include "idboptions.h"
#include "portalsoptionsshared.pypp.hpp"

namespace bp = boost::python;

static boost::python::object getPortal_2b21295d7e9a7e286ce9d864855dcd26( ::osiris::PortalsOptionsShared const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::boost::shared_ptr<osiris::Portal> const result = inst.getPortal();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getPortalName_ae20ff0c2a04890e0b6b29a48168ec21( ::osiris::PortalsOptionsShared const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::String result = inst.getPortalName();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getPortalDescription_17ca94f6ef525080c051ace6be3cd7b2( ::osiris::PortalsOptionsShared const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::String result = inst.getPortalDescription();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getAuthorsReputationThreshold_442d435c616a3275998568f271cdac99( ::osiris::PortalsOptionsShared const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::ObjectsReputationThreshold result = inst.getAuthorsReputationThreshold();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getEditorsReputationThreshold_5323bb6850ef01838f1cc251decaa210( ::osiris::PortalsOptionsShared const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::ObjectsReputationThreshold result = inst.getEditorsReputationThreshold();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getPovWhiteList_7cab2511348c37743023bec4e51f4984( ::osiris::PortalsOptionsShared const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::String result = inst.getPovWhiteList();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getPovBlackList_6480ce74f158c47cb6cf6ab0b43b72bd( ::osiris::PortalsOptionsShared const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::String result = inst.getPovBlackList();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getAvatarMaxWidth_a194958ba45d7b591f7e85a4f3c63a41( ::osiris::PortalsOptionsShared const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::uint32 result = inst.getAvatarMaxWidth();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getAvatarMaxHeight_5485de0c558768c8b18ccd395fcfee89( ::osiris::PortalsOptionsShared const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::uint32 result = inst.getAvatarMaxHeight();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getObjectsPhysicalRemove_e64c9a0e438060813acc23aaafc12afb( ::osiris::PortalsOptionsShared const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    bool result = inst.getObjectsPhysicalRemove();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getObjectsPhysicalRemoveDays_7fd046a90f0e26005517a525471c081d( ::osiris::PortalsOptionsShared const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::int32 result = inst.getObjectsPhysicalRemoveDays();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getObjectsMaxSize_e3ec08107fb524428e4fffaac9fe346e( ::osiris::PortalsOptionsShared const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::uint32 result = inst.getObjectsMaxSize();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getAllowObjectInFuture_adbb9fbcefcbee9c708150005f8234b0( ::osiris::PortalsOptionsShared const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    bool result = inst.getAllowObjectInFuture();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getAllowObjectUnsigned_9e4c109fd6efc51a0039610abbe5269f( ::osiris::PortalsOptionsShared const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    bool result = inst.getAllowObjectUnsigned();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getBadWords_488505233b547a13abbf205bab6372d1( ::osiris::PortalsOptionsShared const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::String result = inst.getBadWords();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getRegisterTerms_897efbb858060c27f68f7439e7038d7c( ::osiris::PortalsOptionsShared const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::String result = inst.getRegisterTerms();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getLayoutTileImage_c25a5b656b465753fe04eb1d0255ddba( ::osiris::PortalsOptionsShared const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::UniqueID result = inst.getLayoutTileImage();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getLayoutTileColorBackground_2f46c9b48edd5b6668a95cd55ed63e5c( ::osiris::PortalsOptionsShared const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::String result = inst.getLayoutTileColorBackground();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getLayoutTileColorForeground_d1acecd24ea910fc1f426565436ae74a( ::osiris::PortalsOptionsShared const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::String result = inst.getLayoutTileColorForeground();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getLayoutCss_4135c6fa37f049f6871797eff99ff7fd( ::osiris::PortalsOptionsShared const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::String result = inst.getLayoutCss();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getLayoutComponent_6ee4bb99a2f269ebab17351ed9fab811( ::osiris::PortalsOptionsShared const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::String result = inst.getLayoutComponent();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getLayoutSkin_deb7f38ec1ee8127afbf6369fbfa72ef( ::osiris::PortalsOptionsShared const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::String result = inst.getLayoutSkin();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getLayoutSkinParams_9eaeb7a7df4b6e0422013be1d5c8c130( ::osiris::PortalsOptionsShared const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::String result = inst.getLayoutSkinParams();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getLayoutHeader_17e9bd529e4d2790cd6966cd5a2943af( ::osiris::PortalsOptionsShared const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    bool result = inst.getLayoutHeader();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getAcceptableHash_111c10c04cb0b0443290ccafdf2a5b46( ::osiris::PortalsOptionsShared const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::std::string result = inst.getAcceptableHash();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static void clear_49bf295de10cd4423dc3b942f4366a5c( ::osiris::PortalsOptionsShared & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.clear();
    __pythreadSaver.restore();
}

static boost::python::object validate_d3a92a72bbfd3357243e9723e6538d5a( ::osiris::PortalsOptionsShared const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    bool result = inst.validate();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static void unload_1f11f3c26d3c48aa0cb1fc40f398914d( ::osiris::PortalsOptionsShared & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.unload();
    __pythreadSaver.restore();
}

static void reload_0df09c9811a2473adb1bcf514a2c5827( ::osiris::PortalsOptionsShared & inst, ::boost::shared_ptr< osiris::IPortalDatabase > const & database ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.reload(database);
    __pythreadSaver.restore();
}

static void setAllowObjectInFuture_f0da139037ab68efde87def88e769c52( ::osiris::PortalsOptionsShared & inst, bool const & value ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.setAllowObjectInFuture(value);
    __pythreadSaver.restore();
}

static void setAllowObjectUnsigned_ace33e8a8264e92bdac92f66fb183446( ::osiris::PortalsOptionsShared & inst, bool const & value ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.setAllowObjectUnsigned(value);
    __pythreadSaver.restore();
}

static void setAuthorsReputationThreshold_8b3c689c876ba2d2268a173134d0882e( ::osiris::PortalsOptionsShared & inst, ::osiris::ObjectsReputationThreshold const & threshold ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.setAuthorsReputationThreshold(threshold);
    __pythreadSaver.restore();
}

static void setAvatarMaxHeight_4a41033e5b0070792d3efceff36ddf73( ::osiris::PortalsOptionsShared & inst, ::osiris::uint32 const & value ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.setAvatarMaxHeight(value);
    __pythreadSaver.restore();
}

static void setAvatarMaxWidth_664796f423451e12dfc0f40e6ae495f8( ::osiris::PortalsOptionsShared & inst, ::osiris::uint32 const & value ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.setAvatarMaxWidth(value);
    __pythreadSaver.restore();
}

static void setBadWords_5fd7afb17573a749aba6e115cbb7b358( ::osiris::PortalsOptionsShared & inst, ::osiris::String const & value ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.setBadWords(value);
    __pythreadSaver.restore();
}

static void setEditorsReputationThreshold_83f8ce1fe7d064f753df7c3ed45828a3( ::osiris::PortalsOptionsShared & inst, ::osiris::ObjectsReputationThreshold const & threshold ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.setEditorsReputationThreshold(threshold);
    __pythreadSaver.restore();
}

static void setLayoutComponent_e733ad660b11c94fca6bfea13d483bed( ::osiris::PortalsOptionsShared & inst, ::osiris::String const & value ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.setLayoutComponent(value);
    __pythreadSaver.restore();
}

static void setLayoutCss_726bfa80ffd3d2b8a061540094574268( ::osiris::PortalsOptionsShared & inst, ::osiris::String const & value ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.setLayoutCss(value);
    __pythreadSaver.restore();
}

static void setLayoutHeader_8d4335dca200c22d63b1810360f77a65( ::osiris::PortalsOptionsShared & inst, bool const & value ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.setLayoutHeader(value);
    __pythreadSaver.restore();
}

static void setLayoutSkin_0059e4d3b6ff90bc1f7349dff786c4f4( ::osiris::PortalsOptionsShared & inst, ::osiris::String const & value ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.setLayoutSkin(value);
    __pythreadSaver.restore();
}

static void setLayoutSkinParams_c13d033715e777c4c7499c0f6213868e( ::osiris::PortalsOptionsShared & inst, ::osiris::String const & value ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.setLayoutSkinParams(value);
    __pythreadSaver.restore();
}

static void setLayoutTileColorBackground_1bb9381d2ecce10aa164da249381df0f( ::osiris::PortalsOptionsShared & inst, ::osiris::String const & value ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.setLayoutTileColorBackground(value);
    __pythreadSaver.restore();
}

static void setLayoutTileColorForeground_f061a6d231a801bd439139001fb6c072( ::osiris::PortalsOptionsShared & inst, ::osiris::String const & value ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.setLayoutTileColorForeground(value);
    __pythreadSaver.restore();
}

static void setLayoutTileImage_c1b9d3d90b9c6813793b0806a4be3fbf( ::osiris::PortalsOptionsShared & inst, ::osiris::UniqueID const & value ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.setLayoutTileImage(value);
    __pythreadSaver.restore();
}

static void setObjectsMaxSize_a085cd119297d604444bcebee08b0607( ::osiris::PortalsOptionsShared & inst, ::osiris::uint32 const & value ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.setObjectsMaxSize(value);
    __pythreadSaver.restore();
}

static void setObjectsPhysicalRemove_d0003df403ed1905d9072d0ea0104583( ::osiris::PortalsOptionsShared & inst, bool const & value ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.setObjectsPhysicalRemove(value);
    __pythreadSaver.restore();
}

static void setObjectsPhysicalRemoveDays_67f2a93783b4b2d813b836bb0d7e0d5c( ::osiris::PortalsOptionsShared & inst, ::osiris::int32 const & value ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.setObjectsPhysicalRemoveDays(value);
    __pythreadSaver.restore();
}

static void setPortalDescription_903f98c56630d0fb59950efa39baf31d( ::osiris::PortalsOptionsShared & inst, ::osiris::String const & description ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.setPortalDescription(description);
    __pythreadSaver.restore();
}

static void setPortalName_af34ccd7d7030e19fa5cb3710fc10882( ::osiris::PortalsOptionsShared & inst, ::osiris::String const & name ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.setPortalName(name);
    __pythreadSaver.restore();
}

static void setPovBlackList_cd5c9791e2da5a57471ae5fc745bfb14( ::osiris::PortalsOptionsShared & inst, ::osiris::String const & value ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.setPovBlackList(value);
    __pythreadSaver.restore();
}

static void setPovWhiteList_7ad3a02a7d65dc500d1f62c54ba0ffe2( ::osiris::PortalsOptionsShared & inst, ::osiris::String const & value ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.setPovWhiteList(value);
    __pythreadSaver.restore();
}

static void setRegisterTerms_c433f5dfd3c99ddf6cade85f56efbe8f( ::osiris::PortalsOptionsShared & inst, ::osiris::String const & value ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.setRegisterTerms(value);
    __pythreadSaver.restore();
}

static boost::python::object writeString_01b390e04a3fc97c87bb9368cc6202c6( ::osiris::PortalsOptionsShared & inst, ::osiris::String & data ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    bool result = inst.writeString(data);
    __pythreadSaver.restore();
    return boost::python::object( result );
}

void register_PortalsOptionsShared_class(){

    { //::osiris::PortalsOptionsShared
        typedef ::boost::python::class_< ::osiris::PortalsOptionsShared > PortalsOptionsShared_exposer_t;
        PortalsOptionsShared_exposer_t PortalsOptionsShared_exposer = PortalsOptionsShared_exposer_t( "PortalsOptionsShared", ::boost::python::init< ::boost::shared_ptr< osiris::Portal > >(( ::boost::python::arg("portal") )) );
        ::boost::python::scope PortalsOptionsShared_scope( PortalsOptionsShared_exposer );
        ::boost::python::implicitly_convertible< ::boost::shared_ptr< osiris::Portal > const, ::osiris::PortalsOptionsShared >();
        { //::osiris::PortalsOptionsShared::getPortal
        
            typedef boost::python::object ( *getPortal_function_type )( ::osiris::PortalsOptionsShared const & );
            
            PortalsOptionsShared_exposer.def( 
                "getPortal"
                , getPortal_function_type( &getPortal_2b21295d7e9a7e286ce9d864855dcd26 ) );
        
        }
        { //::osiris::PortalsOptionsShared::getPortalName
        
            typedef boost::python::object ( *getPortalName_function_type )( ::osiris::PortalsOptionsShared const & );
            
            PortalsOptionsShared_exposer.def( 
                "getPortalName"
                , getPortalName_function_type( &getPortalName_ae20ff0c2a04890e0b6b29a48168ec21 ) );
        
        }
        { //::osiris::PortalsOptionsShared::getPortalDescription
        
            typedef boost::python::object ( *getPortalDescription_function_type )( ::osiris::PortalsOptionsShared const & );
            
            PortalsOptionsShared_exposer.def( 
                "getPortalDescription"
                , getPortalDescription_function_type( &getPortalDescription_17ca94f6ef525080c051ace6be3cd7b2 ) );
        
        }
        { //::osiris::PortalsOptionsShared::getAuthorsReputationThreshold
        
            typedef boost::python::object ( *getAuthorsReputationThreshold_function_type )( ::osiris::PortalsOptionsShared const & );
            
            PortalsOptionsShared_exposer.def( 
                "getAuthorsReputationThreshold"
                , getAuthorsReputationThreshold_function_type( &getAuthorsReputationThreshold_442d435c616a3275998568f271cdac99 ) );
        
        }
        { //::osiris::PortalsOptionsShared::getEditorsReputationThreshold
        
            typedef boost::python::object ( *getEditorsReputationThreshold_function_type )( ::osiris::PortalsOptionsShared const & );
            
            PortalsOptionsShared_exposer.def( 
                "getEditorsReputationThreshold"
                , getEditorsReputationThreshold_function_type( &getEditorsReputationThreshold_5323bb6850ef01838f1cc251decaa210 ) );
        
        }
        { //::osiris::PortalsOptionsShared::getPovWhiteList
        
            typedef boost::python::object ( *getPovWhiteList_function_type )( ::osiris::PortalsOptionsShared const & );
            
            PortalsOptionsShared_exposer.def( 
                "getPovWhiteList"
                , getPovWhiteList_function_type( &getPovWhiteList_7cab2511348c37743023bec4e51f4984 ) );
        
        }
        { //::osiris::PortalsOptionsShared::getPovBlackList
        
            typedef boost::python::object ( *getPovBlackList_function_type )( ::osiris::PortalsOptionsShared const & );
            
            PortalsOptionsShared_exposer.def( 
                "getPovBlackList"
                , getPovBlackList_function_type( &getPovBlackList_6480ce74f158c47cb6cf6ab0b43b72bd ) );
        
        }
        { //::osiris::PortalsOptionsShared::getAvatarMaxWidth
        
            typedef boost::python::object ( *getAvatarMaxWidth_function_type )( ::osiris::PortalsOptionsShared const & );
            
            PortalsOptionsShared_exposer.def( 
                "getAvatarMaxWidth"
                , getAvatarMaxWidth_function_type( &getAvatarMaxWidth_a194958ba45d7b591f7e85a4f3c63a41 ) );
        
        }
        { //::osiris::PortalsOptionsShared::getAvatarMaxHeight
        
            typedef boost::python::object ( *getAvatarMaxHeight_function_type )( ::osiris::PortalsOptionsShared const & );
            
            PortalsOptionsShared_exposer.def( 
                "getAvatarMaxHeight"
                , getAvatarMaxHeight_function_type( &getAvatarMaxHeight_5485de0c558768c8b18ccd395fcfee89 ) );
        
        }
        { //::osiris::PortalsOptionsShared::getObjectsPhysicalRemove
        
            typedef boost::python::object ( *getObjectsPhysicalRemove_function_type )( ::osiris::PortalsOptionsShared const & );
            
            PortalsOptionsShared_exposer.def( 
                "getObjectsPhysicalRemove"
                , getObjectsPhysicalRemove_function_type( &getObjectsPhysicalRemove_e64c9a0e438060813acc23aaafc12afb ) );
        
        }
        { //::osiris::PortalsOptionsShared::getObjectsPhysicalRemoveDays
        
            typedef boost::python::object ( *getObjectsPhysicalRemoveDays_function_type )( ::osiris::PortalsOptionsShared const & );
            
            PortalsOptionsShared_exposer.def( 
                "getObjectsPhysicalRemoveDays"
                , getObjectsPhysicalRemoveDays_function_type( &getObjectsPhysicalRemoveDays_7fd046a90f0e26005517a525471c081d ) );
        
        }
        { //::osiris::PortalsOptionsShared::getObjectsMaxSize
        
            typedef boost::python::object ( *getObjectsMaxSize_function_type )( ::osiris::PortalsOptionsShared const & );
            
            PortalsOptionsShared_exposer.def( 
                "getObjectsMaxSize"
                , getObjectsMaxSize_function_type( &getObjectsMaxSize_e3ec08107fb524428e4fffaac9fe346e ) );
        
        }
        { //::osiris::PortalsOptionsShared::getAllowObjectInFuture
        
            typedef boost::python::object ( *getAllowObjectInFuture_function_type )( ::osiris::PortalsOptionsShared const & );
            
            PortalsOptionsShared_exposer.def( 
                "getAllowObjectInFuture"
                , getAllowObjectInFuture_function_type( &getAllowObjectInFuture_adbb9fbcefcbee9c708150005f8234b0 ) );
        
        }
        { //::osiris::PortalsOptionsShared::getAllowObjectUnsigned
        
            typedef boost::python::object ( *getAllowObjectUnsigned_function_type )( ::osiris::PortalsOptionsShared const & );
            
            PortalsOptionsShared_exposer.def( 
                "getAllowObjectUnsigned"
                , getAllowObjectUnsigned_function_type( &getAllowObjectUnsigned_9e4c109fd6efc51a0039610abbe5269f ) );
        
        }
        { //::osiris::PortalsOptionsShared::getBadWords
        
            typedef boost::python::object ( *getBadWords_function_type )( ::osiris::PortalsOptionsShared const & );
            
            PortalsOptionsShared_exposer.def( 
                "getBadWords"
                , getBadWords_function_type( &getBadWords_488505233b547a13abbf205bab6372d1 ) );
        
        }
        { //::osiris::PortalsOptionsShared::getRegisterTerms
        
            typedef boost::python::object ( *getRegisterTerms_function_type )( ::osiris::PortalsOptionsShared const & );
            
            PortalsOptionsShared_exposer.def( 
                "getRegisterTerms"
                , getRegisterTerms_function_type( &getRegisterTerms_897efbb858060c27f68f7439e7038d7c ) );
        
        }
        { //::osiris::PortalsOptionsShared::getLayoutTileImage
        
            typedef boost::python::object ( *getLayoutTileImage_function_type )( ::osiris::PortalsOptionsShared const & );
            
            PortalsOptionsShared_exposer.def( 
                "getLayoutTileImage"
                , getLayoutTileImage_function_type( &getLayoutTileImage_c25a5b656b465753fe04eb1d0255ddba ) );
        
        }
        { //::osiris::PortalsOptionsShared::getLayoutTileColorBackground
        
            typedef boost::python::object ( *getLayoutTileColorBackground_function_type )( ::osiris::PortalsOptionsShared const & );
            
            PortalsOptionsShared_exposer.def( 
                "getLayoutTileColorBackground"
                , getLayoutTileColorBackground_function_type( &getLayoutTileColorBackground_2f46c9b48edd5b6668a95cd55ed63e5c ) );
        
        }
        { //::osiris::PortalsOptionsShared::getLayoutTileColorForeground
        
            typedef boost::python::object ( *getLayoutTileColorForeground_function_type )( ::osiris::PortalsOptionsShared const & );
            
            PortalsOptionsShared_exposer.def( 
                "getLayoutTileColorForeground"
                , getLayoutTileColorForeground_function_type( &getLayoutTileColorForeground_d1acecd24ea910fc1f426565436ae74a ) );
        
        }
        { //::osiris::PortalsOptionsShared::getLayoutCss
        
            typedef boost::python::object ( *getLayoutCss_function_type )( ::osiris::PortalsOptionsShared const & );
            
            PortalsOptionsShared_exposer.def( 
                "getLayoutCss"
                , getLayoutCss_function_type( &getLayoutCss_4135c6fa37f049f6871797eff99ff7fd ) );
        
        }
        { //::osiris::PortalsOptionsShared::getLayoutComponent
        
            typedef boost::python::object ( *getLayoutComponent_function_type )( ::osiris::PortalsOptionsShared const & );
            
            PortalsOptionsShared_exposer.def( 
                "getLayoutComponent"
                , getLayoutComponent_function_type( &getLayoutComponent_6ee4bb99a2f269ebab17351ed9fab811 ) );
        
        }
        { //::osiris::PortalsOptionsShared::getLayoutSkin
        
            typedef boost::python::object ( *getLayoutSkin_function_type )( ::osiris::PortalsOptionsShared const & );
            
            PortalsOptionsShared_exposer.def( 
                "getLayoutSkin"
                , getLayoutSkin_function_type( &getLayoutSkin_deb7f38ec1ee8127afbf6369fbfa72ef ) );
        
        }
        { //::osiris::PortalsOptionsShared::getLayoutSkinParams
        
            typedef boost::python::object ( *getLayoutSkinParams_function_type )( ::osiris::PortalsOptionsShared const & );
            
            PortalsOptionsShared_exposer.def( 
                "getLayoutSkinParams"
                , getLayoutSkinParams_function_type( &getLayoutSkinParams_9eaeb7a7df4b6e0422013be1d5c8c130 ) );
        
        }
        { //::osiris::PortalsOptionsShared::getLayoutHeader
        
            typedef boost::python::object ( *getLayoutHeader_function_type )( ::osiris::PortalsOptionsShared const & );
            
            PortalsOptionsShared_exposer.def( 
                "getLayoutHeader"
                , getLayoutHeader_function_type( &getLayoutHeader_17e9bd529e4d2790cd6966cd5a2943af ) );
        
        }
        { //::osiris::PortalsOptionsShared::getAcceptableHash
        
            typedef boost::python::object ( *getAcceptableHash_function_type )( ::osiris::PortalsOptionsShared const & );
            
            PortalsOptionsShared_exposer.def( 
                "getAcceptableHash"
                , getAcceptableHash_function_type( &getAcceptableHash_111c10c04cb0b0443290ccafdf2a5b46 ) );
        
        }
        { //::osiris::PortalsOptionsShared::clear
        
            typedef void ( *clear_function_type )( ::osiris::PortalsOptionsShared & );
            
            PortalsOptionsShared_exposer.def( 
                "clear"
                , clear_function_type( &clear_49bf295de10cd4423dc3b942f4366a5c ) );
        
        }
        { //::osiris::PortalsOptionsShared::validate
        
            typedef boost::python::object ( *validate_function_type )( ::osiris::PortalsOptionsShared const & );
            
            PortalsOptionsShared_exposer.def( 
                "validate"
                , validate_function_type( &validate_d3a92a72bbfd3357243e9723e6538d5a ) );
        
        }
        { //::osiris::PortalsOptionsShared::unload
        
            typedef void ( *unload_function_type )( ::osiris::PortalsOptionsShared & );
            
            PortalsOptionsShared_exposer.def( 
                "unload"
                , unload_function_type( &unload_1f11f3c26d3c48aa0cb1fc40f398914d ) );
        
        }
        { //::osiris::PortalsOptionsShared::reload
        
            typedef void ( *reload_function_type )( ::osiris::PortalsOptionsShared &,::boost::shared_ptr<osiris::IPortalDatabase> const & );
            
            PortalsOptionsShared_exposer.def( 
                "reload"
                , reload_function_type( &reload_0df09c9811a2473adb1bcf514a2c5827 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("database") ) );
        
        }
        { //::osiris::PortalsOptionsShared::setAllowObjectInFuture
        
            typedef void ( *setAllowObjectInFuture_function_type )( ::osiris::PortalsOptionsShared &,bool const & );
            
            PortalsOptionsShared_exposer.def( 
                "setAllowObjectInFuture"
                , setAllowObjectInFuture_function_type( &setAllowObjectInFuture_f0da139037ab68efde87def88e769c52 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("value") ) );
        
        }
        { //::osiris::PortalsOptionsShared::setAllowObjectUnsigned
        
            typedef void ( *setAllowObjectUnsigned_function_type )( ::osiris::PortalsOptionsShared &,bool const & );
            
            PortalsOptionsShared_exposer.def( 
                "setAllowObjectUnsigned"
                , setAllowObjectUnsigned_function_type( &setAllowObjectUnsigned_ace33e8a8264e92bdac92f66fb183446 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("value") ) );
        
        }
        { //::osiris::PortalsOptionsShared::setAuthorsReputationThreshold
        
            typedef void ( *setAuthorsReputationThreshold_function_type )( ::osiris::PortalsOptionsShared &,::osiris::ObjectsReputationThreshold const & );
            
            PortalsOptionsShared_exposer.def( 
                "setAuthorsReputationThreshold"
                , setAuthorsReputationThreshold_function_type( &setAuthorsReputationThreshold_8b3c689c876ba2d2268a173134d0882e )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("threshold") ) );
        
        }
        { //::osiris::PortalsOptionsShared::setAvatarMaxHeight
        
            typedef void ( *setAvatarMaxHeight_function_type )( ::osiris::PortalsOptionsShared &,::osiris::uint32 const & );
            
            PortalsOptionsShared_exposer.def( 
                "setAvatarMaxHeight"
                , setAvatarMaxHeight_function_type( &setAvatarMaxHeight_4a41033e5b0070792d3efceff36ddf73 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("value") ) );
        
        }
        { //::osiris::PortalsOptionsShared::setAvatarMaxWidth
        
            typedef void ( *setAvatarMaxWidth_function_type )( ::osiris::PortalsOptionsShared &,::osiris::uint32 const & );
            
            PortalsOptionsShared_exposer.def( 
                "setAvatarMaxWidth"
                , setAvatarMaxWidth_function_type( &setAvatarMaxWidth_664796f423451e12dfc0f40e6ae495f8 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("value") ) );
        
        }
        { //::osiris::PortalsOptionsShared::setBadWords
        
            typedef void ( *setBadWords_function_type )( ::osiris::PortalsOptionsShared &,::osiris::String const & );
            
            PortalsOptionsShared_exposer.def( 
                "setBadWords"
                , setBadWords_function_type( &setBadWords_5fd7afb17573a749aba6e115cbb7b358 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("value") ) );
        
        }
        { //::osiris::PortalsOptionsShared::setEditorsReputationThreshold
        
            typedef void ( *setEditorsReputationThreshold_function_type )( ::osiris::PortalsOptionsShared &,::osiris::ObjectsReputationThreshold const & );
            
            PortalsOptionsShared_exposer.def( 
                "setEditorsReputationThreshold"
                , setEditorsReputationThreshold_function_type( &setEditorsReputationThreshold_83f8ce1fe7d064f753df7c3ed45828a3 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("threshold") ) );
        
        }
        { //::osiris::PortalsOptionsShared::setLayoutComponent
        
            typedef void ( *setLayoutComponent_function_type )( ::osiris::PortalsOptionsShared &,::osiris::String const & );
            
            PortalsOptionsShared_exposer.def( 
                "setLayoutComponent"
                , setLayoutComponent_function_type( &setLayoutComponent_e733ad660b11c94fca6bfea13d483bed )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("value") ) );
        
        }
        { //::osiris::PortalsOptionsShared::setLayoutCss
        
            typedef void ( *setLayoutCss_function_type )( ::osiris::PortalsOptionsShared &,::osiris::String const & );
            
            PortalsOptionsShared_exposer.def( 
                "setLayoutCss"
                , setLayoutCss_function_type( &setLayoutCss_726bfa80ffd3d2b8a061540094574268 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("value") ) );
        
        }
        { //::osiris::PortalsOptionsShared::setLayoutHeader
        
            typedef void ( *setLayoutHeader_function_type )( ::osiris::PortalsOptionsShared &,bool const & );
            
            PortalsOptionsShared_exposer.def( 
                "setLayoutHeader"
                , setLayoutHeader_function_type( &setLayoutHeader_8d4335dca200c22d63b1810360f77a65 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("value") ) );
        
        }
        { //::osiris::PortalsOptionsShared::setLayoutSkin
        
            typedef void ( *setLayoutSkin_function_type )( ::osiris::PortalsOptionsShared &,::osiris::String const & );
            
            PortalsOptionsShared_exposer.def( 
                "setLayoutSkin"
                , setLayoutSkin_function_type( &setLayoutSkin_0059e4d3b6ff90bc1f7349dff786c4f4 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("value") ) );
        
        }
        { //::osiris::PortalsOptionsShared::setLayoutSkinParams
        
            typedef void ( *setLayoutSkinParams_function_type )( ::osiris::PortalsOptionsShared &,::osiris::String const & );
            
            PortalsOptionsShared_exposer.def( 
                "setLayoutSkinParams"
                , setLayoutSkinParams_function_type( &setLayoutSkinParams_c13d033715e777c4c7499c0f6213868e )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("value") ) );
        
        }
        { //::osiris::PortalsOptionsShared::setLayoutTileColorBackground
        
            typedef void ( *setLayoutTileColorBackground_function_type )( ::osiris::PortalsOptionsShared &,::osiris::String const & );
            
            PortalsOptionsShared_exposer.def( 
                "setLayoutTileColorBackground"
                , setLayoutTileColorBackground_function_type( &setLayoutTileColorBackground_1bb9381d2ecce10aa164da249381df0f )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("value") ) );
        
        }
        { //::osiris::PortalsOptionsShared::setLayoutTileColorForeground
        
            typedef void ( *setLayoutTileColorForeground_function_type )( ::osiris::PortalsOptionsShared &,::osiris::String const & );
            
            PortalsOptionsShared_exposer.def( 
                "setLayoutTileColorForeground"
                , setLayoutTileColorForeground_function_type( &setLayoutTileColorForeground_f061a6d231a801bd439139001fb6c072 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("value") ) );
        
        }
        { //::osiris::PortalsOptionsShared::setLayoutTileImage
        
            typedef void ( *setLayoutTileImage_function_type )( ::osiris::PortalsOptionsShared &,::osiris::UniqueID const & );
            
            PortalsOptionsShared_exposer.def( 
                "setLayoutTileImage"
                , setLayoutTileImage_function_type( &setLayoutTileImage_c1b9d3d90b9c6813793b0806a4be3fbf )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("value") ) );
        
        }
        { //::osiris::PortalsOptionsShared::setObjectsMaxSize
        
            typedef void ( *setObjectsMaxSize_function_type )( ::osiris::PortalsOptionsShared &,::osiris::uint32 const & );
            
            PortalsOptionsShared_exposer.def( 
                "setObjectsMaxSize"
                , setObjectsMaxSize_function_type( &setObjectsMaxSize_a085cd119297d604444bcebee08b0607 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("value") ) );
        
        }
        { //::osiris::PortalsOptionsShared::setObjectsPhysicalRemove
        
            typedef void ( *setObjectsPhysicalRemove_function_type )( ::osiris::PortalsOptionsShared &,bool const & );
            
            PortalsOptionsShared_exposer.def( 
                "setObjectsPhysicalRemove"
                , setObjectsPhysicalRemove_function_type( &setObjectsPhysicalRemove_d0003df403ed1905d9072d0ea0104583 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("value") ) );
        
        }
        { //::osiris::PortalsOptionsShared::setObjectsPhysicalRemoveDays
        
            typedef void ( *setObjectsPhysicalRemoveDays_function_type )( ::osiris::PortalsOptionsShared &,::osiris::int32 const & );
            
            PortalsOptionsShared_exposer.def( 
                "setObjectsPhysicalRemoveDays"
                , setObjectsPhysicalRemoveDays_function_type( &setObjectsPhysicalRemoveDays_67f2a93783b4b2d813b836bb0d7e0d5c )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("value") ) );
        
        }
        { //::osiris::PortalsOptionsShared::setPortalDescription
        
            typedef void ( *setPortalDescription_function_type )( ::osiris::PortalsOptionsShared &,::osiris::String const & );
            
            PortalsOptionsShared_exposer.def( 
                "setPortalDescription"
                , setPortalDescription_function_type( &setPortalDescription_903f98c56630d0fb59950efa39baf31d )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("description") ) );
        
        }
        { //::osiris::PortalsOptionsShared::setPortalName
        
            typedef void ( *setPortalName_function_type )( ::osiris::PortalsOptionsShared &,::osiris::String const & );
            
            PortalsOptionsShared_exposer.def( 
                "setPortalName"
                , setPortalName_function_type( &setPortalName_af34ccd7d7030e19fa5cb3710fc10882 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("name") ) );
        
        }
        { //::osiris::PortalsOptionsShared::setPovBlackList
        
            typedef void ( *setPovBlackList_function_type )( ::osiris::PortalsOptionsShared &,::osiris::String const & );
            
            PortalsOptionsShared_exposer.def( 
                "setPovBlackList"
                , setPovBlackList_function_type( &setPovBlackList_cd5c9791e2da5a57471ae5fc745bfb14 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("value") ) );
        
        }
        { //::osiris::PortalsOptionsShared::setPovWhiteList
        
            typedef void ( *setPovWhiteList_function_type )( ::osiris::PortalsOptionsShared &,::osiris::String const & );
            
            PortalsOptionsShared_exposer.def( 
                "setPovWhiteList"
                , setPovWhiteList_function_type( &setPovWhiteList_7ad3a02a7d65dc500d1f62c54ba0ffe2 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("value") ) );
        
        }
        { //::osiris::PortalsOptionsShared::setRegisterTerms
        
            typedef void ( *setRegisterTerms_function_type )( ::osiris::PortalsOptionsShared &,::osiris::String const & );
            
            PortalsOptionsShared_exposer.def( 
                "setRegisterTerms"
                , setRegisterTerms_function_type( &setRegisterTerms_c433f5dfd3c99ddf6cade85f56efbe8f )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("value") ) );
        
        }
        { //::osiris::PortalsOptionsShared::writeString
        
            typedef boost::python::object ( *writeString_function_type )( ::osiris::PortalsOptionsShared &,::osiris::String & );
            
            PortalsOptionsShared_exposer.def( 
                "writeString"
                , writeString_function_type( &writeString_01b390e04a3fc97c87bb9368cc6202c6 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("data") ) );
        
        }
        { //property "portalName"[fget=::osiris::PortalsOptionsShared::getPortalName, fset=::osiris::PortalsOptionsShared::setPortalName]
        
            typedef ::osiris::String ( ::osiris::PortalsOptionsShared::*fget )(  ) const;
            typedef void ( ::osiris::PortalsOptionsShared::*fset )( ::osiris::String const & ) ;
            
            PortalsOptionsShared_exposer.add_property( 
                "portalName"
                , fget( &::osiris::PortalsOptionsShared::getPortalName )
                , fset( &::osiris::PortalsOptionsShared::setPortalName )
                , "get\\set property, built on top of \"osiris::String osiris::PortalsOptionsShared::getPortalName() const [member function]\" and \"void osiris::PortalsOptionsShared::setPortalName(osiris::String const & name) [member function]\"" );
        
        }
        { //property "portalDescription"[fget=::osiris::PortalsOptionsShared::getPortalDescription, fset=::osiris::PortalsOptionsShared::setPortalDescription]
        
            typedef ::osiris::String ( ::osiris::PortalsOptionsShared::*fget )(  ) const;
            typedef void ( ::osiris::PortalsOptionsShared::*fset )( ::osiris::String const & ) ;
            
            PortalsOptionsShared_exposer.add_property( 
                "portalDescription"
                , fget( &::osiris::PortalsOptionsShared::getPortalDescription )
                , fset( &::osiris::PortalsOptionsShared::setPortalDescription )
                , "get\\set property, built on top of \"osiris::String osiris::PortalsOptionsShared::getPortalDescription() const [member function]\" and \"void osiris::PortalsOptionsShared::setPortalDescription(osiris::String const & description) [member function]\"" );
        
        }
        { //property "authorsReputationThreshold"[fget=::osiris::PortalsOptionsShared::getAuthorsReputationThreshold, fset=::osiris::PortalsOptionsShared::setAuthorsReputationThreshold]
        
            typedef ::osiris::ObjectsReputationThreshold ( ::osiris::PortalsOptionsShared::*fget )(  ) const;
            typedef void ( ::osiris::PortalsOptionsShared::*fset )( ::osiris::ObjectsReputationThreshold const & ) ;
            
            PortalsOptionsShared_exposer.add_property( 
                "authorsReputationThreshold"
                , fget( &::osiris::PortalsOptionsShared::getAuthorsReputationThreshold )
                , fset( &::osiris::PortalsOptionsShared::setAuthorsReputationThreshold )
                , "get\\set property, built on top of \"osiris::ObjectsReputationThreshold osiris::PortalsOptionsShared::getAuthorsReputationThreshold() const [member function]\" and \"void osiris::PortalsOptionsShared::setAuthorsReputationThreshold(osiris::ObjectsReputationThreshold const & threshold) [member function]\"" );
        
        }
        { //property "editorsReputationThreshold"[fget=::osiris::PortalsOptionsShared::getEditorsReputationThreshold, fset=::osiris::PortalsOptionsShared::setEditorsReputationThreshold]
        
            typedef ::osiris::ObjectsReputationThreshold ( ::osiris::PortalsOptionsShared::*fget )(  ) const;
            typedef void ( ::osiris::PortalsOptionsShared::*fset )( ::osiris::ObjectsReputationThreshold const & ) ;
            
            PortalsOptionsShared_exposer.add_property( 
                "editorsReputationThreshold"
                , fget( &::osiris::PortalsOptionsShared::getEditorsReputationThreshold )
                , fset( &::osiris::PortalsOptionsShared::setEditorsReputationThreshold )
                , "get\\set property, built on top of \"osiris::ObjectsReputationThreshold osiris::PortalsOptionsShared::getEditorsReputationThreshold() const [member function]\" and \"void osiris::PortalsOptionsShared::setEditorsReputationThreshold(osiris::ObjectsReputationThreshold const & threshold) [member function]\"" );
        
        }
        { //property "povWhiteList"[fget=::osiris::PortalsOptionsShared::getPovWhiteList, fset=::osiris::PortalsOptionsShared::setPovWhiteList]
        
            typedef ::osiris::String ( ::osiris::PortalsOptionsShared::*fget )(  ) const;
            typedef void ( ::osiris::PortalsOptionsShared::*fset )( ::osiris::String const & ) ;
            
            PortalsOptionsShared_exposer.add_property( 
                "povWhiteList"
                , fget( &::osiris::PortalsOptionsShared::getPovWhiteList )
                , fset( &::osiris::PortalsOptionsShared::setPovWhiteList )
                , "get\\set property, built on top of \"osiris::String osiris::PortalsOptionsShared::getPovWhiteList() const [member function]\" and \"void osiris::PortalsOptionsShared::setPovWhiteList(osiris::String const & value) [member function]\"" );
        
        }
        { //property "povBlackList"[fget=::osiris::PortalsOptionsShared::getPovBlackList, fset=::osiris::PortalsOptionsShared::setPovBlackList]
        
            typedef ::osiris::String ( ::osiris::PortalsOptionsShared::*fget )(  ) const;
            typedef void ( ::osiris::PortalsOptionsShared::*fset )( ::osiris::String const & ) ;
            
            PortalsOptionsShared_exposer.add_property( 
                "povBlackList"
                , fget( &::osiris::PortalsOptionsShared::getPovBlackList )
                , fset( &::osiris::PortalsOptionsShared::setPovBlackList )
                , "get\\set property, built on top of \"osiris::String osiris::PortalsOptionsShared::getPovBlackList() const [member function]\" and \"void osiris::PortalsOptionsShared::setPovBlackList(osiris::String const & value) [member function]\"" );
        
        }
        { //property "avatarMaxWidth"[fget=::osiris::PortalsOptionsShared::getAvatarMaxWidth, fset=::osiris::PortalsOptionsShared::setAvatarMaxWidth]
        
            typedef ::osiris::uint32 ( ::osiris::PortalsOptionsShared::*fget )(  ) const;
            typedef void ( ::osiris::PortalsOptionsShared::*fset )( ::osiris::uint32 const & ) ;
            
            PortalsOptionsShared_exposer.add_property( 
                "avatarMaxWidth"
                , fget( &::osiris::PortalsOptionsShared::getAvatarMaxWidth )
                , fset( &::osiris::PortalsOptionsShared::setAvatarMaxWidth )
                , "get\\set property, built on top of \"osiris::uint32 osiris::PortalsOptionsShared::getAvatarMaxWidth() const [member function]\" and \"void osiris::PortalsOptionsShared::setAvatarMaxWidth(osiris::uint32 const & value) [member function]\"" );
        
        }
        { //property "avatarMaxHeight"[fget=::osiris::PortalsOptionsShared::getAvatarMaxHeight, fset=::osiris::PortalsOptionsShared::setAvatarMaxHeight]
        
            typedef ::osiris::uint32 ( ::osiris::PortalsOptionsShared::*fget )(  ) const;
            typedef void ( ::osiris::PortalsOptionsShared::*fset )( ::osiris::uint32 const & ) ;
            
            PortalsOptionsShared_exposer.add_property( 
                "avatarMaxHeight"
                , fget( &::osiris::PortalsOptionsShared::getAvatarMaxHeight )
                , fset( &::osiris::PortalsOptionsShared::setAvatarMaxHeight )
                , "get\\set property, built on top of \"osiris::uint32 osiris::PortalsOptionsShared::getAvatarMaxHeight() const [member function]\" and \"void osiris::PortalsOptionsShared::setAvatarMaxHeight(osiris::uint32 const & value) [member function]\"" );
        
        }
        { //property "objectsPhysicalRemove"[fget=::osiris::PortalsOptionsShared::getObjectsPhysicalRemove, fset=::osiris::PortalsOptionsShared::setObjectsPhysicalRemove]
        
            typedef bool ( ::osiris::PortalsOptionsShared::*fget )(  ) const;
            typedef void ( ::osiris::PortalsOptionsShared::*fset )( bool const & ) ;
            
            PortalsOptionsShared_exposer.add_property( 
                "objectsPhysicalRemove"
                , fget( &::osiris::PortalsOptionsShared::getObjectsPhysicalRemove )
                , fset( &::osiris::PortalsOptionsShared::setObjectsPhysicalRemove )
                , "get\\set property, built on top of \"bool osiris::PortalsOptionsShared::getObjectsPhysicalRemove() const [member function]\" and \"void osiris::PortalsOptionsShared::setObjectsPhysicalRemove(bool const & value) [member function]\"" );
        
        }
        { //property "objectsPhysicalRemoveDays"[fget=::osiris::PortalsOptionsShared::getObjectsPhysicalRemoveDays, fset=::osiris::PortalsOptionsShared::setObjectsPhysicalRemoveDays]
        
            typedef ::osiris::int32 ( ::osiris::PortalsOptionsShared::*fget )(  ) const;
            typedef void ( ::osiris::PortalsOptionsShared::*fset )( ::osiris::int32 const & ) ;
            
            PortalsOptionsShared_exposer.add_property( 
                "objectsPhysicalRemoveDays"
                , fget( &::osiris::PortalsOptionsShared::getObjectsPhysicalRemoveDays )
                , fset( &::osiris::PortalsOptionsShared::setObjectsPhysicalRemoveDays )
                , "get\\set property, built on top of \"osiris::int32 osiris::PortalsOptionsShared::getObjectsPhysicalRemoveDays() const [member function]\" and \"void osiris::PortalsOptionsShared::setObjectsPhysicalRemoveDays(osiris::int32 const & value) [member function]\"" );
        
        }
        { //property "objectsMaxSize"[fget=::osiris::PortalsOptionsShared::getObjectsMaxSize, fset=::osiris::PortalsOptionsShared::setObjectsMaxSize]
        
            typedef ::osiris::uint32 ( ::osiris::PortalsOptionsShared::*fget )(  ) const;
            typedef void ( ::osiris::PortalsOptionsShared::*fset )( ::osiris::uint32 const & ) ;
            
            PortalsOptionsShared_exposer.add_property( 
                "objectsMaxSize"
                , fget( &::osiris::PortalsOptionsShared::getObjectsMaxSize )
                , fset( &::osiris::PortalsOptionsShared::setObjectsMaxSize )
                , "get\\set property, built on top of \"osiris::uint32 osiris::PortalsOptionsShared::getObjectsMaxSize() const [member function]\" and \"void osiris::PortalsOptionsShared::setObjectsMaxSize(osiris::uint32 const & value) [member function]\"" );
        
        }
        { //property "allowObjectInFuture"[fget=::osiris::PortalsOptionsShared::getAllowObjectInFuture, fset=::osiris::PortalsOptionsShared::setAllowObjectInFuture]
        
            typedef bool ( ::osiris::PortalsOptionsShared::*fget )(  ) const;
            typedef void ( ::osiris::PortalsOptionsShared::*fset )( bool const & ) ;
            
            PortalsOptionsShared_exposer.add_property( 
                "allowObjectInFuture"
                , fget( &::osiris::PortalsOptionsShared::getAllowObjectInFuture )
                , fset( &::osiris::PortalsOptionsShared::setAllowObjectInFuture )
                , "get\\set property, built on top of \"bool osiris::PortalsOptionsShared::getAllowObjectInFuture() const [member function]\" and \"void osiris::PortalsOptionsShared::setAllowObjectInFuture(bool const & value) [member function]\"" );
        
        }
        { //property "allowObjectUnsigned"[fget=::osiris::PortalsOptionsShared::getAllowObjectUnsigned, fset=::osiris::PortalsOptionsShared::setAllowObjectUnsigned]
        
            typedef bool ( ::osiris::PortalsOptionsShared::*fget )(  ) const;
            typedef void ( ::osiris::PortalsOptionsShared::*fset )( bool const & ) ;
            
            PortalsOptionsShared_exposer.add_property( 
                "allowObjectUnsigned"
                , fget( &::osiris::PortalsOptionsShared::getAllowObjectUnsigned )
                , fset( &::osiris::PortalsOptionsShared::setAllowObjectUnsigned )
                , "get\\set property, built on top of \"bool osiris::PortalsOptionsShared::getAllowObjectUnsigned() const [member function]\" and \"void osiris::PortalsOptionsShared::setAllowObjectUnsigned(bool const & value) [member function]\"" );
        
        }
        { //property "badWords"[fget=::osiris::PortalsOptionsShared::getBadWords, fset=::osiris::PortalsOptionsShared::setBadWords]
        
            typedef ::osiris::String ( ::osiris::PortalsOptionsShared::*fget )(  ) const;
            typedef void ( ::osiris::PortalsOptionsShared::*fset )( ::osiris::String const & ) ;
            
            PortalsOptionsShared_exposer.add_property( 
                "badWords"
                , fget( &::osiris::PortalsOptionsShared::getBadWords )
                , fset( &::osiris::PortalsOptionsShared::setBadWords )
                , "get\\set property, built on top of \"osiris::String osiris::PortalsOptionsShared::getBadWords() const [member function]\" and \"void osiris::PortalsOptionsShared::setBadWords(osiris::String const & value) [member function]\"" );
        
        }
        { //property "registerTerms"[fget=::osiris::PortalsOptionsShared::getRegisterTerms, fset=::osiris::PortalsOptionsShared::setRegisterTerms]
        
            typedef ::osiris::String ( ::osiris::PortalsOptionsShared::*fget )(  ) const;
            typedef void ( ::osiris::PortalsOptionsShared::*fset )( ::osiris::String const & ) ;
            
            PortalsOptionsShared_exposer.add_property( 
                "registerTerms"
                , fget( &::osiris::PortalsOptionsShared::getRegisterTerms )
                , fset( &::osiris::PortalsOptionsShared::setRegisterTerms )
                , "get\\set property, built on top of \"osiris::String osiris::PortalsOptionsShared::getRegisterTerms() const [member function]\" and \"void osiris::PortalsOptionsShared::setRegisterTerms(osiris::String const & value) [member function]\"" );
        
        }
        { //property "layoutTileImage"[fget=::osiris::PortalsOptionsShared::getLayoutTileImage, fset=::osiris::PortalsOptionsShared::setLayoutTileImage]
        
            typedef ::osiris::UniqueID ( ::osiris::PortalsOptionsShared::*fget )(  ) const;
            typedef void ( ::osiris::PortalsOptionsShared::*fset )( ::osiris::UniqueID const & ) ;
            
            PortalsOptionsShared_exposer.add_property( 
                "layoutTileImage"
                , fget( &::osiris::PortalsOptionsShared::getLayoutTileImage )
                , fset( &::osiris::PortalsOptionsShared::setLayoutTileImage )
                , "get\\set property, built on top of \"osiris::UniqueID osiris::PortalsOptionsShared::getLayoutTileImage() const [member function]\" and \"void osiris::PortalsOptionsShared::setLayoutTileImage(osiris::UniqueID const & value) [member function]\"" );
        
        }
        { //property "layoutTileColorBackground"[fget=::osiris::PortalsOptionsShared::getLayoutTileColorBackground, fset=::osiris::PortalsOptionsShared::setLayoutTileColorBackground]
        
            typedef ::osiris::String ( ::osiris::PortalsOptionsShared::*fget )(  ) const;
            typedef void ( ::osiris::PortalsOptionsShared::*fset )( ::osiris::String const & ) ;
            
            PortalsOptionsShared_exposer.add_property( 
                "layoutTileColorBackground"
                , fget( &::osiris::PortalsOptionsShared::getLayoutTileColorBackground )
                , fset( &::osiris::PortalsOptionsShared::setLayoutTileColorBackground )
                , "get\\set property, built on top of \"osiris::String osiris::PortalsOptionsShared::getLayoutTileColorBackground() const [member function]\" and \"void osiris::PortalsOptionsShared::setLayoutTileColorBackground(osiris::String const & value) [member function]\"" );
        
        }
        { //property "layoutTileColorForeground"[fget=::osiris::PortalsOptionsShared::getLayoutTileColorForeground, fset=::osiris::PortalsOptionsShared::setLayoutTileColorForeground]
        
            typedef ::osiris::String ( ::osiris::PortalsOptionsShared::*fget )(  ) const;
            typedef void ( ::osiris::PortalsOptionsShared::*fset )( ::osiris::String const & ) ;
            
            PortalsOptionsShared_exposer.add_property( 
                "layoutTileColorForeground"
                , fget( &::osiris::PortalsOptionsShared::getLayoutTileColorForeground )
                , fset( &::osiris::PortalsOptionsShared::setLayoutTileColorForeground )
                , "get\\set property, built on top of \"osiris::String osiris::PortalsOptionsShared::getLayoutTileColorForeground() const [member function]\" and \"void osiris::PortalsOptionsShared::setLayoutTileColorForeground(osiris::String const & value) [member function]\"" );
        
        }
        { //property "layoutCss"[fget=::osiris::PortalsOptionsShared::getLayoutCss, fset=::osiris::PortalsOptionsShared::setLayoutCss]
        
            typedef ::osiris::String ( ::osiris::PortalsOptionsShared::*fget )(  ) const;
            typedef void ( ::osiris::PortalsOptionsShared::*fset )( ::osiris::String const & ) ;
            
            PortalsOptionsShared_exposer.add_property( 
                "layoutCss"
                , fget( &::osiris::PortalsOptionsShared::getLayoutCss )
                , fset( &::osiris::PortalsOptionsShared::setLayoutCss )
                , "get\\set property, built on top of \"osiris::String osiris::PortalsOptionsShared::getLayoutCss() const [member function]\" and \"void osiris::PortalsOptionsShared::setLayoutCss(osiris::String const & value) [member function]\"" );
        
        }
        { //property "layoutComponent"[fget=::osiris::PortalsOptionsShared::getLayoutComponent, fset=::osiris::PortalsOptionsShared::setLayoutComponent]
        
            typedef ::osiris::String ( ::osiris::PortalsOptionsShared::*fget )(  ) const;
            typedef void ( ::osiris::PortalsOptionsShared::*fset )( ::osiris::String const & ) ;
            
            PortalsOptionsShared_exposer.add_property( 
                "layoutComponent"
                , fget( &::osiris::PortalsOptionsShared::getLayoutComponent )
                , fset( &::osiris::PortalsOptionsShared::setLayoutComponent )
                , "get\\set property, built on top of \"osiris::String osiris::PortalsOptionsShared::getLayoutComponent() const [member function]\" and \"void osiris::PortalsOptionsShared::setLayoutComponent(osiris::String const & value) [member function]\"" );
        
        }
        { //property "layoutSkin"[fget=::osiris::PortalsOptionsShared::getLayoutSkin, fset=::osiris::PortalsOptionsShared::setLayoutSkin]
        
            typedef ::osiris::String ( ::osiris::PortalsOptionsShared::*fget )(  ) const;
            typedef void ( ::osiris::PortalsOptionsShared::*fset )( ::osiris::String const & ) ;
            
            PortalsOptionsShared_exposer.add_property( 
                "layoutSkin"
                , fget( &::osiris::PortalsOptionsShared::getLayoutSkin )
                , fset( &::osiris::PortalsOptionsShared::setLayoutSkin )
                , "get\\set property, built on top of \"osiris::String osiris::PortalsOptionsShared::getLayoutSkin() const [member function]\" and \"void osiris::PortalsOptionsShared::setLayoutSkin(osiris::String const & value) [member function]\"" );
        
        }
        { //property "layoutSkinParams"[fget=::osiris::PortalsOptionsShared::getLayoutSkinParams, fset=::osiris::PortalsOptionsShared::setLayoutSkinParams]
        
            typedef ::osiris::String ( ::osiris::PortalsOptionsShared::*fget )(  ) const;
            typedef void ( ::osiris::PortalsOptionsShared::*fset )( ::osiris::String const & ) ;
            
            PortalsOptionsShared_exposer.add_property( 
                "layoutSkinParams"
                , fget( &::osiris::PortalsOptionsShared::getLayoutSkinParams )
                , fset( &::osiris::PortalsOptionsShared::setLayoutSkinParams )
                , "get\\set property, built on top of \"osiris::String osiris::PortalsOptionsShared::getLayoutSkinParams() const [member function]\" and \"void osiris::PortalsOptionsShared::setLayoutSkinParams(osiris::String const & value) [member function]\"" );
        
        }
        { //property "layoutHeader"[fget=::osiris::PortalsOptionsShared::getLayoutHeader, fset=::osiris::PortalsOptionsShared::setLayoutHeader]
        
            typedef bool ( ::osiris::PortalsOptionsShared::*fget )(  ) const;
            typedef void ( ::osiris::PortalsOptionsShared::*fset )( bool const & ) ;
            
            PortalsOptionsShared_exposer.add_property( 
                "layoutHeader"
                , fget( &::osiris::PortalsOptionsShared::getLayoutHeader )
                , fset( &::osiris::PortalsOptionsShared::setLayoutHeader )
                , "get\\set property, built on top of \"bool osiris::PortalsOptionsShared::getLayoutHeader() const [member function]\" and \"void osiris::PortalsOptionsShared::setLayoutHeader(bool const & value) [member function]\"" );
        
        }
        { //property "portal"[fget=::osiris::PortalsOptionsShared::getPortal]
        
            typedef ::boost::shared_ptr<osiris::Portal> const ( ::osiris::PortalsOptionsShared::*fget )(  ) const;
            
            PortalsOptionsShared_exposer.add_property( 
                "portal"
                , fget( &::osiris::PortalsOptionsShared::getPortal )
                , "get property, built on top of \"boost::shared_ptr<osiris::Portal> const osiris::PortalsOptionsShared::getPortal() const [member function]\"" );
        
        }
        { //property "acceptableHash"[fget=::osiris::PortalsOptionsShared::getAcceptableHash]
        
            typedef ::std::string ( ::osiris::PortalsOptionsShared::*fget )(  ) const;
            
            PortalsOptionsShared_exposer.add_property( 
                "acceptableHash"
                , fget( &::osiris::PortalsOptionsShared::getAcceptableHash )
                , "get property, built on top of \"std::string osiris::PortalsOptionsShared::getAcceptableHash() const [member function]\"" );
        
        }
        ::boost::python::register_ptr_to_python< boost::shared_ptr< ::osiris::PortalsOptionsShared > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::PortalsOptionsShared >, boost::shared_ptr< ::osiris::Object > >();
    }

}
