// This file has been generated by Py++.

#include "stdafx.h"
#include "pypluspluscommon.h"
#include "boost/python.hpp"
#include "omlsystem.h"
#include "omlsystem.pypp.hpp"

namespace bp = boost::python;

struct OMLSystem_wrapper : ::osiris::OMLSystem, ::osiris::PythonWrapper< ::osiris::OMLSystem > {

    OMLSystem_wrapper(::osiris::OMLSystem const & arg )
    : ::osiris::OMLSystem( arg )
      , ::osiris::PythonWrapper< ::osiris::OMLSystem >(){
        // copy constructor
        
    }

    OMLSystem_wrapper(::osiris::String const & tag )
    : ::osiris::OMLSystem( boost::ref(tag) )
      , ::osiris::PythonWrapper< ::osiris::OMLSystem >(){
        // constructor
    
    }

    virtual ::osiris::String processHtml( ::boost::shared_ptr< osiris::OMLItem > i, ::boost::shared_ptr< osiris::OMLContext > context ) const  {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_processHtml = this->get_override( "processHtml" ) )
            return func_processHtml( i, context );
        else{
            __pystate.leave();
            return this->::osiris::OMLSystem::processHtml( i, context );
        }
    }
    
    ::osiris::String default_processHtml( ::boost::shared_ptr< osiris::OMLItem > i, ::boost::shared_ptr< osiris::OMLContext > context ) const  {
        ::osiris::PythonThreadSaver __pythreadSaver;
        return ::osiris::OMLSystem::processHtml( i, context );
    }

    virtual bool allowRowMode(  ) const  {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_allowRowMode = this->get_override( "allowRowMode" ) )
            return func_allowRowMode(  );
        else{
            __pystate.leave();
            return this->::osiris::IOMLCode::allowRowMode(  );
        }
    }
    
    bool default_allowRowMode(  ) const  {
        ::osiris::PythonThreadSaver __pythreadSaver;
        return ::osiris::IOMLCode::allowRowMode( );
    }

    virtual ::osiris::String processOsml( ::boost::shared_ptr< osiris::OMLItem > i, ::boost::shared_ptr< osiris::OMLContext > context ) const  {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_processOsml = this->get_override( "processOsml" ) )
            return func_processOsml( i, context );
        else{
            __pystate.leave();
            return this->::osiris::IOMLCode::processOsml( i, context );
        }
    }
    
    ::osiris::String default_processOsml( ::boost::shared_ptr< osiris::OMLItem > i, ::boost::shared_ptr< osiris::OMLContext > context ) const  {
        ::osiris::PythonThreadSaver __pythreadSaver;
        return ::osiris::IOMLCode::processOsml( i, context );
    }

};

void register_OMLSystem_class(){

    { //::osiris::OMLSystem
        typedef ::boost::python::class_< OMLSystem_wrapper, ::boost::python::bases< ::osiris::IOMLCode > > OMLSystem_exposer_t;
        OMLSystem_exposer_t OMLSystem_exposer = OMLSystem_exposer_t( "OMLSystem", ::boost::python::init< ::osiris::String const & >(( ::boost::python::arg("tag") )) );
        ::boost::python::scope OMLSystem_scope( OMLSystem_exposer );
        ::boost::python::implicitly_convertible< ::osiris::String const &, ::osiris::OMLSystem >();
        { //::osiris::OMLSystem::processHtml
        
            typedef ::osiris::String ( ::osiris::OMLSystem::*processHtml_function_type )( ::boost::shared_ptr< osiris::OMLItem >,::boost::shared_ptr< osiris::OMLContext > ) const;
            typedef ::osiris::String ( OMLSystem_wrapper::*default_processHtml_function_type )( ::boost::shared_ptr< osiris::OMLItem >,::boost::shared_ptr< osiris::OMLContext > ) const;
            
            OMLSystem_exposer.def( 
                "processHtml"
                , processHtml_function_type(&::osiris::OMLSystem::processHtml)
                , default_processHtml_function_type(&OMLSystem_wrapper::default_processHtml)
                , ( ::boost::python::arg("i"), ::boost::python::arg("context") ) );
        
        }
        { //::osiris::IOMLCode::allowRowMode
        
            typedef bool ( ::osiris::IOMLCode::*allowRowMode_function_type )(  ) const;
            typedef bool ( OMLSystem_wrapper::*default_allowRowMode_function_type )(  ) const;
            
            OMLSystem_exposer.def( 
                "allowRowMode"
                , allowRowMode_function_type(&::osiris::IOMLCode::allowRowMode)
                , default_allowRowMode_function_type(&OMLSystem_wrapper::default_allowRowMode) );
        
        }
        { //::osiris::IOMLCode::processOsml
        
            typedef ::osiris::String ( ::osiris::IOMLCode::*processOsml_function_type )( ::boost::shared_ptr< osiris::OMLItem >,::boost::shared_ptr< osiris::OMLContext > ) const;
            typedef ::osiris::String ( OMLSystem_wrapper::*default_processOsml_function_type )( ::boost::shared_ptr< osiris::OMLItem >,::boost::shared_ptr< osiris::OMLContext > ) const;
            
            OMLSystem_exposer.def( 
                "processOsml"
                , processOsml_function_type(&::osiris::IOMLCode::processOsml)
                , default_processOsml_function_type(&OMLSystem_wrapper::default_processOsml)
                , ( ::boost::python::arg("i"), ::boost::python::arg("context") ) );
        
        }
    }

}
