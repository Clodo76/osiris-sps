// This file has been generated by Py++.

#include "stdafx.h"
#include "pypluspluscommon.h"
#include "boost/python.hpp"
#include "ihttpdirectoryhandler.h"
#include "httppath.h"
#include "ihttpdirectoryregexhandler.h"
#include "ihttpdirectoryhandler.pypp.hpp"

namespace bp = boost::python;

struct IHttpDirectoryHandler_wrapper : ::osiris::IHttpDirectoryHandler, ::osiris::PythonWrapper< ::osiris::IHttpDirectoryHandler > {

    IHttpDirectoryHandler_wrapper( )
    : ::osiris::IHttpDirectoryHandler( )
      , ::osiris::PythonWrapper< ::osiris::IHttpDirectoryHandler >(){
        // nullptr constructor
    
    }

    virtual bool handleRequest( ::boost::shared_ptr< osiris::HttpSession > session, ::osiris::HttpPath const & path ) {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_handleRequest = this->get_override( "handleRequest" ) )
            return func_handleRequest( session, boost::ref(path) );
        else{
            __pystate.leave();
            return this->::osiris::IHttpDirectoryHandler::handleRequest( session, boost::ref(path) );
        }
    }
    
    bool default_handleRequest( ::boost::shared_ptr< osiris::HttpSession > session, ::osiris::HttpPath const & path ) {
        ::osiris::PythonThreadSaver __pythreadSaver;
        return ::osiris::IHttpDirectoryHandler::handleRequest( session, boost::ref(path) );
    }

    virtual bool processRequest( ::boost::shared_ptr< osiris::HttpSession > session, ::osiris::HttpPath const & path ){
        ::osiris::PythonState __pystate(getPythonThreadState());
        ::osiris::PythonOverride func_processRequest = this->get_override( "processRequest" );
        return func_processRequest( session, boost::ref(path) );
    }

};

void register_IHttpDirectoryHandler_class(){

    { //::osiris::IHttpDirectoryHandler
        typedef ::boost::python::class_< IHttpDirectoryHandler_wrapper, ::boost::noncopyable > IHttpDirectoryHandler_exposer_t;
        IHttpDirectoryHandler_exposer_t IHttpDirectoryHandler_exposer = IHttpDirectoryHandler_exposer_t( "IHttpDirectoryHandler", ::boost::python::init< >() );
        ::boost::python::scope IHttpDirectoryHandler_scope( IHttpDirectoryHandler_exposer );
        { //::osiris::IHttpDirectoryHandler::handleRequest
        
            typedef bool ( ::osiris::IHttpDirectoryHandler::*handleRequest_function_type )( ::boost::shared_ptr< osiris::HttpSession >,::osiris::HttpPath const & ) ;
            typedef bool ( IHttpDirectoryHandler_wrapper::*default_handleRequest_function_type )( ::boost::shared_ptr< osiris::HttpSession >,::osiris::HttpPath const & ) ;
            
            IHttpDirectoryHandler_exposer.def( 
                "handleRequest"
                , handleRequest_function_type(&::osiris::IHttpDirectoryHandler::handleRequest)
                , default_handleRequest_function_type(&IHttpDirectoryHandler_wrapper::default_handleRequest)
                , ( ::boost::python::arg("session"), ::boost::python::arg("path") ) );
        
        }
        { //::osiris::IHttpDirectoryHandler::processRequest
        
            typedef bool ( IHttpDirectoryHandler_wrapper::*processRequest_function_type )( ::boost::shared_ptr< osiris::HttpSession >,::osiris::HttpPath const & ) ;
            
            IHttpDirectoryHandler_exposer.def( 
                "processRequest"
                , processRequest_function_type( &IHttpDirectoryHandler_wrapper::processRequest )
                , ( ::boost::python::arg("session"), ::boost::python::arg("path") ) );
        
        }
        ::boost::python::register_ptr_to_python< boost::shared_ptr< ::osiris::IHttpDirectoryHandler > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IHttpDirectoryHandler >, boost::shared_ptr< ::osiris::Object > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IHttpDirectoryRegexHandler >, boost::shared_ptr< ::osiris::IHttpDirectoryHandler > >();
    }

}
