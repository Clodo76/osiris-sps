// This file has been generated by Py++.

#include "stdafx.h"
#include "pypluspluscommon.h"
#include "boost/python.hpp"
#include "__call_policies.pypp.hpp"
#include "iportaldatabase.h"
#include "dataaccount.h"
#include "datadiscussionstats.h"
#include "dataentry.h"
#include "datapeer.h"
#include "datapolloptionstats.h"
#include "datapollstats.h"
#include "datauserstats.h"
#include "dbbinder.h"
#include "idbconnection.h"
#include "objectsiobject.h"
#include "iportaldatabase.pypp.hpp"

namespace bp = boost::python;

struct IPortalDatabase_wrapper : ::osiris::IPortalDatabase, ::osiris::PythonWrapper< ::osiris::IPortalDatabase > {

    IPortalDatabase_wrapper(::boost::shared_ptr< osiris::IDbConnection > connection )
    : ::osiris::IPortalDatabase( connection )
      , ::osiris::PythonWrapper< ::osiris::IPortalDatabase >(){
        // constructor
    
    }

    static boost::python::object getBinder( ::osiris::IPortalDatabase const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::shared_ptr<osiris::DbBinder> result = inst.getBinder();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getConnection( ::osiris::IPortalDatabase const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::shared_ptr<osiris::IDbConnection> result = inst.getConnection();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object connected( ::osiris::IPortalDatabase const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.connected();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object inTransaction( ::osiris::IPortalDatabase const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.inTransaction();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getPortal( ::osiris::IPortalDatabase const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::shared_ptr<osiris::Portal> result = inst.getPortal();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getQuery( ::osiris::IPortalDatabase const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::uint32 const & result = inst.getQuery();
        __pythreadSaver.restore();
        typedef bp::return_value_policy< bp::copy_const_reference > call_policies_t;
        return boost::python::object( pyplusplus::call_policies::make_object< call_policies_t, ::osiris::uint32 const & >( result ) );
    }

    static boost::python::object getTransaction( ::osiris::IPortalDatabase const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::uint32 const & result = inst.getTransaction();
        __pythreadSaver.restore();
        typedef bp::return_value_policy< bp::copy_const_reference > call_policies_t;
        return boost::python::object( pyplusplus::call_policies::make_object< call_policies_t, ::osiris::uint32 const & >( result ) );
    }

    static boost::python::object xxx_getAccounts( ::osiris::IPortalDatabase const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::uint32 result = inst.xxx_getAccounts();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getEntries( ::osiris::IPortalDatabase const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::uint32 result = inst.getEntries();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getPeers( ::osiris::IPortalDatabase const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::uint32 result = inst.getPeers();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getUsers( ::osiris::IPortalDatabase const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::uint32 result = inst.getUsers();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object recordExists_56fc1a44c7080e3019765ebda19aa013( ::osiris::IPortalDatabase const & inst, ::osiris::String const & table, ::osiris::String const & field, ::osiris::String const & value ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.recordExists(table, field, value);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object recordExists_e0f24196901f388625e97cce2d5e133f( ::osiris::IPortalDatabase const & inst, ::osiris::String const & table, ::osiris::StringMap const & conditions ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.recordExists(table, conditions);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getStableObjectsCount( ::osiris::IPortalDatabase & inst, ::osiris::UniqueID const & reference, ::osiris::PortalObjectType type ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::uint32 result = inst.getStableObjectsCount(reference, type);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static void close( ::osiris::IPortalDatabase & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        inst.close();
        __pythreadSaver.restore();
    }

    static boost::python::object execute_aa4b1ddba18d992e50a5e7ca2e86c2dd( ::osiris::IPortalDatabase const & inst, ::osiris::String const & sql, ::osiris::DataTable & table ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.execute(sql, table);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object execute_0829f33c424de4c1a753aa813e36d520( ::osiris::IPortalDatabase const & inst, ::boost::shared_ptr< osiris::DbSqlICommand > command, ::osiris::DataTable & table ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.execute(command, table);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static void addToList( ::osiris::IPortalDatabase & inst, ::osiris::String const & sql, ::osiris::StringList & list, bool append=false ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        inst.addToList(sql, list, append);
        __pythreadSaver.restore();
    }

    static boost::python::object beginTransaction( ::osiris::IPortalDatabase & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.beginTransaction();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object commit( ::osiris::IPortalDatabase & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.commit();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object rollback( ::osiris::IPortalDatabase & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.rollback();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getMinEntryRank( ::osiris::IPortalDatabase & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::uint32 result = inst.getMinEntryRank();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getMaxEntryRank( ::osiris::IPortalDatabase & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::uint32 result = inst.getMaxEntryRank();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getNewEntryRank( ::osiris::IPortalDatabase & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::uint32 result = inst.getNewEntryRank();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static void computeVotesStats( ::osiris::IPortalDatabase & inst, ::boost::shared_ptr< osiris::ObjectsIRevisionable > object, ::osiris::DbValue< unsigned int > & outCount, ::osiris::DbValue< double > & outAverage ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        inst.computeVotesStats(object, outCount, outAverage);
        __pythreadSaver.restore();
    }

    static void computeLastObjectStats( ::osiris::IPortalDatabase & inst, ::boost::shared_ptr< osiris::ObjectsIRevisionable > object, ::osiris::DbValue< osiris::UniqueID > & outID, ::osiris::DbValue< osiris::DateTime > & outDate ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        inst.computeLastObjectStats(object, outID, outDate);
        __pythreadSaver.restore();
    }

    static boost::python::object setUserAvatar( ::osiris::IPortalDatabase & inst, ::boost::shared_ptr< osiris::ObjectsUser > user, ::osiris::Buffer const & privateKey, ::osiris::String const & fileName, ::osiris::String const & fileType, ::osiris::Buffer const & fileData ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::LanguageResult result = inst.setUserAvatar(user, privateKey, fileName, fileType, fileData);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getObjectVote( ::osiris::IPortalDatabase & inst, ::boost::shared_ptr< osiris::ObjectsUser > user, ::boost::shared_ptr< osiris::ObjectsIRevisionable > object ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::shared_ptr<osiris::ObjectsVote> result = inst.getObjectVote(user, object);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getPollVote_6e8c8bdb3427e447650c00c19c70557e( ::osiris::IPortalDatabase & inst, ::boost::shared_ptr< osiris::ObjectsUser > user, ::boost::shared_ptr< osiris::ObjectsPoll > poll ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::shared_ptr<osiris::ObjectsPollVote> result = inst.getPollVote(user, poll);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object voteObject( ::osiris::IPortalDatabase & inst, ::boost::shared_ptr< osiris::ObjectsUser > user, ::osiris::Buffer const & private_key, ::osiris::UniqueID const & reference, ::osiris::uint32 score ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::LanguageResult result = inst.voteObject(user, private_key, reference, score);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object unvoteObject( ::osiris::IPortalDatabase & inst, ::boost::shared_ptr< osiris::ObjectsUser > user, ::osiris::Buffer const & private_key, ::osiris::UniqueID const & reference ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::LanguageResult result = inst.unvoteObject(user, private_key, reference);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object votePoll( ::osiris::IPortalDatabase & inst, ::boost::shared_ptr< osiris::ObjectsUser > user, ::osiris::Buffer const & private_key, ::boost::shared_ptr< osiris::ObjectsPoll > poll, ::osiris::UniqueID poll_option ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::LanguageResult result = inst.votePoll(user, private_key, poll, poll_option);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object unvotePoll( ::osiris::IPortalDatabase & inst, ::boost::shared_ptr< osiris::ObjectsUser > user, ::osiris::Buffer const & private_key, ::boost::shared_ptr< osiris::ObjectsPoll > poll ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::LanguageResult result = inst.unvotePoll(user, private_key, poll);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object removeProfileStatistics( ::osiris::IPortalDatabase & inst, ::osiris::String const & table, ::osiris::String reference ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.removeProfileStatistics(table, reference);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object _signAndInsert( ::osiris::IPortalDatabase & inst, ::boost::shared_ptr< osiris::ObjectsIObject > object, ::osiris::Buffer const & private_key ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::LanguageResult result = inst._signAndInsert(object, private_key);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object _signAndUpdate( ::osiris::IPortalDatabase & inst, ::boost::shared_ptr< osiris::ObjectsIObject > object, ::osiris::Buffer const & private_key, bool updateSubmitDate ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::LanguageResult result = inst._signAndUpdate(object, private_key, updateSubmitDate);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getUserRelatedObjectID( ::osiris::UniqueID const & user_id, ::std::string const & relation, ::std::string const & reference, ::osiris::PortalObjectType type ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::UniqueID result = ::osiris::IPortalDatabase::getUserRelatedObjectID(user_id, relation, reference, type);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getUserReputationID( ::osiris::UniqueID const & user_id, ::osiris::UniqueID const & reference ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::UniqueID result = ::osiris::IPortalDatabase::getUserReputationID(user_id, reference);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getUserPollVoteID( ::osiris::UniqueID const & user_id, ::osiris::UniqueID const & object_id ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::UniqueID result = ::osiris::IPortalDatabase::getUserPollVoteID(user_id, object_id);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getUserVoteID( ::osiris::UniqueID const & user_id, ::osiris::UniqueID const & object_id ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::UniqueID result = ::osiris::IPortalDatabase::getUserVoteID(user_id, object_id);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object decreaseEntryRank( ::osiris::IPortalDatabase & inst, ::osiris::UniqueID const & id ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.decreaseEntryRank(id);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object execute_0d1f6f276565152d52270b7b65b0ae4c( ::osiris::IPortalDatabase const & inst, ::osiris::String const & sql ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.execute(sql);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object execute_3abaa00ab6b12a55b6538b1a8801a006( ::osiris::IPortalDatabase const & inst, ::boost::shared_ptr< osiris::DbSqlICommand > command ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.execute(command);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getAvatar( ::osiris::IPortalDatabase & inst, ::osiris::UniqueID const & id ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::shared_ptr<osiris::ObjectsAvatar> result = inst.getAvatar(id);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getDescriptor( ::osiris::IPortalDatabase const & inst, ::osiris::PortalObjectType type ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::shared_ptr<osiris::ObjectsIDescriptor> result = inst.getDescriptor(type);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getEntry( ::osiris::IPortalDatabase const & inst, ::osiris::UniqueID const & id ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::shared_ptr<osiris::DataEntry> result = inst.getEntry(id);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getFile( ::osiris::IPortalDatabase & inst, ::osiris::UniqueID const & id ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::shared_ptr<osiris::ObjectsFile> result = inst.getFile(id);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getInstanceCache( ::osiris::IPortalDatabase & inst, ::osiris::UniqueID const & reference ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::shared_ptr<osiris::DataInstanceCache> result = inst.getInstanceCache(reference);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getPeer( ::osiris::IPortalDatabase const & inst, ::osiris::String const & ip ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::shared_ptr<osiris::DataPeer> result = inst.getPeer(ip);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getPollVote_6f77d5983220c81c251bcfc792d7a8ed( ::osiris::IPortalDatabase & inst, ::osiris::UniqueID const & id ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::shared_ptr<osiris::ObjectsPollVote> result = inst.getPollVote(id);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getPrivateMessage( ::osiris::IPortalDatabase & inst, ::osiris::UniqueID const & id ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::shared_ptr<osiris::ObjectsPrivateMessage> result = inst.getPrivateMessage(id);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getReputation( ::osiris::IPortalDatabase & inst, ::osiris::UniqueID const & id ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::shared_ptr<osiris::ObjectsReputation> result = inst.getReputation(id);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getTag( ::osiris::IPortalDatabase & inst, ::osiris::UniqueID const & id ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::shared_ptr<osiris::ObjectsTag> result = inst.getTag(id);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getUser( ::osiris::IPortalDatabase & inst, ::osiris::UniqueID const & id ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::shared_ptr<osiris::ObjectsUser> result = inst.getUser(id);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getUserAvatarID( ::osiris::UniqueID const & user_id ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::UniqueID result = ::osiris::IPortalDatabase::getUserAvatarID(user_id);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getVote( ::osiris::IPortalDatabase & inst, ::osiris::UniqueID const & id ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::shared_ptr<osiris::ObjectsVote> result = inst.getVote(id);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object increaseEntryRank( ::osiris::IPortalDatabase & inst, ::osiris::UniqueID const & id ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.increaseEntryRank(id);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object insertRecord( ::osiris::IPortalDatabase & inst, ::boost::shared_ptr< osiris::DataIRecord > record ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.insertRecord(record);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object isRevisionable( ::osiris::PortalObjectType type ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = ::osiris::IPortalDatabase::isRevisionable(type);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object isUpdatable( ::osiris::PortalObjectType type ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = ::osiris::IPortalDatabase::isUpdatable(type);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object isVotable( ::osiris::PortalObjectType type ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = ::osiris::IPortalDatabase::isVotable(type);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    ::boost::shared_ptr< osiris::DataDiscussionStats > loadDiscussionStats( ::osiris::String const & reference ) const {
        return ::osiris::IPortalDatabase::loadDiscussionStats( boost::ref(reference) );
    }

    ::boost::shared_ptr< osiris::DataEntry > loadEntry( ::osiris::String const & id ) const {
        return ::osiris::IPortalDatabase::loadEntry( boost::ref(id) );
    }

    virtual ::boost::shared_ptr< osiris::ObjectsIObject > loadObject( ::osiris::UniqueID const & id ) {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_loadObject = this->get_override( "loadObject" ) )
            return func_loadObject( boost::ref(id) );
        else{
            __pystate.leave();
            return this->::osiris::IPortalDatabase::loadObject( boost::ref(id) );
        }
    }
    
    ::boost::shared_ptr< osiris::ObjectsIObject > default_loadObject( ::osiris::UniqueID const & id ) {
        ::osiris::PythonThreadSaver __pythreadSaver;
        return ::osiris::IPortalDatabase::loadObject( boost::ref(id) );
    }

    ::boost::shared_ptr< osiris::DataPeer > loadPeer( ::osiris::String const & ip ) const {
        return ::osiris::IPortalDatabase::loadPeer( boost::ref(ip) );
    }

    ::boost::shared_ptr< osiris::DataPollOptionStats > loadPollOptionStats( ::osiris::String const & reference ) const {
        return ::osiris::IPortalDatabase::loadPollOptionStats( boost::ref(reference) );
    }

    ::boost::shared_ptr< osiris::DataPollStats > loadPollStats( ::osiris::String const & reference ) const {
        return ::osiris::IPortalDatabase::loadPollStats( boost::ref(reference) );
    }

    ::boost::shared_ptr< osiris::DataUserStats > loadUserStats( ::osiris::String const & reference ) const {
        return ::osiris::IPortalDatabase::loadUserStats( boost::ref(reference) );
    }

    static boost::python::object needObject( ::osiris::IPortalDatabase const & inst, ::osiris::String const & id, ::osiris::DateTime const & submit_date=(osiris::DateTime::EMPTY) ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.needObject(id, submit_date);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    virtual void onInsertRecord( ::boost::shared_ptr< osiris::DataIRecord > record ){
        ::osiris::PythonState __pystate(getPythonThreadState());
        ::osiris::PythonOverride func_onInsertRecord = this->get_override( "onInsertRecord" );
        func_onInsertRecord( record );
    }

    virtual void onRemovingRecord( ::boost::shared_ptr< osiris::DataIRecord > record ){
        ::osiris::PythonState __pystate(getPythonThreadState());
        ::osiris::PythonOverride func_onRemovingRecord = this->get_override( "onRemovingRecord" );
        func_onRemovingRecord( record );
    }

    virtual void onUpdateRecord( ::boost::shared_ptr< osiris::DataIRecord > record ){
        ::osiris::PythonState __pystate(getPythonThreadState());
        ::osiris::PythonOverride func_onUpdateRecord = this->get_override( "onUpdateRecord" );
        func_onUpdateRecord( record );
    }

    static boost::python::object open( ::osiris::IPortalDatabase & inst, ::boost::shared_ptr< osiris::Portal > portal ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.open(portal);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object peerExists( ::osiris::IPortalDatabase const & inst, ::osiris::String const & ip ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.peerExists(ip);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object removeObject( ::osiris::IPortalDatabase & inst, ::boost::shared_ptr< osiris::ObjectsIObject > object ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.removeObject(object);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object removeRecord( ::osiris::IPortalDatabase & inst, ::boost::shared_ptr< osiris::DataIRecord > record ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.removeRecord(record);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object storeObject2( ::osiris::IPortalDatabase & inst, ::boost::shared_ptr< osiris::ObjectsIObject > const & object ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.storeObject2(object);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object updateRecord( ::osiris::IPortalDatabase & inst, ::boost::shared_ptr< osiris::DataIRecord > record ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.updateRecord(record);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object validateRecord( ::osiris::IPortalDatabase & inst, ::boost::shared_ptr< osiris::DataIRecord > record ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.validateRecord(record);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object xxx_accountExists( ::osiris::IPortalDatabase const & inst, ::osiris::String const & id ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.xxx_accountExists(id);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object xxx_getAccount( ::osiris::IPortalDatabase & inst, ::osiris::String const & id ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::shared_ptr<osiris::DataAccount> result = inst.xxx_getAccount(id);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    ::boost::shared_ptr< osiris::DataAccount > xxx_loadAccount( ::osiris::String const & id ) const {
        return ::osiris::IPortalDatabase::xxx_loadAccount( boost::ref(id) );
    }

};

void register_IPortalDatabase_class(){

    { //::osiris::IPortalDatabase
        typedef ::boost::python::class_< IPortalDatabase_wrapper, ::boost::noncopyable > IPortalDatabase_exposer_t;
        IPortalDatabase_exposer_t IPortalDatabase_exposer = IPortalDatabase_exposer_t( "IPortalDatabase", ::boost::python::init< ::boost::shared_ptr< osiris::IDbConnection > >(( ::boost::python::arg("connection") )) );
        ::boost::python::scope IPortalDatabase_scope( IPortalDatabase_exposer );
        { //::osiris::IPortalDatabase::getBinder
        
            typedef boost::python::object ( *getBinder_function_type )( ::osiris::IPortalDatabase const & );
            
            IPortalDatabase_exposer.def( 
                "getBinder"
                , getBinder_function_type( &IPortalDatabase_wrapper::getBinder ) );
        
        }
        { //::osiris::IPortalDatabase::getConnection
        
            typedef boost::python::object ( *getConnection_function_type )( ::osiris::IPortalDatabase const & );
            
            IPortalDatabase_exposer.def( 
                "getConnection"
                , getConnection_function_type( &IPortalDatabase_wrapper::getConnection ) );
        
        }
        { //::osiris::IPortalDatabase::connected
        
            typedef boost::python::object ( *connected_function_type )( ::osiris::IPortalDatabase const & );
            
            IPortalDatabase_exposer.def( 
                "connected"
                , connected_function_type( &IPortalDatabase_wrapper::connected ) );
        
        }
        { //::osiris::IPortalDatabase::inTransaction
        
            typedef boost::python::object ( *inTransaction_function_type )( ::osiris::IPortalDatabase const & );
            
            IPortalDatabase_exposer.def( 
                "inTransaction"
                , inTransaction_function_type( &IPortalDatabase_wrapper::inTransaction ) );
        
        }
        { //::osiris::IPortalDatabase::getPortal
        
            typedef boost::python::object ( *getPortal_function_type )( ::osiris::IPortalDatabase const & );
            
            IPortalDatabase_exposer.def( 
                "getPortal"
                , getPortal_function_type( &IPortalDatabase_wrapper::getPortal ) );
        
        }
        { //::osiris::IPortalDatabase::getQuery
        
            typedef boost::python::object ( *getQuery_function_type )( ::osiris::IPortalDatabase const & );
            
            IPortalDatabase_exposer.def( 
                "getQuery"
                , getQuery_function_type( &IPortalDatabase_wrapper::getQuery ) );
        
        }
        { //::osiris::IPortalDatabase::getTransaction
        
            typedef boost::python::object ( *getTransaction_function_type )( ::osiris::IPortalDatabase const & );
            
            IPortalDatabase_exposer.def( 
                "getTransaction"
                , getTransaction_function_type( &IPortalDatabase_wrapper::getTransaction ) );
        
        }
        { //::osiris::IPortalDatabase::xxx_getAccounts
        
            typedef boost::python::object ( *xxx_getAccounts_function_type )( ::osiris::IPortalDatabase const & );
            
            IPortalDatabase_exposer.def( 
                "xxx_getAccounts"
                , xxx_getAccounts_function_type( &IPortalDatabase_wrapper::xxx_getAccounts ) );
        
        }
        { //::osiris::IPortalDatabase::getEntries
        
            typedef boost::python::object ( *getEntries_function_type )( ::osiris::IPortalDatabase const & );
            
            IPortalDatabase_exposer.def( 
                "getEntries"
                , getEntries_function_type( &IPortalDatabase_wrapper::getEntries ) );
        
        }
        { //::osiris::IPortalDatabase::getPeers
        
            typedef boost::python::object ( *getPeers_function_type )( ::osiris::IPortalDatabase const & );
            
            IPortalDatabase_exposer.def( 
                "getPeers"
                , getPeers_function_type( &IPortalDatabase_wrapper::getPeers ) );
        
        }
        { //::osiris::IPortalDatabase::getUsers
        
            typedef boost::python::object ( *getUsers_function_type )( ::osiris::IPortalDatabase const & );
            
            IPortalDatabase_exposer.def( 
                "getUsers"
                , getUsers_function_type( &IPortalDatabase_wrapper::getUsers ) );
        
        }
        { //::osiris::IPortalDatabase::recordExists
        
            typedef boost::python::object ( *recordExists_function_type )( ::osiris::IPortalDatabase const &,::osiris::String const &,::osiris::String const &,::osiris::String const & );
            
            IPortalDatabase_exposer.def( 
                "recordExists"
                , recordExists_function_type( &IPortalDatabase_wrapper::recordExists_56fc1a44c7080e3019765ebda19aa013 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("table"), ::boost::python::arg("field"), ::boost::python::arg("value") ) );
        
        }
        { //::osiris::IPortalDatabase::recordExists
        
            typedef boost::python::object ( *recordExists_function_type )( ::osiris::IPortalDatabase const &,::osiris::String const &,::osiris::StringMap const & );
            
            IPortalDatabase_exposer.def( 
                "recordExists"
                , recordExists_function_type( &IPortalDatabase_wrapper::recordExists_e0f24196901f388625e97cce2d5e133f )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("table"), ::boost::python::arg("conditions") ) );
        
        }
        { //::osiris::IPortalDatabase::getStableObjectsCount
        
            typedef boost::python::object ( *getStableObjectsCount_function_type )( ::osiris::IPortalDatabase &,::osiris::UniqueID const &,::osiris::PortalObjectType );
            
            IPortalDatabase_exposer.def( 
                "getStableObjectsCount"
                , getStableObjectsCount_function_type( &IPortalDatabase_wrapper::getStableObjectsCount )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("reference"), ::boost::python::arg("type") ) );
        
        }
        { //::osiris::IPortalDatabase::close
        
            typedef void ( *close_function_type )( ::osiris::IPortalDatabase & );
            
            IPortalDatabase_exposer.def( 
                "close"
                , close_function_type( &IPortalDatabase_wrapper::close ) );
        
        }
        { //::osiris::IPortalDatabase::execute
        
            typedef boost::python::object ( *execute_function_type )( ::osiris::IPortalDatabase const &,::osiris::String const &,::osiris::DataTable & );
            
            IPortalDatabase_exposer.def( 
                "execute"
                , execute_function_type( &IPortalDatabase_wrapper::execute_aa4b1ddba18d992e50a5e7ca2e86c2dd )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("sql"), ::boost::python::arg("table") ) );
        
        }
        { //::osiris::IPortalDatabase::execute
        
            typedef boost::python::object ( *execute_function_type )( ::osiris::IPortalDatabase const &,::boost::shared_ptr<osiris::DbSqlICommand>,::osiris::DataTable & );
            
            IPortalDatabase_exposer.def( 
                "execute"
                , execute_function_type( &IPortalDatabase_wrapper::execute_0829f33c424de4c1a753aa813e36d520 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("command"), ::boost::python::arg("table") ) );
        
        }
        { //::osiris::IPortalDatabase::addToList
        
            typedef void ( *addToList_function_type )( ::osiris::IPortalDatabase &,::osiris::String const &,::osiris::StringList &,bool );
            
            IPortalDatabase_exposer.def( 
                "addToList"
                , addToList_function_type( &IPortalDatabase_wrapper::addToList )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("sql"), ::boost::python::arg("list"), ::boost::python::arg("append")=(bool)(false) ) );
        
        }
        { //::osiris::IPortalDatabase::beginTransaction
        
            typedef boost::python::object ( *beginTransaction_function_type )( ::osiris::IPortalDatabase & );
            
            IPortalDatabase_exposer.def( 
                "beginTransaction"
                , beginTransaction_function_type( &IPortalDatabase_wrapper::beginTransaction ) );
        
        }
        { //::osiris::IPortalDatabase::commit
        
            typedef boost::python::object ( *commit_function_type )( ::osiris::IPortalDatabase & );
            
            IPortalDatabase_exposer.def( 
                "commit"
                , commit_function_type( &IPortalDatabase_wrapper::commit ) );
        
        }
        { //::osiris::IPortalDatabase::rollback
        
            typedef boost::python::object ( *rollback_function_type )( ::osiris::IPortalDatabase & );
            
            IPortalDatabase_exposer.def( 
                "rollback"
                , rollback_function_type( &IPortalDatabase_wrapper::rollback ) );
        
        }
        { //::osiris::IPortalDatabase::getMinEntryRank
        
            typedef boost::python::object ( *getMinEntryRank_function_type )( ::osiris::IPortalDatabase & );
            
            IPortalDatabase_exposer.def( 
                "getMinEntryRank"
                , getMinEntryRank_function_type( &IPortalDatabase_wrapper::getMinEntryRank ) );
        
        }
        { //::osiris::IPortalDatabase::getMaxEntryRank
        
            typedef boost::python::object ( *getMaxEntryRank_function_type )( ::osiris::IPortalDatabase & );
            
            IPortalDatabase_exposer.def( 
                "getMaxEntryRank"
                , getMaxEntryRank_function_type( &IPortalDatabase_wrapper::getMaxEntryRank ) );
        
        }
        { //::osiris::IPortalDatabase::getNewEntryRank
        
            typedef boost::python::object ( *getNewEntryRank_function_type )( ::osiris::IPortalDatabase & );
            
            IPortalDatabase_exposer.def( 
                "getNewEntryRank"
                , getNewEntryRank_function_type( &IPortalDatabase_wrapper::getNewEntryRank ) );
        
        }
        { //::osiris::IPortalDatabase::computeVotesStats
        
            typedef void ( *computeVotesStats_function_type )( ::osiris::IPortalDatabase &,::boost::shared_ptr<osiris::ObjectsIRevisionable>,::osiris::DbValue<unsigned int> &,::osiris::DbValue<double> & );
            
            IPortalDatabase_exposer.def( 
                "computeVotesStats"
                , computeVotesStats_function_type( &IPortalDatabase_wrapper::computeVotesStats )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("object"), ::boost::python::arg("outCount"), ::boost::python::arg("outAverage") ) );
        
        }
        { //::osiris::IPortalDatabase::computeLastObjectStats
        
            typedef void ( *computeLastObjectStats_function_type )( ::osiris::IPortalDatabase &,::boost::shared_ptr<osiris::ObjectsIRevisionable>,::osiris::DbValue<osiris::UniqueID> &,::osiris::DbValue<osiris::DateTime> & );
            
            IPortalDatabase_exposer.def( 
                "computeLastObjectStats"
                , computeLastObjectStats_function_type( &IPortalDatabase_wrapper::computeLastObjectStats )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("object"), ::boost::python::arg("outID"), ::boost::python::arg("outDate") ) );
        
        }
        { //::osiris::IPortalDatabase::setUserAvatar
        
            typedef boost::python::object ( *setUserAvatar_function_type )( ::osiris::IPortalDatabase &,::boost::shared_ptr<osiris::ObjectsUser>,::osiris::Buffer const &,::osiris::String const &,::osiris::String const &,::osiris::Buffer const & );
            
            IPortalDatabase_exposer.def( 
                "setUserAvatar"
                , setUserAvatar_function_type( &IPortalDatabase_wrapper::setUserAvatar )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("user"), ::boost::python::arg("privateKey"), ::boost::python::arg("fileName"), ::boost::python::arg("fileType"), ::boost::python::arg("fileData") ) );
        
        }
        { //::osiris::IPortalDatabase::getObjectVote
        
            typedef boost::python::object ( *getObjectVote_function_type )( ::osiris::IPortalDatabase &,::boost::shared_ptr<osiris::ObjectsUser>,::boost::shared_ptr<osiris::ObjectsIRevisionable> );
            
            IPortalDatabase_exposer.def( 
                "getObjectVote"
                , getObjectVote_function_type( &IPortalDatabase_wrapper::getObjectVote )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("user"), ::boost::python::arg("object") ) );
        
        }
        { //::osiris::IPortalDatabase::getPollVote
        
            typedef boost::python::object ( *getPollVote_function_type )( ::osiris::IPortalDatabase &,::boost::shared_ptr<osiris::ObjectsUser>,::boost::shared_ptr<osiris::ObjectsPoll> );
            
            IPortalDatabase_exposer.def( 
                "getPollVote"
                , getPollVote_function_type( &IPortalDatabase_wrapper::getPollVote_6e8c8bdb3427e447650c00c19c70557e )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("user"), ::boost::python::arg("poll") ) );
        
        }
        { //::osiris::IPortalDatabase::voteObject
        
            typedef boost::python::object ( *voteObject_function_type )( ::osiris::IPortalDatabase &,::boost::shared_ptr<osiris::ObjectsUser>,::osiris::Buffer const &,::osiris::UniqueID const &,::osiris::uint32 );
            
            IPortalDatabase_exposer.def( 
                "voteObject"
                , voteObject_function_type( &IPortalDatabase_wrapper::voteObject )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("user"), ::boost::python::arg("private_key"), ::boost::python::arg("reference"), ::boost::python::arg("score") ) );
        
        }
        { //::osiris::IPortalDatabase::unvoteObject
        
            typedef boost::python::object ( *unvoteObject_function_type )( ::osiris::IPortalDatabase &,::boost::shared_ptr<osiris::ObjectsUser>,::osiris::Buffer const &,::osiris::UniqueID const & );
            
            IPortalDatabase_exposer.def( 
                "unvoteObject"
                , unvoteObject_function_type( &IPortalDatabase_wrapper::unvoteObject )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("user"), ::boost::python::arg("private_key"), ::boost::python::arg("reference") ) );
        
        }
        { //::osiris::IPortalDatabase::votePoll
        
            typedef boost::python::object ( *votePoll_function_type )( ::osiris::IPortalDatabase &,::boost::shared_ptr<osiris::ObjectsUser>,::osiris::Buffer const &,::boost::shared_ptr<osiris::ObjectsPoll>,::osiris::UniqueID );
            
            IPortalDatabase_exposer.def( 
                "votePoll"
                , votePoll_function_type( &IPortalDatabase_wrapper::votePoll )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("user"), ::boost::python::arg("private_key"), ::boost::python::arg("poll"), ::boost::python::arg("poll_option") ) );
        
        }
        { //::osiris::IPortalDatabase::unvotePoll
        
            typedef boost::python::object ( *unvotePoll_function_type )( ::osiris::IPortalDatabase &,::boost::shared_ptr<osiris::ObjectsUser>,::osiris::Buffer const &,::boost::shared_ptr<osiris::ObjectsPoll> );
            
            IPortalDatabase_exposer.def( 
                "unvotePoll"
                , unvotePoll_function_type( &IPortalDatabase_wrapper::unvotePoll )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("user"), ::boost::python::arg("private_key"), ::boost::python::arg("poll") ) );
        
        }
        { //::osiris::IPortalDatabase::removeProfileStatistics
        
            typedef boost::python::object ( *removeProfileStatistics_function_type )( ::osiris::IPortalDatabase &,::osiris::String const &,::osiris::String );
            
            IPortalDatabase_exposer.def( 
                "removeProfileStatistics"
                , removeProfileStatistics_function_type( &IPortalDatabase_wrapper::removeProfileStatistics )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("table"), ::boost::python::arg("reference") ) );
        
        }
        { //::osiris::IPortalDatabase::_signAndInsert
        
            typedef boost::python::object ( *_signAndInsert_function_type )( ::osiris::IPortalDatabase &,::boost::shared_ptr<osiris::ObjectsIObject>,::osiris::Buffer const & );
            
            IPortalDatabase_exposer.def( 
                "_signAndInsert"
                , _signAndInsert_function_type( &IPortalDatabase_wrapper::_signAndInsert )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("object"), ::boost::python::arg("private_key") ) );
        
        }
        { //::osiris::IPortalDatabase::_signAndUpdate
        
            typedef boost::python::object ( *_signAndUpdate_function_type )( ::osiris::IPortalDatabase &,::boost::shared_ptr<osiris::ObjectsIObject>,::osiris::Buffer const &,bool );
            
            IPortalDatabase_exposer.def( 
                "_signAndUpdate"
                , _signAndUpdate_function_type( &IPortalDatabase_wrapper::_signAndUpdate )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("object"), ::boost::python::arg("private_key"), ::boost::python::arg("updateSubmitDate") ) );
        
        }
        { //::osiris::IPortalDatabase::getUserRelatedObjectID
        
            typedef boost::python::object ( *getUserRelatedObjectID_function_type )( ::osiris::UniqueID const &,::std::string const &,::std::string const &,::osiris::PortalObjectType );
            
            IPortalDatabase_exposer.def( 
                "getUserRelatedObjectID"
                , getUserRelatedObjectID_function_type( &IPortalDatabase_wrapper::getUserRelatedObjectID )
                , ( ::boost::python::arg("user_id"), ::boost::python::arg("relation"), ::boost::python::arg("reference"), ::boost::python::arg("type") ) );
        
        }
        { //::osiris::IPortalDatabase::getUserReputationID
        
            typedef boost::python::object ( *getUserReputationID_function_type )( ::osiris::UniqueID const &,::osiris::UniqueID const & );
            
            IPortalDatabase_exposer.def( 
                "getUserReputationID"
                , getUserReputationID_function_type( &IPortalDatabase_wrapper::getUserReputationID )
                , ( ::boost::python::arg("user_id"), ::boost::python::arg("reference") ) );
        
        }
        { //::osiris::IPortalDatabase::getUserPollVoteID
        
            typedef boost::python::object ( *getUserPollVoteID_function_type )( ::osiris::UniqueID const &,::osiris::UniqueID const & );
            
            IPortalDatabase_exposer.def( 
                "getUserPollVoteID"
                , getUserPollVoteID_function_type( &IPortalDatabase_wrapper::getUserPollVoteID )
                , ( ::boost::python::arg("user_id"), ::boost::python::arg("object_id") ) );
        
        }
        { //::osiris::IPortalDatabase::getUserVoteID
        
            typedef boost::python::object ( *getUserVoteID_function_type )( ::osiris::UniqueID const &,::osiris::UniqueID const & );
            
            IPortalDatabase_exposer.def( 
                "getUserVoteID"
                , getUserVoteID_function_type( &IPortalDatabase_wrapper::getUserVoteID )
                , ( ::boost::python::arg("user_id"), ::boost::python::arg("object_id") ) );
        
        }
        { //::osiris::IPortalDatabase::decreaseEntryRank
        
            typedef boost::python::object ( *decreaseEntryRank_function_type )( ::osiris::IPortalDatabase &,::osiris::UniqueID const & );
            
            IPortalDatabase_exposer.def( 
                "decreaseEntryRank"
                , decreaseEntryRank_function_type( &IPortalDatabase_wrapper::decreaseEntryRank )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("id") ) );
        
        }
        { //::osiris::IPortalDatabase::execute
        
            typedef boost::python::object ( *execute_function_type )( ::osiris::IPortalDatabase const &,::osiris::String const & );
            
            IPortalDatabase_exposer.def( 
                "execute"
                , execute_function_type( &IPortalDatabase_wrapper::execute_0d1f6f276565152d52270b7b65b0ae4c )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("sql") ) );
        
        }
        { //::osiris::IPortalDatabase::execute
        
            typedef boost::python::object ( *execute_function_type )( ::osiris::IPortalDatabase const &,::boost::shared_ptr<osiris::DbSqlICommand> );
            
            IPortalDatabase_exposer.def( 
                "execute"
                , execute_function_type( &IPortalDatabase_wrapper::execute_3abaa00ab6b12a55b6538b1a8801a006 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("command") ) );
        
        }
        { //::osiris::IPortalDatabase::getAvatar
        
            typedef boost::python::object ( *getAvatar_function_type )( ::osiris::IPortalDatabase &,::osiris::UniqueID const & );
            
            IPortalDatabase_exposer.def( 
                "getAvatar"
                , getAvatar_function_type( &IPortalDatabase_wrapper::getAvatar )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("id") ) );
        
        }
        { //::osiris::IPortalDatabase::getDescriptor
        
            typedef boost::python::object ( *getDescriptor_function_type )( ::osiris::IPortalDatabase const &,::osiris::PortalObjectType );
            
            IPortalDatabase_exposer.def( 
                "getDescriptor"
                , getDescriptor_function_type( &IPortalDatabase_wrapper::getDescriptor )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("type") ) );
        
        }
        { //::osiris::IPortalDatabase::getEntry
        
            typedef boost::python::object ( *getEntry_function_type )( ::osiris::IPortalDatabase const &,::osiris::UniqueID const & );
            
            IPortalDatabase_exposer.def( 
                "getEntry"
                , getEntry_function_type( &IPortalDatabase_wrapper::getEntry )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("id") ) );
        
        }
        { //::osiris::IPortalDatabase::getFile
        
            typedef boost::python::object ( *getFile_function_type )( ::osiris::IPortalDatabase &,::osiris::UniqueID const & );
            
            IPortalDatabase_exposer.def( 
                "getFile"
                , getFile_function_type( &IPortalDatabase_wrapper::getFile )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("id") ) );
        
        }
        { //::osiris::IPortalDatabase::getInstanceCache
        
            typedef boost::python::object ( *getInstanceCache_function_type )( ::osiris::IPortalDatabase &,::osiris::UniqueID const & );
            
            IPortalDatabase_exposer.def( 
                "getInstanceCache"
                , getInstanceCache_function_type( &IPortalDatabase_wrapper::getInstanceCache )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("reference") ) );
        
        }
        { //::osiris::IPortalDatabase::getPeer
        
            typedef boost::python::object ( *getPeer_function_type )( ::osiris::IPortalDatabase const &,::osiris::String const & );
            
            IPortalDatabase_exposer.def( 
                "getPeer"
                , getPeer_function_type( &IPortalDatabase_wrapper::getPeer )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("ip") ) );
        
        }
        { //::osiris::IPortalDatabase::getPollVote
        
            typedef boost::python::object ( *getPollVote_function_type )( ::osiris::IPortalDatabase &,::osiris::UniqueID const & );
            
            IPortalDatabase_exposer.def( 
                "getPollVote"
                , getPollVote_function_type( &IPortalDatabase_wrapper::getPollVote_6f77d5983220c81c251bcfc792d7a8ed )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("id") ) );
        
        }
        { //::osiris::IPortalDatabase::getPrivateMessage
        
            typedef boost::python::object ( *getPrivateMessage_function_type )( ::osiris::IPortalDatabase &,::osiris::UniqueID const & );
            
            IPortalDatabase_exposer.def( 
                "getPrivateMessage"
                , getPrivateMessage_function_type( &IPortalDatabase_wrapper::getPrivateMessage )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("id") ) );
        
        }
        { //::osiris::IPortalDatabase::getReputation
        
            typedef boost::python::object ( *getReputation_function_type )( ::osiris::IPortalDatabase &,::osiris::UniqueID const & );
            
            IPortalDatabase_exposer.def( 
                "getReputation"
                , getReputation_function_type( &IPortalDatabase_wrapper::getReputation )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("id") ) );
        
        }
        { //::osiris::IPortalDatabase::getTag
        
            typedef boost::python::object ( *getTag_function_type )( ::osiris::IPortalDatabase &,::osiris::UniqueID const & );
            
            IPortalDatabase_exposer.def( 
                "getTag"
                , getTag_function_type( &IPortalDatabase_wrapper::getTag )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("id") ) );
        
        }
        { //::osiris::IPortalDatabase::getUser
        
            typedef boost::python::object ( *getUser_function_type )( ::osiris::IPortalDatabase &,::osiris::UniqueID const & );
            
            IPortalDatabase_exposer.def( 
                "getUser"
                , getUser_function_type( &IPortalDatabase_wrapper::getUser )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("id") ) );
        
        }
        { //::osiris::IPortalDatabase::getUserAvatarID
        
            typedef boost::python::object ( *getUserAvatarID_function_type )( ::osiris::UniqueID const & );
            
            IPortalDatabase_exposer.def( 
                "getUserAvatarID"
                , getUserAvatarID_function_type( &IPortalDatabase_wrapper::getUserAvatarID )
                , ( ::boost::python::arg("user_id") ) );
        
        }
        { //::osiris::IPortalDatabase::getVote
        
            typedef boost::python::object ( *getVote_function_type )( ::osiris::IPortalDatabase &,::osiris::UniqueID const & );
            
            IPortalDatabase_exposer.def( 
                "getVote"
                , getVote_function_type( &IPortalDatabase_wrapper::getVote )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("id") ) );
        
        }
        { //::osiris::IPortalDatabase::increaseEntryRank
        
            typedef boost::python::object ( *increaseEntryRank_function_type )( ::osiris::IPortalDatabase &,::osiris::UniqueID const & );
            
            IPortalDatabase_exposer.def( 
                "increaseEntryRank"
                , increaseEntryRank_function_type( &IPortalDatabase_wrapper::increaseEntryRank )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("id") ) );
        
        }
        { //::osiris::IPortalDatabase::insertRecord
        
            typedef boost::python::object ( *insertRecord_function_type )( ::osiris::IPortalDatabase &,::boost::shared_ptr<osiris::DataIRecord> );
            
            IPortalDatabase_exposer.def( 
                "insertRecord"
                , insertRecord_function_type( &IPortalDatabase_wrapper::insertRecord )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("record") ) );
        
        }
        { //::osiris::IPortalDatabase::isRevisionable
        
            typedef boost::python::object ( *isRevisionable_function_type )( ::osiris::PortalObjectType );
            
            IPortalDatabase_exposer.def( 
                "isRevisionable"
                , isRevisionable_function_type( &IPortalDatabase_wrapper::isRevisionable )
                , ( ::boost::python::arg("type") ) );
        
        }
        { //::osiris::IPortalDatabase::isUpdatable
        
            typedef boost::python::object ( *isUpdatable_function_type )( ::osiris::PortalObjectType );
            
            IPortalDatabase_exposer.def( 
                "isUpdatable"
                , isUpdatable_function_type( &IPortalDatabase_wrapper::isUpdatable )
                , ( ::boost::python::arg("type") ) );
        
        }
        { //::osiris::IPortalDatabase::isVotable
        
            typedef boost::python::object ( *isVotable_function_type )( ::osiris::PortalObjectType );
            
            IPortalDatabase_exposer.def( 
                "isVotable"
                , isVotable_function_type( &IPortalDatabase_wrapper::isVotable )
                , ( ::boost::python::arg("type") ) );
        
        }
        { //::osiris::IPortalDatabase::loadDiscussionStats
        
            typedef ::boost::shared_ptr< osiris::DataDiscussionStats > ( IPortalDatabase_wrapper::*loadDiscussionStats_function_type )( ::osiris::String const & ) const;
            
            IPortalDatabase_exposer.def( 
                "loadDiscussionStats"
                , loadDiscussionStats_function_type( &IPortalDatabase_wrapper::loadDiscussionStats )
                , ( ::boost::python::arg("reference") ) );
        
        }
        { //::osiris::IPortalDatabase::loadEntry
        
            typedef ::boost::shared_ptr< osiris::DataEntry > ( IPortalDatabase_wrapper::*loadEntry_function_type )( ::osiris::String const & ) const;
            
            IPortalDatabase_exposer.def( 
                "loadEntry"
                , loadEntry_function_type( &IPortalDatabase_wrapper::loadEntry )
                , ( ::boost::python::arg("id") ) );
        
        }
        { //::osiris::IPortalDatabase::loadObject
        
            typedef ::boost::shared_ptr< osiris::ObjectsIObject > ( ::osiris::IPortalDatabase::*loadObject_function_type )( ::osiris::UniqueID const & ) ;
            typedef ::boost::shared_ptr< osiris::ObjectsIObject > ( IPortalDatabase_wrapper::*default_loadObject_function_type )( ::osiris::UniqueID const & ) ;
            
            IPortalDatabase_exposer.def( 
                "loadObject"
                , loadObject_function_type(&::osiris::IPortalDatabase::loadObject)
                , default_loadObject_function_type(&IPortalDatabase_wrapper::default_loadObject)
                , ( ::boost::python::arg("id") ) );
        
        }
        { //::osiris::IPortalDatabase::loadPeer
        
            typedef ::boost::shared_ptr< osiris::DataPeer > ( IPortalDatabase_wrapper::*loadPeer_function_type )( ::osiris::String const & ) const;
            
            IPortalDatabase_exposer.def( 
                "loadPeer"
                , loadPeer_function_type( &IPortalDatabase_wrapper::loadPeer )
                , ( ::boost::python::arg("ip") ) );
        
        }
        { //::osiris::IPortalDatabase::loadPollOptionStats
        
            typedef ::boost::shared_ptr< osiris::DataPollOptionStats > ( IPortalDatabase_wrapper::*loadPollOptionStats_function_type )( ::osiris::String const & ) const;
            
            IPortalDatabase_exposer.def( 
                "loadPollOptionStats"
                , loadPollOptionStats_function_type( &IPortalDatabase_wrapper::loadPollOptionStats )
                , ( ::boost::python::arg("reference") ) );
        
        }
        { //::osiris::IPortalDatabase::loadPollStats
        
            typedef ::boost::shared_ptr< osiris::DataPollStats > ( IPortalDatabase_wrapper::*loadPollStats_function_type )( ::osiris::String const & ) const;
            
            IPortalDatabase_exposer.def( 
                "loadPollStats"
                , loadPollStats_function_type( &IPortalDatabase_wrapper::loadPollStats )
                , ( ::boost::python::arg("reference") ) );
        
        }
        { //::osiris::IPortalDatabase::loadUserStats
        
            typedef ::boost::shared_ptr< osiris::DataUserStats > ( IPortalDatabase_wrapper::*loadUserStats_function_type )( ::osiris::String const & ) const;
            
            IPortalDatabase_exposer.def( 
                "loadUserStats"
                , loadUserStats_function_type( &IPortalDatabase_wrapper::loadUserStats )
                , ( ::boost::python::arg("reference") ) );
        
        }
        { //::osiris::IPortalDatabase::needObject
        
            typedef boost::python::object ( *needObject_function_type )( ::osiris::IPortalDatabase const &,::osiris::String const &,::osiris::DateTime const & );
            
            IPortalDatabase_exposer.def( 
                "needObject"
                , needObject_function_type( &IPortalDatabase_wrapper::needObject )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("id"), ::boost::python::arg("submit_date")=(osiris::DateTime::EMPTY) ) );
        
        }
        { //::osiris::IPortalDatabase::onInsertRecord
        
            typedef void ( IPortalDatabase_wrapper::*onInsertRecord_function_type )( ::boost::shared_ptr< osiris::DataIRecord > ) ;
            
            IPortalDatabase_exposer.def( 
                "onInsertRecord"
                , onInsertRecord_function_type( &IPortalDatabase_wrapper::onInsertRecord )
                , ( ::boost::python::arg("record") ) );
        
        }
        { //::osiris::IPortalDatabase::onRemovingRecord
        
            typedef void ( IPortalDatabase_wrapper::*onRemovingRecord_function_type )( ::boost::shared_ptr< osiris::DataIRecord > ) ;
            
            IPortalDatabase_exposer.def( 
                "onRemovingRecord"
                , onRemovingRecord_function_type( &IPortalDatabase_wrapper::onRemovingRecord )
                , ( ::boost::python::arg("record") ) );
        
        }
        { //::osiris::IPortalDatabase::onUpdateRecord
        
            typedef void ( IPortalDatabase_wrapper::*onUpdateRecord_function_type )( ::boost::shared_ptr< osiris::DataIRecord > ) ;
            
            IPortalDatabase_exposer.def( 
                "onUpdateRecord"
                , onUpdateRecord_function_type( &IPortalDatabase_wrapper::onUpdateRecord )
                , ( ::boost::python::arg("record") ) );
        
        }
        { //::osiris::IPortalDatabase::open
        
            typedef boost::python::object ( *open_function_type )( ::osiris::IPortalDatabase &,::boost::shared_ptr<osiris::Portal> );
            
            IPortalDatabase_exposer.def( 
                "open"
                , open_function_type( &IPortalDatabase_wrapper::open )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("portal") ) );
        
        }
        { //::osiris::IPortalDatabase::peerExists
        
            typedef boost::python::object ( *peerExists_function_type )( ::osiris::IPortalDatabase const &,::osiris::String const & );
            
            IPortalDatabase_exposer.def( 
                "peerExists"
                , peerExists_function_type( &IPortalDatabase_wrapper::peerExists )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("ip") ) );
        
        }
        { //::osiris::IPortalDatabase::removeObject
        
            typedef boost::python::object ( *removeObject_function_type )( ::osiris::IPortalDatabase &,::boost::shared_ptr<osiris::ObjectsIObject> );
            
            IPortalDatabase_exposer.def( 
                "removeObject"
                , removeObject_function_type( &IPortalDatabase_wrapper::removeObject )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("object") ) );
        
        }
        { //::osiris::IPortalDatabase::removeRecord
        
            typedef boost::python::object ( *removeRecord_function_type )( ::osiris::IPortalDatabase &,::boost::shared_ptr<osiris::DataIRecord> );
            
            IPortalDatabase_exposer.def( 
                "removeRecord"
                , removeRecord_function_type( &IPortalDatabase_wrapper::removeRecord )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("record") ) );
        
        }
        { //::osiris::IPortalDatabase::storeObject2
        
            typedef boost::python::object ( *storeObject2_function_type )( ::osiris::IPortalDatabase &,::boost::shared_ptr<osiris::ObjectsIObject> const & );
            
            IPortalDatabase_exposer.def( 
                "storeObject2"
                , storeObject2_function_type( &IPortalDatabase_wrapper::storeObject2 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("object") ) );
        
        }
        { //::osiris::IPortalDatabase::updateRecord
        
            typedef boost::python::object ( *updateRecord_function_type )( ::osiris::IPortalDatabase &,::boost::shared_ptr<osiris::DataIRecord> );
            
            IPortalDatabase_exposer.def( 
                "updateRecord"
                , updateRecord_function_type( &IPortalDatabase_wrapper::updateRecord )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("record") ) );
        
        }
        { //::osiris::IPortalDatabase::validateRecord
        
            typedef boost::python::object ( *validateRecord_function_type )( ::osiris::IPortalDatabase &,::boost::shared_ptr<osiris::DataIRecord> );
            
            IPortalDatabase_exposer.def( 
                "validateRecord"
                , validateRecord_function_type( &IPortalDatabase_wrapper::validateRecord )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("record") ) );
        
        }
        { //::osiris::IPortalDatabase::xxx_accountExists
        
            typedef boost::python::object ( *xxx_accountExists_function_type )( ::osiris::IPortalDatabase const &,::osiris::String const & );
            
            IPortalDatabase_exposer.def( 
                "xxx_accountExists"
                , xxx_accountExists_function_type( &IPortalDatabase_wrapper::xxx_accountExists )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("id") ) );
        
        }
        { //::osiris::IPortalDatabase::xxx_getAccount
        
            typedef boost::python::object ( *xxx_getAccount_function_type )( ::osiris::IPortalDatabase &,::osiris::String const & );
            
            IPortalDatabase_exposer.def( 
                "xxx_getAccount"
                , xxx_getAccount_function_type( &IPortalDatabase_wrapper::xxx_getAccount )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("id") ) );
        
        }
        { //::osiris::IPortalDatabase::xxx_loadAccount
        
            typedef ::boost::shared_ptr< osiris::DataAccount > ( IPortalDatabase_wrapper::*xxx_loadAccount_function_type )( ::osiris::String const & ) const;
            
            IPortalDatabase_exposer.def( 
                "xxx_loadAccount"
                , xxx_loadAccount_function_type( &IPortalDatabase_wrapper::xxx_loadAccount )
                , ( ::boost::python::arg("id") ) );
        
        }
        IPortalDatabase_exposer.staticmethod( "getUserRelatedObjectID" );
        IPortalDatabase_exposer.staticmethod( "getUserReputationID" );
        IPortalDatabase_exposer.staticmethod( "getUserPollVoteID" );
        IPortalDatabase_exposer.staticmethod( "getUserVoteID" );
        IPortalDatabase_exposer.staticmethod( "getUserAvatarID" );
        IPortalDatabase_exposer.staticmethod( "isRevisionable" );
        IPortalDatabase_exposer.staticmethod( "isUpdatable" );
        IPortalDatabase_exposer.staticmethod( "isVotable" );
        { //property "binder"[fget=::osiris::IPortalDatabase::getBinder]
        
            typedef ::boost::shared_ptr<osiris::DbBinder> ( ::osiris::IPortalDatabase::*fget )(  ) const;
            
            IPortalDatabase_exposer.add_property( 
                "binder"
                , fget( &::osiris::IPortalDatabase::getBinder )
                , "get property, built on top of \"boost::shared_ptr<osiris::DbBinder> osiris::IPortalDatabase::getBinder() const [member function]\"" );
        
        }
        { //property "connection"[fget=::osiris::IPortalDatabase::getConnection]
        
            typedef ::boost::shared_ptr<osiris::IDbConnection> ( ::osiris::IPortalDatabase::*fget )(  ) const;
            
            IPortalDatabase_exposer.add_property( 
                "connection"
                , fget( &::osiris::IPortalDatabase::getConnection )
                , "get property, built on top of \"boost::shared_ptr<osiris::IDbConnection> osiris::IPortalDatabase::getConnection() const [member function]\"" );
        
        }
        { //property "portal"[fget=::osiris::IPortalDatabase::getPortal]
        
            typedef ::boost::shared_ptr<osiris::Portal> ( ::osiris::IPortalDatabase::*fget )(  ) const;
            
            IPortalDatabase_exposer.add_property( 
                "portal"
                , fget( &::osiris::IPortalDatabase::getPortal )
                , "get property, built on top of \"boost::shared_ptr<osiris::Portal> osiris::IPortalDatabase::getPortal() const [member function]\"" );
        
        }
        { //property "query"[fget=::osiris::IPortalDatabase::getQuery]
        
            typedef ::osiris::uint32 const & ( ::osiris::IPortalDatabase::*fget )(  ) const;
            
            IPortalDatabase_exposer.add_property( 
                "query"
                , ::boost::python::make_function( 
                      fget( &::osiris::IPortalDatabase::getQuery )
                    , bp::return_value_policy< bp::copy_const_reference >() ) 
                , "get property, built on top of \"osiris::uint32 const & osiris::IPortalDatabase::getQuery() const [member function]\"" );
        
        }
        { //property "transaction"[fget=::osiris::IPortalDatabase::getTransaction]
        
            typedef ::osiris::uint32 const & ( ::osiris::IPortalDatabase::*fget )(  ) const;
            
            IPortalDatabase_exposer.add_property( 
                "transaction"
                , ::boost::python::make_function( 
                      fget( &::osiris::IPortalDatabase::getTransaction )
                    , bp::return_value_policy< bp::copy_const_reference >() ) 
                , "get property, built on top of \"osiris::uint32 const & osiris::IPortalDatabase::getTransaction() const [member function]\"" );
        
        }
        { //property "entries"[fget=::osiris::IPortalDatabase::getEntries]
        
            typedef ::osiris::uint32 ( ::osiris::IPortalDatabase::*fget )(  ) const;
            
            IPortalDatabase_exposer.add_property( 
                "entries"
                , fget( &::osiris::IPortalDatabase::getEntries )
                , "get property, built on top of \"osiris::uint32 osiris::IPortalDatabase::getEntries() const [member function]\"" );
        
        }
        { //property "peers"[fget=::osiris::IPortalDatabase::getPeers]
        
            typedef ::osiris::uint32 ( ::osiris::IPortalDatabase::*fget )(  ) const;
            
            IPortalDatabase_exposer.add_property( 
                "peers"
                , fget( &::osiris::IPortalDatabase::getPeers )
                , "get property, built on top of \"osiris::uint32 osiris::IPortalDatabase::getPeers() const [member function]\"" );
        
        }
        { //property "users"[fget=::osiris::IPortalDatabase::getUsers]
        
            typedef ::osiris::uint32 ( ::osiris::IPortalDatabase::*fget )(  ) const;
            
            IPortalDatabase_exposer.add_property( 
                "users"
                , fget( &::osiris::IPortalDatabase::getUsers )
                , "get property, built on top of \"osiris::uint32 osiris::IPortalDatabase::getUsers() const [member function]\"" );
        
        }
        ::boost::python::register_ptr_to_python< boost::shared_ptr< ::osiris::IPortalDatabase > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IPortalDatabase >, boost::shared_ptr< ::osiris::enable_this_ptr< osiris::IPortalDatabase > > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IPortalDatabase >, boost::shared_ptr< ::osiris::Object > >();
    }

}
