// This file has been generated by Py++.

#include "stdafx.h"
#include "pypluspluscommon.h"
#include "boost/python.hpp"
#include "__call_policies.pypp.hpp"
#include "searchresult.h"
#include "searchresult.pypp.hpp"

namespace bp = boost::python;

static boost::python::object getID_ad0c1bc054e50ae52e238b86559fd60d( ::osiris::SearchResult const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::UniqueID const & result = inst.getID();
    __pythreadSaver.restore();
    typedef bp::return_value_policy< bp::copy_const_reference > call_policies_t;
    return boost::python::object( pyplusplus::call_policies::make_object< call_policies_t, ::osiris::UniqueID const & >( result ) );
}

static boost::python::object getScore_0884ce757f0def95c20624cdeb6b4d3d( ::osiris::SearchResult const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    double const & result = inst.getScore();
    __pythreadSaver.restore();
    typedef bp::return_value_policy< bp::copy_const_reference > call_policies_t;
    return boost::python::object( pyplusplus::call_policies::make_object< call_policies_t, double const & >( result ) );
}

void register_SearchResult_class(){

    { //::osiris::SearchResult
        typedef ::boost::python::class_< ::osiris::SearchResult > SearchResult_exposer_t;
        SearchResult_exposer_t SearchResult_exposer = SearchResult_exposer_t( "SearchResult", ::boost::python::init< ::osiris::UniqueID const &, ::boost::python::optional< double > >(( ::boost::python::arg("id"), ::boost::python::arg("score")=0 )) );
        ::boost::python::scope SearchResult_scope( SearchResult_exposer );
        ::boost::python::implicitly_convertible< ::osiris::UniqueID const &, ::osiris::SearchResult >();
        { //::osiris::SearchResult::getID
        
            typedef boost::python::object ( *getID_function_type )( ::osiris::SearchResult const & );
            
            SearchResult_exposer.def( 
                "getID"
                , getID_function_type( &getID_ad0c1bc054e50ae52e238b86559fd60d ) );
        
        }
        { //::osiris::SearchResult::getScore
        
            typedef boost::python::object ( *getScore_function_type )( ::osiris::SearchResult const & );
            
            SearchResult_exposer.def( 
                "getScore"
                , getScore_function_type( &getScore_0884ce757f0def95c20624cdeb6b4d3d ) );
        
        }
        { //property "id"[fget=::osiris::SearchResult::getID]
        
            typedef ::osiris::UniqueID const & ( ::osiris::SearchResult::*fget )(  ) const;
            
            SearchResult_exposer.add_property( 
                "id"
                , ::boost::python::make_function( 
                      fget( &::osiris::SearchResult::getID )
                    , bp::return_value_policy< bp::copy_const_reference >() ) 
                , "get property, built on top of \"osiris::UniqueID const & osiris::SearchResult::getID() const [member function]\"" );
        
        }
        { //property "score"[fget=::osiris::SearchResult::getScore]
        
            typedef double const & ( ::osiris::SearchResult::*fget )(  ) const;
            
            SearchResult_exposer.add_property( 
                "score"
                , ::boost::python::make_function( 
                      fget( &::osiris::SearchResult::getScore )
                    , bp::return_value_policy< bp::copy_const_reference >() ) 
                , "get property, built on top of \"double const & osiris::SearchResult::getScore() const [member function]\"" );
        
        }
        ::boost::python::register_ptr_to_python< boost::shared_ptr< ::osiris::SearchResult > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::SearchResult >, boost::shared_ptr< ::osiris::Object > >();
    }

}
