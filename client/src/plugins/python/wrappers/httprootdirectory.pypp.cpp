// This file has been generated by Py++.

#include "stdafx.h"
#include "pypluspluscommon.h"
#include "boost/python.hpp"
#include "httprootdirectory.h"
#include "datetime.h"
#include "httppath.h"
#include "httpsessionstate.h"
#include "httpenumerateddirectorycallback.h"
#include "httpdirectorycallback.h"
#include "httprootdirectory.pypp.hpp"

namespace bp = boost::python;

struct HttpRootDirectory_wrapper : ::osiris::HttpRootDirectory, ::osiris::PythonWrapper< ::osiris::HttpRootDirectory > {

    HttpRootDirectory_wrapper( )
    : ::osiris::HttpRootDirectory( )
      , ::osiris::PythonWrapper< ::osiris::HttpRootDirectory >(){
        // nullptr constructor
    
    }

    virtual bool handle( ::boost::shared_ptr< osiris::HttpSession > session, ::osiris::HttpPath const & path ){
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_handle = this->get_override( "handle" ) )
            return func_handle( session, boost::ref(path) );
        else{
            __pystate.leave();
            return this->::osiris::HttpRootDirectory::handle( session, boost::ref(path) );
        }
    }
    
    virtual bool default_handle( ::boost::shared_ptr< osiris::HttpSession > session, ::osiris::HttpPath const & path ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        return ::osiris::HttpRootDirectory::handle( session, boost::ref(path) );
    }

    virtual ::boost::shared_ptr< osiris::HttpSessionState > createSessionState( ::boost::shared_ptr< osiris::HttpSession > session, ::osiris::TimeDuration const & duration ) const  {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_createSessionState = this->get_override( "createSessionState" ) )
            return func_createSessionState( session, boost::ref(duration) );
        else{
            __pystate.leave();
            return this->::osiris::IHttpDirectory::createSessionState( session, boost::ref(duration) );
        }
    }
    
    ::boost::shared_ptr< osiris::HttpSessionState > default_createSessionState( ::boost::shared_ptr< osiris::HttpSession > session, ::osiris::TimeDuration const & duration ) const  {
        ::osiris::PythonThreadSaver __pythreadSaver;
        return ::osiris::IHttpDirectory::createSessionState( session, boost::ref(duration) );
    }

    virtual ::osiris::String getSessionCookie( ::boost::shared_ptr< osiris::HttpSession > session ) const  {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_getSessionCookie = this->get_override( "getSessionCookie" ) )
            return func_getSessionCookie( session );
        else{
            __pystate.leave();
            return this->::osiris::IHttpDirectory::getSessionCookie( session );
        }
    }
    
    ::osiris::String default_getSessionCookie( ::boost::shared_ptr< osiris::HttpSession > session ) const  {
        ::osiris::PythonThreadSaver __pythreadSaver;
        return ::osiris::IHttpDirectory::getSessionCookie( session );
    }

    virtual bool isAccessible( ::boost::shared_ptr< osiris::HttpSession > session ) {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_isAccessible = this->get_override( "isAccessible" ) )
            return func_isAccessible( session );
        else{
            __pystate.leave();
            return this->::osiris::IHttpDirectory::isAccessible( session );
        }
    }
    
    bool default_isAccessible( ::boost::shared_ptr< osiris::HttpSession > session ) {
        ::osiris::PythonThreadSaver __pythreadSaver;
        return ::osiris::IHttpDirectory::isAccessible( session );
    }

    virtual bool process( ::boost::shared_ptr< osiris::HttpSession > session, ::osiris::HttpPath const & path ) {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_process = this->get_override( "process" ) )
            return func_process( session, boost::ref(path) );
        else{
            __pystate.leave();
            return this->::osiris::IHttpDirectory::process( session, boost::ref(path) );
        }
    }
    
    bool default_process( ::boost::shared_ptr< osiris::HttpSession > session, ::osiris::HttpPath const & path ) {
        ::osiris::PythonThreadSaver __pythreadSaver;
        return ::osiris::IHttpDirectory::process( session, boost::ref(path) );
    }

};

void register_HttpRootDirectory_class(){

    ::boost::python::class_< HttpRootDirectory_wrapper, ::boost::python::bases< ::osiris::IHttpDirectory >, ::boost::noncopyable >( "HttpRootDirectory", ::boost::python::init< >() )    
        .def( 
            "handle"
            , (bool ( HttpRootDirectory_wrapper::* )( ::boost::shared_ptr< osiris::HttpSession >,::osiris::HttpPath const & ) )(&HttpRootDirectory_wrapper::default_handle)
            , ( ::boost::python::arg("session"), ::boost::python::arg("path") ) )    
        .def( 
            "createSessionState"
            , (::boost::shared_ptr< osiris::HttpSessionState > ( ::osiris::IHttpDirectory::* )( ::boost::shared_ptr< osiris::HttpSession >,::osiris::TimeDuration const & ) const)(&::osiris::IHttpDirectory::createSessionState)
            , (::boost::shared_ptr< osiris::HttpSessionState > ( HttpRootDirectory_wrapper::* )( ::boost::shared_ptr< osiris::HttpSession >,::osiris::TimeDuration const & ) const)(&HttpRootDirectory_wrapper::default_createSessionState)
            , ( ::boost::python::arg("session"), ::boost::python::arg("duration") ) )    
        .def( 
            "getSessionCookie"
            , (::osiris::String ( ::osiris::IHttpDirectory::* )( ::boost::shared_ptr< osiris::HttpSession > ) const)(&::osiris::IHttpDirectory::getSessionCookie)
            , (::osiris::String ( HttpRootDirectory_wrapper::* )( ::boost::shared_ptr< osiris::HttpSession > ) const)(&HttpRootDirectory_wrapper::default_getSessionCookie)
            , ( ::boost::python::arg("session") ) )    
        .def( 
            "isAccessible"
            , (bool ( ::osiris::IHttpDirectory::* )( ::boost::shared_ptr< osiris::HttpSession > ) )(&::osiris::IHttpDirectory::isAccessible)
            , (bool ( HttpRootDirectory_wrapper::* )( ::boost::shared_ptr< osiris::HttpSession > ) )(&HttpRootDirectory_wrapper::default_isAccessible)
            , ( ::boost::python::arg("session") ) )    
        .def( 
            "process"
            , (bool ( ::osiris::IHttpDirectory::* )( ::boost::shared_ptr< osiris::HttpSession >,::osiris::HttpPath const & ) )(&::osiris::IHttpDirectory::process)
            , (bool ( HttpRootDirectory_wrapper::* )( ::boost::shared_ptr< osiris::HttpSession >,::osiris::HttpPath const & ) )(&HttpRootDirectory_wrapper::default_process)
            , ( ::boost::python::arg("session"), ::boost::python::arg("path") ) );

}
