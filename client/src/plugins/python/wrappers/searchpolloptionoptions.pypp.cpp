// This file has been generated by Py++.

#include "stdafx.h"
#include "pypluspluscommon.h"
#include "boost/python.hpp"
#include "searchpolloptionoptions.h"
#include "idesearchparam.h"
#include "searchpolloptionoptions.pypp.hpp"

namespace bp = boost::python;

struct SearchPollOptionOptions_wrapper : ::osiris::SearchPollOptionOptions, ::osiris::PythonWrapper< ::osiris::SearchPollOptionOptions > {

    SearchPollOptionOptions_wrapper(::osiris::SearchPollOptionOptions const & arg )
    : ::osiris::SearchPollOptionOptions( arg )
      , ::osiris::PythonWrapper< ::osiris::SearchPollOptionOptions >(){
        // copy constructor
        
    }

    SearchPollOptionOptions_wrapper( )
    : ::osiris::SearchPollOptionOptions( )
      , ::osiris::PythonWrapper< ::osiris::SearchPollOptionOptions >(){
        // null constructor
    
    }

    virtual ::boost::shared_ptr< osiris::IdeSearchParam > getControl(  ) {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_getControl = this->get_override( "getControl" ) )
            return func_getControl(  );
        else{
            __pystate.leave();
            return this->::osiris::ISearchOptions::getControl(  );
        }
    }
    
    ::boost::shared_ptr< osiris::IdeSearchParam > default_getControl(  ) {
        ::osiris::PythonThreadSaver __pythreadSaver;
        return ::osiris::ISearchOptions::getControl( );
    }

};

void register_SearchPollOptionOptions_class(){

    ::boost::python::class_< SearchPollOptionOptions_wrapper, ::boost::python::bases< ::osiris::ISearchOptions > >( "SearchPollOptionOptions", ::boost::python::init< >() )    
        .def( 
            "getControl"
            , (::boost::shared_ptr< osiris::IdeSearchParam > ( ::osiris::ISearchOptions::* )(  ) )(&::osiris::ISearchOptions::getControl)
            , (::boost::shared_ptr< osiris::IdeSearchParam > ( SearchPollOptionOptions_wrapper::* )(  ) )(&SearchPollOptionOptions_wrapper::default_getControl) );

}
