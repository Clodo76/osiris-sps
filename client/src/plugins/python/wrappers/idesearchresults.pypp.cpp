// This file has been generated by Py++.

#include "stdafx.h"
#include "pypluspluscommon.h"
#include "boost/python.hpp"
#include "__call_policies.pypp.hpp"
#include "idesearchresults.h"
#include "isearchresults.h"
#include "searchquery.h"
#include "xmlstylesheet.h"
#include "ideskin.h"
#include "idesession.h"
#include "datatree.h"
#include "htmlattributes.h"
#include "htmlevent.h"
#include "eventssource.h"
#include "htmlvirtualpage.h"
#include "htmlwriter.h"
#include "httprequest.h"
#include "httpresponse.h"
#include "httpsession.h"
#include "idesearchresults.pypp.hpp"

namespace bp = boost::python;

struct IdeSearchResults_wrapper : ::osiris::IdeSearchResults, ::osiris::PythonWrapper< ::osiris::IdeSearchResults > {

    IdeSearchResults_wrapper(::boost::shared_ptr< osiris::SearchQuery > query=osiris::null, ::boost::shared_ptr< osiris::ISearchResults > results=osiris::null )
    : ::osiris::IdeSearchResults( query, results )
      , ::osiris::PythonWrapper< ::osiris::IdeSearchResults >(){
        // constructor
    
    }

    static boost::python::object getQuery( ::osiris::IdeSearchResults const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::shared_ptr<osiris::SearchQuery> result = inst.getQuery();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getResults( ::osiris::IdeSearchResults const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::shared_ptr<osiris::ISearchResults> result = inst.getResults();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getEventChangeOffset( ::osiris::IdeSearchResults const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::shared_ptr<osiris::EventSource> result = inst.getEventChangeOffset();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    virtual ::osiris::String getTemplatePath(  ) {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_getTemplatePath = this->get_override( "getTemplatePath" ) )
            return func_getTemplatePath(  );
        else{
            __pystate.leave();
            return this->::osiris::IdeSearchResults::getTemplatePath(  );
        }
    }
    
    ::osiris::String default_getTemplatePath(  ) {
        ::osiris::PythonThreadSaver __pythreadSaver;
        return ::osiris::IdeSearchResults::getTemplatePath( );
    }

    virtual void onPreRender(  ){
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_onPreRender = this->get_override( "onPreRender" ) )
            func_onPreRender(  );
        else{
            __pystate.leave();
            this->::osiris::IdeSearchResults::onPreRender(  );
        }
    }
    
    virtual void default_onPreRender(  ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::IdeSearchResults::onPreRender( );
    }

    virtual ::osiris::String getPageHref( ::osiris::uint32 offset ) const  {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_getPageHref = this->get_override( "getPageHref" ) )
            return func_getPageHref( offset );
        else{
            __pystate.leave();
            return this->::osiris::IdeSearchResults::getPageHref( offset );
        }
    }
    
    ::osiris::String default_getPageHref( ::osiris::uint32 offset ) const  {
        ::osiris::PythonThreadSaver __pythreadSaver;
        return ::osiris::IdeSearchResults::getPageHref( offset );
    }

    static void setQuery( ::osiris::IdeSearchResults & inst, ::boost::shared_ptr< osiris::SearchQuery > query ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        inst.setQuery(query);
        __pythreadSaver.restore();
    }

    static void setResults( ::osiris::IdeSearchResults & inst, ::boost::shared_ptr< osiris::ISearchResults > results ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        inst.setResults(results);
        __pythreadSaver.restore();
    }

    void createPager( ::boost::shared_ptr< osiris::IdeSkin > skin, ::boost::shared_ptr< osiris::XMLNode > node, ::osiris::uint32 total_items, ::osiris::uint32 items_to_show, ::osiris::uint32 offset ){
        ::osiris::IIdePageable::createPager( skin, node, total_items, items_to_show, offset );
    }

    bool decodeEvent( ::osiris::String const & command, ::osiris::String & eventName, ::osiris::HtmlEvent & e ) const {
        return ::osiris::IHtmlControl::decodeEvent( boost::ref(command), boost::ref(eventName), boost::ref(e) );
    }

    ::osiris::String encodeEvent( ::osiris::String const & eventName, ::osiris::HtmlEvent const * e=(osiris::null) ) const {
        return ::osiris::IHtmlControl::encodeEvent( boost::ref(eventName), boost::python::ptr(e) );
    }

    virtual ::boost::shared_ptr< osiris::HttpSession > getSession(  ) const  {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_getSession = this->get_override( "getSession" ) )
            return func_getSession(  );
        else{
            __pystate.leave();
            return this->::osiris::IHtmlControl::getSession(  );
        }
    }
    
    ::boost::shared_ptr< osiris::HttpSession > default_getSession(  ) const  {
        ::osiris::PythonThreadSaver __pythreadSaver;
        return ::osiris::IHtmlControl::getSession( );
    }

    virtual void onEvent( ::osiris::String const & name, ::osiris::IEvent * e=(osiris::null) ){
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_onEvent = this->get_override( "onEvent" ) )
            func_onEvent( boost::ref(name), boost::python::ptr(e) );
        else{
            __pystate.leave();
            this->::osiris::IHtmlControl::onEvent( boost::ref(name), boost::python::ptr(e) );
        }
    }
    
    virtual void default_onEvent( ::osiris::String const & name, ::osiris::IEvent * e=(osiris::null) ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::IHtmlControl::onEvent( boost::ref(name), boost::python::ptr(e) );
    }

    virtual void onInit(  ){
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_onInit = this->get_override( "onInit" ) )
            func_onInit(  );
        else{
            __pystate.leave();
            this->::osiris::IXSLRenderer< osiris::IPortalPageControl< osiris::IHtmlControl > >::onInit(  );
        }
    }
    
    virtual void default_onInit(  ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::IXSLRenderer< osiris::IPortalPageControl< osiris::IHtmlControl > >::onInit( );
    }

    virtual void onInitStylesheet(  ){
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_onInitStylesheet = this->get_override( "onInitStylesheet" ) )
            func_onInitStylesheet(  );
        else{
            __pystate.leave();
            this->::osiris::IXSLRenderer< osiris::IPortalPageControl< osiris::IHtmlControl > >::onInitStylesheet(  );
        }
    }
    
    virtual void default_onInitStylesheet(  ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::IXSLRenderer< osiris::IPortalPageControl< osiris::IHtmlControl > >::onInitStylesheet( );
    }

    virtual void onLoad(  ){
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_onLoad = this->get_override( "onLoad" ) )
            func_onLoad(  );
        else{
            __pystate.leave();
            this->::osiris::IHtmlControl::onLoad(  );
        }
    }
    
    virtual void default_onLoad(  ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::IHtmlControl::onLoad( );
    }

    virtual void onLoadViewState( ::osiris::DataTree const & state ){
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_onLoadViewState = this->get_override( "onLoadViewState" ) )
            func_onLoadViewState( boost::ref(state) );
        else{
            __pystate.leave();
            this->::osiris::IHtmlControl::onLoadViewState( boost::ref(state) );
        }
    }
    
    virtual void default_onLoadViewState( ::osiris::DataTree const & state ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::IHtmlControl::onLoadViewState( boost::ref(state) );
    }

    virtual void onRender( ::osiris::HtmlWriter & writer ){
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_onRender = this->get_override( "onRender" ) )
            func_onRender( boost::ref(writer) );
        else{
            __pystate.leave();
            this->::osiris::IHtmlControl::onRender( boost::ref(writer) );
        }
    }
    
    virtual void default_onRender( ::osiris::HtmlWriter & writer ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::IHtmlControl::onRender( boost::ref(writer) );
    }

    virtual void onSaveViewState( ::osiris::DataTree & state ){
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_onSaveViewState = this->get_override( "onSaveViewState" ) )
            func_onSaveViewState( boost::ref(state) );
        else{
            __pystate.leave();
            this->::osiris::IHtmlControl::onSaveViewState( boost::ref(state) );
        }
    }
    
    virtual void default_onSaveViewState( ::osiris::DataTree & state ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::IHtmlControl::onSaveViewState( boost::ref(state) );
    }

    virtual void renderAttributes( ::osiris::HtmlWriter & writer ) {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_renderAttributes = this->get_override( "renderAttributes" ) )
            func_renderAttributes( boost::ref(writer) );
        else{
            __pystate.leave();
            this->::osiris::IHtmlControl::renderAttributes( boost::ref(writer) );
        }
    }
    
    void default_renderAttributes( ::osiris::HtmlWriter & writer ) {
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::IHtmlControl::renderAttributes( boost::ref(writer) );
    }

    virtual void renderChilds( ::osiris::HtmlWriter & writer ) {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_renderChilds = this->get_override( "renderChilds" ) )
            func_renderChilds( boost::ref(writer) );
        else{
            __pystate.leave();
            this->::osiris::IHtmlControl::renderChilds( boost::ref(writer) );
        }
    }
    
    void default_renderChilds( ::osiris::HtmlWriter & writer ) {
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::IHtmlControl::renderChilds( boost::ref(writer) );
    }

    void saveViewState( ::osiris::DataTree & states ){
        ::osiris::IHtmlControl::saveViewState( boost::ref(states) );
    }

};

void register_IdeSearchResults_class(){

    { //::osiris::IdeSearchResults
        typedef ::boost::python::class_< IdeSearchResults_wrapper, ::boost::python::bases< ::osiris::IXSLRenderer< osiris::IPortalPageControl< osiris::IHtmlControl > >, ::osiris::IIdePageable >, ::boost::noncopyable > IdeSearchResults_exposer_t;
        IdeSearchResults_exposer_t IdeSearchResults_exposer = IdeSearchResults_exposer_t( "IdeSearchResults", ::boost::python::init< ::boost::python::optional< ::boost::shared_ptr< osiris::SearchQuery >, ::boost::shared_ptr< osiris::ISearchResults > > >(( ::boost::python::arg("query")=osiris::null, ::boost::python::arg("results")=osiris::null )) );
        ::boost::python::scope IdeSearchResults_scope( IdeSearchResults_exposer );
        ::boost::python::implicitly_convertible< ::boost::shared_ptr< osiris::SearchQuery >, ::osiris::IdeSearchResults >();
        { //::osiris::IdeSearchResults::getQuery
        
            typedef boost::python::object ( *getQuery_function_type )( ::osiris::IdeSearchResults const & );
            
            IdeSearchResults_exposer.def( 
                "getQuery"
                , getQuery_function_type( &IdeSearchResults_wrapper::getQuery ) );
        
        }
        { //::osiris::IdeSearchResults::getResults
        
            typedef boost::python::object ( *getResults_function_type )( ::osiris::IdeSearchResults const & );
            
            IdeSearchResults_exposer.def( 
                "getResults"
                , getResults_function_type( &IdeSearchResults_wrapper::getResults ) );
        
        }
        { //::osiris::IdeSearchResults::getEventChangeOffset
        
            typedef boost::python::object ( *getEventChangeOffset_function_type )( ::osiris::IdeSearchResults const & );
            
            IdeSearchResults_exposer.def( 
                "getEventChangeOffset"
                , getEventChangeOffset_function_type( &IdeSearchResults_wrapper::getEventChangeOffset ) );
        
        }
        { //::osiris::IdeSearchResults::getTemplatePath
        
            typedef ::osiris::String ( ::osiris::IdeSearchResults::*getTemplatePath_function_type )(  ) ;
            typedef ::osiris::String ( IdeSearchResults_wrapper::*default_getTemplatePath_function_type )(  ) ;
            
            IdeSearchResults_exposer.def( 
                "getTemplatePath"
                , getTemplatePath_function_type(&::osiris::IdeSearchResults::getTemplatePath)
                , default_getTemplatePath_function_type(&IdeSearchResults_wrapper::default_getTemplatePath) );
        
        }
        { //::osiris::IdeSearchResults::onPreRender
        
            typedef void ( IdeSearchResults_wrapper::*onPreRender_function_type )(  ) ;
            
            IdeSearchResults_exposer.def( 
                "onPreRender"
                , onPreRender_function_type( &IdeSearchResults_wrapper::default_onPreRender ) );
        
        }
        { //::osiris::IdeSearchResults::getPageHref
        
            typedef ::osiris::String ( ::osiris::IdeSearchResults::*getPageHref_function_type )( ::osiris::uint32 ) const;
            typedef ::osiris::String ( IdeSearchResults_wrapper::*default_getPageHref_function_type )( ::osiris::uint32 ) const;
            
            IdeSearchResults_exposer.def( 
                "getPageHref"
                , getPageHref_function_type(&::osiris::IdeSearchResults::getPageHref)
                , default_getPageHref_function_type(&IdeSearchResults_wrapper::default_getPageHref)
                , ( ::boost::python::arg("offset") ) );
        
        }
        { //::osiris::IdeSearchResults::setQuery
        
            typedef void ( *setQuery_function_type )( ::osiris::IdeSearchResults &,::boost::shared_ptr<osiris::SearchQuery> );
            
            IdeSearchResults_exposer.def( 
                "setQuery"
                , setQuery_function_type( &IdeSearchResults_wrapper::setQuery )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("query") ) );
        
        }
        { //::osiris::IdeSearchResults::setResults
        
            typedef void ( *setResults_function_type )( ::osiris::IdeSearchResults &,::boost::shared_ptr<osiris::ISearchResults> );
            
            IdeSearchResults_exposer.def( 
                "setResults"
                , setResults_function_type( &IdeSearchResults_wrapper::setResults )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("results") ) );
        
        }
        IdeSearchResults_exposer.def_readonly( "EVENT_ONCHANGEOFFSET", ::osiris::IdeSearchResults::EVENT_ONCHANGEOFFSET );
        IdeSearchResults_exposer.def_readonly( "EVENT_ONFILTERALPHABETIC", ::osiris::IdeSearchResults::EVENT_ONFILTERALPHABETIC );
        { //::osiris::IIdePageable::createPager
        
            typedef void ( IdeSearchResults_wrapper::*createPager_function_type )( ::boost::shared_ptr< osiris::IdeSkin >,::boost::shared_ptr< osiris::XMLNode >,::osiris::uint32,::osiris::uint32,::osiris::uint32 ) ;
            
            IdeSearchResults_exposer.def( 
                "createPager"
                , createPager_function_type( &IdeSearchResults_wrapper::createPager )
                , ( ::boost::python::arg("skin"), ::boost::python::arg("node"), ::boost::python::arg("total_items"), ::boost::python::arg("items_to_show"), ::boost::python::arg("offset") ) );
        
        }
        { //::osiris::IHtmlControl::decodeEvent
        
            typedef bool ( IdeSearchResults_wrapper::*decodeEvent_function_type )( ::osiris::String const &,::osiris::String &,::osiris::HtmlEvent & ) const;
            
            IdeSearchResults_exposer.def( 
                "decodeEvent"
                , decodeEvent_function_type( &IdeSearchResults_wrapper::decodeEvent )
                , ( ::boost::python::arg("command"), ::boost::python::arg("eventName"), ::boost::python::arg("e") ) );
        
        }
        { //::osiris::IHtmlControl::encodeEvent
        
            typedef ::osiris::String ( IdeSearchResults_wrapper::*encodeEvent_function_type )( ::osiris::String const &,::osiris::HtmlEvent const * ) const;
            
            IdeSearchResults_exposer.def( 
                "encodeEvent"
                , encodeEvent_function_type( &IdeSearchResults_wrapper::encodeEvent )
                , ( ::boost::python::arg("eventName"), ::boost::python::arg("e")=(osiris::null) ) );
        
        }
        { //::osiris::IHtmlControl::getSession
        
            typedef ::boost::shared_ptr< osiris::HttpSession > ( ::osiris::IHtmlControl::*getSession_function_type )(  ) const;
            typedef ::boost::shared_ptr< osiris::HttpSession > ( IdeSearchResults_wrapper::*default_getSession_function_type )(  ) const;
            
            IdeSearchResults_exposer.def( 
                "getSession"
                , getSession_function_type(&::osiris::IHtmlControl::getSession)
                , default_getSession_function_type(&IdeSearchResults_wrapper::default_getSession) );
        
        }
        { //::osiris::IHtmlControl::onEvent
        
            typedef void ( IdeSearchResults_wrapper::*onEvent_function_type )( ::osiris::String const &,::osiris::IEvent * ) ;
            
            IdeSearchResults_exposer.def( 
                "onEvent"
                , onEvent_function_type( &IdeSearchResults_wrapper::default_onEvent )
                , ( ::boost::python::arg("name"), ::boost::python::arg("e")=(osiris::null) ) );
        
        }
        { //::osiris::IXSLRenderer< osiris::IPortalPageControl< osiris::IHtmlControl > >::onInit
        
            typedef ::osiris::IdeSearchResults exported_class_t;
            typedef void ( IdeSearchResults_wrapper::*onInit_function_type )(  ) ;
            
            IdeSearchResults_exposer.def( 
                "onInit"
                , onInit_function_type( &IdeSearchResults_wrapper::default_onInit ) );
        
        }
        { //::osiris::IXSLRenderer< osiris::IPortalPageControl< osiris::IHtmlControl > >::onInitStylesheet
        
            typedef ::osiris::IdeSearchResults exported_class_t;
            typedef void ( IdeSearchResults_wrapper::*onInitStylesheet_function_type )(  ) ;
            
            IdeSearchResults_exposer.def( 
                "onInitStylesheet"
                , onInitStylesheet_function_type( &IdeSearchResults_wrapper::default_onInitStylesheet ) );
        
        }
        { //::osiris::IHtmlControl::onLoad
        
            typedef void ( IdeSearchResults_wrapper::*onLoad_function_type )(  ) ;
            
            IdeSearchResults_exposer.def( 
                "onLoad"
                , onLoad_function_type( &IdeSearchResults_wrapper::default_onLoad ) );
        
        }
        { //::osiris::IHtmlControl::onLoadViewState
        
            typedef void ( IdeSearchResults_wrapper::*onLoadViewState_function_type )( ::osiris::DataTree const & ) ;
            
            IdeSearchResults_exposer.def( 
                "onLoadViewState"
                , onLoadViewState_function_type( &IdeSearchResults_wrapper::default_onLoadViewState )
                , ( ::boost::python::arg("state") ) );
        
        }
        { //::osiris::IHtmlControl::onRender
        
            typedef void ( IdeSearchResults_wrapper::*onRender_function_type )( ::osiris::HtmlWriter & ) ;
            
            IdeSearchResults_exposer.def( 
                "onRender"
                , onRender_function_type( &IdeSearchResults_wrapper::default_onRender )
                , ( ::boost::python::arg("writer") ) );
        
        }
        { //::osiris::IHtmlControl::onSaveViewState
        
            typedef void ( IdeSearchResults_wrapper::*onSaveViewState_function_type )( ::osiris::DataTree & ) ;
            
            IdeSearchResults_exposer.def( 
                "onSaveViewState"
                , onSaveViewState_function_type( &IdeSearchResults_wrapper::default_onSaveViewState )
                , ( ::boost::python::arg("state") ) );
        
        }
        { //::osiris::IHtmlControl::renderAttributes
        
            typedef void ( ::osiris::IHtmlControl::*renderAttributes_function_type )( ::osiris::HtmlWriter & ) ;
            typedef void ( IdeSearchResults_wrapper::*default_renderAttributes_function_type )( ::osiris::HtmlWriter & ) ;
            
            IdeSearchResults_exposer.def( 
                "renderAttributes"
                , renderAttributes_function_type(&::osiris::IHtmlControl::renderAttributes)
                , default_renderAttributes_function_type(&IdeSearchResults_wrapper::default_renderAttributes)
                , ( ::boost::python::arg("writer") ) );
        
        }
        { //::osiris::IHtmlControl::renderChilds
        
            typedef void ( ::osiris::IHtmlControl::*renderChilds_function_type )( ::osiris::HtmlWriter & ) ;
            typedef void ( IdeSearchResults_wrapper::*default_renderChilds_function_type )( ::osiris::HtmlWriter & ) ;
            
            IdeSearchResults_exposer.def( 
                "renderChilds"
                , renderChilds_function_type(&::osiris::IHtmlControl::renderChilds)
                , default_renderChilds_function_type(&IdeSearchResults_wrapper::default_renderChilds)
                , ( ::boost::python::arg("writer") ) );
        
        }
        { //::osiris::IHtmlControl::saveViewState
        
            typedef void ( IdeSearchResults_wrapper::*saveViewState_function_type )( ::osiris::DataTree & ) ;
            
            IdeSearchResults_exposer.def( 
                "saveViewState"
                , saveViewState_function_type( &IdeSearchResults_wrapper::saveViewState )
                , ( ::boost::python::arg("states") ) );
        
        }
        { //property "query"[fget=::osiris::IdeSearchResults::getQuery, fset=::osiris::IdeSearchResults::setQuery]
        
            typedef ::boost::shared_ptr<osiris::SearchQuery> ( ::osiris::IdeSearchResults::*fget )(  ) const;
            typedef void ( ::osiris::IdeSearchResults::*fset )( ::boost::shared_ptr<osiris::SearchQuery> ) ;
            
            IdeSearchResults_exposer.add_property( 
                "query"
                , fget( &::osiris::IdeSearchResults::getQuery )
                , fset( &::osiris::IdeSearchResults::setQuery )
                , "get\\set property, built on top of \"boost::shared_ptr<osiris::SearchQuery> osiris::IdeSearchResults::getQuery() const [member function]\" and \"void osiris::IdeSearchResults::setQuery(boost::shared_ptr<osiris::SearchQuery> query) [member function]\"" );
        
        }
        { //property "results"[fget=::osiris::IdeSearchResults::getResults, fset=::osiris::IdeSearchResults::setResults]
        
            typedef ::boost::shared_ptr<osiris::ISearchResults> ( ::osiris::IdeSearchResults::*fget )(  ) const;
            typedef void ( ::osiris::IdeSearchResults::*fset )( ::boost::shared_ptr<osiris::ISearchResults> ) ;
            
            IdeSearchResults_exposer.add_property( 
                "results"
                , fget( &::osiris::IdeSearchResults::getResults )
                , fset( &::osiris::IdeSearchResults::setResults )
                , "get\\set property, built on top of \"boost::shared_ptr<osiris::ISearchResults> osiris::IdeSearchResults::getResults() const [member function]\" and \"void osiris::IdeSearchResults::setResults(boost::shared_ptr<osiris::ISearchResults> results) [member function]\"" );
        
        }
        { //property "eventChangeOffset"[fget=::osiris::IdeSearchResults::getEventChangeOffset]
        
            typedef ::boost::shared_ptr<osiris::EventSource> ( ::osiris::IdeSearchResults::*fget )(  ) const;
            
            IdeSearchResults_exposer.add_property( 
                "eventChangeOffset"
                , fget( &::osiris::IdeSearchResults::getEventChangeOffset )
                , "get property, built on top of \"boost::shared_ptr<osiris::EventSource> osiris::IdeSearchResults::getEventChangeOffset() const [member function]\"" );
        
        }
    }

}
