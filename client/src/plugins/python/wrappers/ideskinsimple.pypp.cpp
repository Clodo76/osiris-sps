// This file has been generated by Py++.

#include "stdafx.h"
#include "pypluspluscommon.h"
#include "boost/python.hpp"
#include "__call_policies.pypp.hpp"
#include "ideskinsimple.h"
#include "ideskinsimple.pypp.hpp"

namespace bp = boost::python;

struct IdeSkinSimple_wrapper : ::osiris::IdeSkinSimple, ::osiris::PythonWrapper< ::osiris::IdeSkinSimple > {

    IdeSkinSimple_wrapper(::osiris::IdeSkinSimple const & arg )
    : ::osiris::IdeSkinSimple( arg )
      , ::osiris::PythonWrapper< ::osiris::IdeSkinSimple >(){
        // copy constructor
        
    }

    IdeSkinSimple_wrapper( )
    : ::osiris::IdeSkinSimple( )
      , ::osiris::PythonWrapper< ::osiris::IdeSkinSimple >(){
        // null constructor
    
    }

    static boost::python::object init( ::osiris::IdeSkinSimple & inst, ::boost::shared_ptr< osiris::IExtensionsExtension > e, ::osiris::String const & configName, ::osiris::String const & htdocsPath ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.init(e, configName, htdocsPath);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    virtual ::osiris::String findResource( ::osiris::String resource, bool http_path ) const  {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_findResource = this->get_override( "findResource" ) )
            return func_findResource( resource, http_path );
        else{
            __pystate.leave();
            return this->::osiris::IdeSkinSimple::findResource( resource, http_path );
        }
    }
    
    ::osiris::String default_findResource( ::osiris::String resource, bool http_path ) const  {
        ::osiris::PythonThreadSaver __pythreadSaver;
        return ::osiris::IdeSkinSimple::findResource( resource, http_path );
    }

    ::osiris::String _getSchemaPath(  ){
        return ::osiris::IdeSkin::_getSchemaPath(  );
    }

    virtual void apply( ::boost::shared_ptr< osiris::HtmlPage > page ) {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_apply = this->get_override( "apply" ) )
            func_apply( page );
        else{
            __pystate.leave();
            this->::osiris::IdeSkin::apply( page );
        }
    }
    
    void default_apply( ::boost::shared_ptr< osiris::HtmlPage > page ) {
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::IdeSkin::apply( page );
    }

};

void register_IdeSkinSimple_class(){

    ::boost::python::class_< IdeSkinSimple_wrapper, ::boost::python::bases< ::osiris::IdeSkin >, ::boost::noncopyable >( "IdeSkinSimple", ::boost::python::no_init )    
        .def( ::boost::python::init< >() )    
        .def( 
            "init"
            , (boost::python::object (*)( ::osiris::IdeSkinSimple &,::boost::shared_ptr<osiris::IExtensionsExtension>,::osiris::String const &,::osiris::String const & ))( &IdeSkinSimple_wrapper::init )
            , ( ::boost::python::arg("inst"), ::boost::python::arg("e"), ::boost::python::arg("configName"), ::boost::python::arg("htdocsPath") ) )    
        .def( 
            "findResource"
            , (::osiris::String ( ::osiris::IdeSkinSimple::* )( ::osiris::String,bool ) const)(&::osiris::IdeSkinSimple::findResource)
            , (::osiris::String ( IdeSkinSimple_wrapper::* )( ::osiris::String,bool ) const)(&IdeSkinSimple_wrapper::default_findResource)
            , ( ::boost::python::arg("resource"), ::boost::python::arg("http_path") ) )    
        .def( 
            "_getSchemaPath"
            , (::osiris::String ( IdeSkinSimple_wrapper::* )(  ) )(&IdeSkinSimple_wrapper::_getSchemaPath) )    
        .def( 
            "apply"
            , (void ( ::osiris::IdeSkin::* )( ::boost::shared_ptr< osiris::HtmlPage > ) )(&::osiris::IdeSkin::apply)
            , (void ( IdeSkinSimple_wrapper::* )( ::boost::shared_ptr< osiris::HtmlPage > ) )(&IdeSkinSimple_wrapper::default_apply)
            , ( ::boost::python::arg("page") ) );

}
