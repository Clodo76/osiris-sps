// This file has been generated by Py++.

#include "stdafx.h"
#include "pypluspluscommon.h"
#include "boost/python.hpp"
#include "__call_policies.pypp.hpp"
#include "idbresult.h"
#include "idbresult.pypp.hpp"

namespace bp = boost::python;

struct IDbResult_wrapper : ::osiris::IDbResult, ::osiris::PythonWrapper< ::osiris::IDbResult > {

    IDbResult_wrapper( )
    : ::osiris::IDbResult( )
      , ::osiris::PythonWrapper< ::osiris::IDbResult >(){
        // nullptr constructor
    
    }

    virtual ::osiris::uint32 columns(  ){
        ::osiris::PythonState __pystate(getPythonThreadState());
        ::osiris::PythonOverride func_columns = this->get_override( "columns" );
        return func_columns(  );
    }

    virtual bool end(  ){
        ::osiris::PythonState __pystate(getPythonThreadState());
        ::osiris::PythonOverride func_end = this->get_override( "end" );
        return func_end(  );
    }

    virtual void moveNext(  ){
        ::osiris::PythonState __pystate(getPythonThreadState());
        ::osiris::PythonOverride func_moveNext = this->get_override( "moveNext" );
        func_moveNext(  );
    }

    virtual void get( ::osiris::uint32 index, ::osiris::DataItem & value ){
        ::osiris::PythonState __pystate(getPythonThreadState());
        ::osiris::PythonOverride func_get = this->get_override( "get" );
        func_get( index, boost::ref(value) );
    }

    static void bind_58cbafb585391749401f74ad061b2263( ::osiris::IDbResult & inst, ::osiris::DataTableRow & row ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        inst.bind(row);
        __pythreadSaver.restore();
    }

    static void bind_3474606380887159af5e604a045c5402( ::osiris::IDbResult & inst, ::osiris::DataTable & table ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        inst.bind(table);
        __pythreadSaver.restore();
    }

    virtual ::osiris::String columnName( ::osiris::uint32 index ){
        ::osiris::PythonState __pystate(getPythonThreadState());
        ::osiris::PythonOverride func_columnName = this->get_override( "columnName" );
        return func_columnName( index );
    }

    static void init( ::osiris::IDbResult & inst, ::osiris::DataTable & table ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        inst.init(table);
        __pythreadSaver.restore();
    }

};

void register_IDbResult_class(){

    { //::osiris::IDbResult
        typedef ::boost::python::class_< IDbResult_wrapper, ::boost::noncopyable > IDbResult_exposer_t;
        IDbResult_exposer_t IDbResult_exposer = IDbResult_exposer_t( "IDbResult", ::boost::python::init< >() );
        ::boost::python::scope IDbResult_scope( IDbResult_exposer );
        { //::osiris::IDbResult::columns
        
            typedef ::osiris::uint32 ( ::osiris::IDbResult::*columns_function_type )(  ) ;
            
            IDbResult_exposer.def( 
                "columns"
                , ( columns_function_type(&::osiris::IDbResult::columns) ) );
        
        }
        { //::osiris::IDbResult::end
        
            typedef bool ( ::osiris::IDbResult::*end_function_type )(  ) ;
            
            IDbResult_exposer.def( 
                "end"
                , ( end_function_type(&::osiris::IDbResult::end) ) );
        
        }
        { //::osiris::IDbResult::moveNext
        
            typedef void ( ::osiris::IDbResult::*moveNext_function_type )(  ) ;
            
            IDbResult_exposer.def( 
                "moveNext"
                , ( moveNext_function_type(&::osiris::IDbResult::moveNext) ) );
        
        }
        { //::osiris::IDbResult::get
        
            typedef void ( ::osiris::IDbResult::*get_function_type )( ::osiris::uint32,::osiris::DataItem & ) ;
            
            IDbResult_exposer.def( 
                "get"
                , ( get_function_type(&::osiris::IDbResult::get) )
                , ( ::boost::python::arg("index"), ::boost::python::arg("value") ) );
        
        }
        { //::osiris::IDbResult::bind
        
            typedef void ( *bind_function_type )( ::osiris::IDbResult &,::osiris::DataTableRow & );
            
            IDbResult_exposer.def( 
                "bind"
                , bind_function_type( &IDbResult_wrapper::bind_58cbafb585391749401f74ad061b2263 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("row") ) );
        
        }
        { //::osiris::IDbResult::bind
        
            typedef void ( *bind_function_type )( ::osiris::IDbResult &,::osiris::DataTable & );
            
            IDbResult_exposer.def( 
                "bind"
                , bind_function_type( &IDbResult_wrapper::bind_3474606380887159af5e604a045c5402 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("table") ) );
        
        }
        { //::osiris::IDbResult::columnName
        
            typedef ::osiris::String ( ::osiris::IDbResult::*columnName_function_type )( ::osiris::uint32 ) ;
            
            IDbResult_exposer.def( 
                "columnName"
                , ( columnName_function_type(&::osiris::IDbResult::columnName) )
                , ( ::boost::python::arg("index") ) );
        
        }
        { //::osiris::IDbResult::init
        
            typedef void ( *init_function_type )( ::osiris::IDbResult &,::osiris::DataTable & );
            
            IDbResult_exposer.def( 
                "init"
                , init_function_type( &IDbResult_wrapper::init )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("table") ) );
        
        }
        ::boost::python::register_ptr_to_python< boost::shared_ptr< ::osiris::IDbResult > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IDbResult >, boost::shared_ptr< ::osiris::Object > >();
    }

}
