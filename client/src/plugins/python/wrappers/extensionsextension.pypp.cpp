// This file has been generated by Py++.

#include "stdafx.h"
#include "pypluspluscommon.h"
#include "boost/python.hpp"
#include "__call_policies.pypp.hpp"
#include "extensionsextension.h"
#include "languagefolder.h"
#include "uniqueid.h"
#include "version.h"
#include "extensionsextension.pypp.hpp"

namespace bp = boost::python;

struct ExtensionsExtension_wrapper : ::osiris::ExtensionsExtension, ::osiris::PythonWrapper< ::osiris::ExtensionsExtension > {

    ExtensionsExtension_wrapper(::osiris::ExtensionsExtension const & arg )
    : ::osiris::ExtensionsExtension( arg )
      , ::osiris::PythonWrapper< ::osiris::ExtensionsExtension >(){
        // copy constructor
        
    }

    ExtensionsExtension_wrapper( )
    : ::osiris::ExtensionsExtension( )
      , ::osiris::PythonWrapper< ::osiris::ExtensionsExtension >(){
        // null constructor
    
    }

    static boost::python::object isActive( ::osiris::ExtensionsExtension & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.isActive();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getStorePath( ::osiris::ExtensionsExtension const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::String result = inst.getStorePath();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getEnterUrl( ::osiris::ExtensionsExtension const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::String result = inst.getEnterUrl();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object init( ::osiris::ExtensionsExtension & inst, ::osiris::UniqueID const & id, ::osiris::Path const & path ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.init(id, path);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static void activate( ::osiris::ExtensionsExtension & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        inst.activate();
        __pythreadSaver.restore();
    }

    static void deactivate( ::osiris::ExtensionsExtension & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        inst.deactivate();
        __pythreadSaver.restore();
    }

    virtual ::osiris::UniqueID getID(  ) const  {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_getID = this->get_override( "getID" ) )
            return func_getID(  );
        else{
            __pystate.leave();
            return this->::osiris::ExtensionsExtension::getID(  );
        }
    }
    
    ::osiris::UniqueID default_getID(  ) const  {
        ::osiris::PythonThreadSaver __pythreadSaver;
        return ::osiris::ExtensionsExtension::getID( );
    }

    virtual ::osiris::String getName(  ) const  {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_getName = this->get_override( "getName" ) )
            return func_getName(  );
        else{
            __pystate.leave();
            return this->::osiris::ExtensionsExtension::getName(  );
        }
    }
    
    ::osiris::String default_getName(  ) const  {
        ::osiris::PythonThreadSaver __pythreadSaver;
        return ::osiris::ExtensionsExtension::getName( );
    }

    virtual ::osiris::String getDescription(  ) const  {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_getDescription = this->get_override( "getDescription" ) )
            return func_getDescription(  );
        else{
            __pystate.leave();
            return this->::osiris::ExtensionsExtension::getDescription(  );
        }
    }
    
    ::osiris::String default_getDescription(  ) const  {
        ::osiris::PythonThreadSaver __pythreadSaver;
        return ::osiris::ExtensionsExtension::getDescription( );
    }

    virtual ::osiris::String getContent(  ) const  {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_getContent = this->get_override( "getContent" ) )
            return func_getContent(  );
        else{
            __pystate.leave();
            return this->::osiris::ExtensionsExtension::getContent(  );
        }
    }
    
    ::osiris::String default_getContent(  ) const  {
        ::osiris::PythonThreadSaver __pythreadSaver;
        return ::osiris::ExtensionsExtension::getContent( );
    }

    virtual ::osiris::String getCategory(  ) const  {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_getCategory = this->get_override( "getCategory" ) )
            return func_getCategory(  );
        else{
            __pystate.leave();
            return this->::osiris::ExtensionsExtension::getCategory(  );
        }
    }
    
    ::osiris::String default_getCategory(  ) const  {
        ::osiris::PythonThreadSaver __pythreadSaver;
        return ::osiris::ExtensionsExtension::getCategory( );
    }

    virtual ::osiris::String getTags(  ) const  {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_getTags = this->get_override( "getTags" ) )
            return func_getTags(  );
        else{
            __pystate.leave();
            return this->::osiris::ExtensionsExtension::getTags(  );
        }
    }
    
    ::osiris::String default_getTags(  ) const  {
        ::osiris::PythonThreadSaver __pythreadSaver;
        return ::osiris::ExtensionsExtension::getTags( );
    }

    virtual ::osiris::String getTrust(  ) const  {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_getTrust = this->get_override( "getTrust" ) )
            return func_getTrust(  );
        else{
            __pystate.leave();
            return this->::osiris::ExtensionsExtension::getTrust(  );
        }
    }
    
    ::osiris::String default_getTrust(  ) const  {
        ::osiris::PythonThreadSaver __pythreadSaver;
        return ::osiris::ExtensionsExtension::getTrust( );
    }

    virtual ::osiris::String getAuthor(  ) const  {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_getAuthor = this->get_override( "getAuthor" ) )
            return func_getAuthor(  );
        else{
            __pystate.leave();
            return this->::osiris::ExtensionsExtension::getAuthor(  );
        }
    }
    
    ::osiris::String default_getAuthor(  ) const  {
        ::osiris::PythonThreadSaver __pythreadSaver;
        return ::osiris::ExtensionsExtension::getAuthor( );
    }

    virtual float getVersion(  ) const  {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_getVersion = this->get_override( "getVersion" ) )
            return func_getVersion(  );
        else{
            __pystate.leave();
            return this->::osiris::ExtensionsExtension::getVersion(  );
        }
    }
    
    float default_getVersion(  ) const  {
        ::osiris::PythonThreadSaver __pythreadSaver;
        return ::osiris::ExtensionsExtension::getVersion( );
    }

    virtual float getCompatibility(  ) const  {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_getCompatibility = this->get_override( "getCompatibility" ) )
            return func_getCompatibility(  );
        else{
            __pystate.leave();
            return this->::osiris::ExtensionsExtension::getCompatibility(  );
        }
    }
    
    float default_getCompatibility(  ) const  {
        ::osiris::PythonThreadSaver __pythreadSaver;
        return ::osiris::ExtensionsExtension::getCompatibility( );
    }

    virtual ::osiris::String getHomePage(  ) const  {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_getHomePage = this->get_override( "getHomePage" ) )
            return func_getHomePage(  );
        else{
            __pystate.leave();
            return this->::osiris::ExtensionsExtension::getHomePage(  );
        }
    }
    
    ::osiris::String default_getHomePage(  ) const  {
        ::osiris::PythonThreadSaver __pythreadSaver;
        return ::osiris::ExtensionsExtension::getHomePage( );
    }

    virtual ::osiris::String getIcon(  ) const  {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_getIcon = this->get_override( "getIcon" ) )
            return func_getIcon(  );
        else{
            __pystate.leave();
            return this->::osiris::ExtensionsExtension::getIcon(  );
        }
    }
    
    ::osiris::String default_getIcon(  ) const  {
        ::osiris::PythonThreadSaver __pythreadSaver;
        return ::osiris::ExtensionsExtension::getIcon( );
    }

    virtual ::osiris::String getLogo(  ) const  {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_getLogo = this->get_override( "getLogo" ) )
            return func_getLogo(  );
        else{
            __pystate.leave();
            return this->::osiris::ExtensionsExtension::getLogo(  );
        }
    }
    
    ::osiris::String default_getLogo(  ) const  {
        ::osiris::PythonThreadSaver __pythreadSaver;
        return ::osiris::ExtensionsExtension::getLogo( );
    }

    virtual bool getInternal(  ) const  {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_getInternal = this->get_override( "getInternal" ) )
            return func_getInternal(  );
        else{
            __pystate.leave();
            return this->::osiris::ExtensionsExtension::getInternal(  );
        }
    }
    
    bool default_getInternal(  ) const  {
        ::osiris::PythonThreadSaver __pythreadSaver;
        return ::osiris::ExtensionsExtension::getInternal( );
    }

    virtual ::osiris::String getPath(  ) const  {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_getPath = this->get_override( "getPath" ) )
            return func_getPath(  );
        else{
            __pystate.leave();
            return this->::osiris::ExtensionsExtension::getPath(  );
        }
    }
    
    ::osiris::String default_getPath(  ) const  {
        ::osiris::PythonThreadSaver __pythreadSaver;
        return ::osiris::ExtensionsExtension::getPath( );
    }

    virtual void load(  ) {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_load = this->get_override( "load" ) )
            func_load(  );
        else{
            __pystate.leave();
            this->::osiris::ExtensionsExtension::load(  );
        }
    }
    
    void default_load(  ) {
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::ExtensionsExtension::load( );
    }

    virtual void unload(  ) {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_unload = this->get_override( "unload" ) )
            func_unload(  );
        else{
            __pystate.leave();
            this->::osiris::ExtensionsExtension::unload(  );
        }
    }
    
    void default_unload(  ) {
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::ExtensionsExtension::unload( );
    }

    static void reload( ::osiris::ExtensionsExtension & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        inst.reload();
        __pythreadSaver.restore();
    }

    static void setEnterUrl( ::osiris::ExtensionsExtension & inst, ::osiris::String const & url ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        inst.setEnterUrl(url);
        __pythreadSaver.restore();
    }

    virtual void onPortalLoaded( ::boost::shared_ptr< osiris::Portal > portal, ::boost::shared_ptr< osiris::IPortalDatabase > database ){
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_onPortalLoaded = this->get_override( "onPortalLoaded" ) )
            func_onPortalLoaded( portal, database );
        else{
            __pystate.leave();
            this->::osiris::IExtensionsExtension::onPortalLoaded( portal, database );
        }
    }
    
    virtual void default_onPortalLoaded( ::boost::shared_ptr< osiris::Portal > portal, ::boost::shared_ptr< osiris::IPortalDatabase > database ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::IExtensionsExtension::onPortalLoaded( portal, database );
    }

};

void register_ExtensionsExtension_class(){

    { //::osiris::ExtensionsExtension
        typedef ::boost::python::class_< ExtensionsExtension_wrapper, ::boost::python::bases< ::osiris::IExtensionsExtension >, ::boost::noncopyable > ExtensionsExtension_exposer_t;
        ExtensionsExtension_exposer_t ExtensionsExtension_exposer = ExtensionsExtension_exposer_t( "ExtensionsExtension", ::boost::python::no_init );
        ::boost::python::scope ExtensionsExtension_scope( ExtensionsExtension_exposer );
        ExtensionsExtension_exposer.def( ::boost::python::init< >() );
        { //::osiris::ExtensionsExtension::isActive
        
            typedef boost::python::object ( *isActive_function_type )( ::osiris::ExtensionsExtension & );
            
            ExtensionsExtension_exposer.def( 
                "isActive"
                , isActive_function_type( &ExtensionsExtension_wrapper::isActive ) );
        
        }
        { //::osiris::ExtensionsExtension::getStorePath
        
            typedef boost::python::object ( *getStorePath_function_type )( ::osiris::ExtensionsExtension const & );
            
            ExtensionsExtension_exposer.def( 
                "getStorePath"
                , getStorePath_function_type( &ExtensionsExtension_wrapper::getStorePath ) );
        
        }
        { //::osiris::ExtensionsExtension::getEnterUrl
        
            typedef boost::python::object ( *getEnterUrl_function_type )( ::osiris::ExtensionsExtension const & );
            
            ExtensionsExtension_exposer.def( 
                "getEnterUrl"
                , getEnterUrl_function_type( &ExtensionsExtension_wrapper::getEnterUrl ) );
        
        }
        { //::osiris::ExtensionsExtension::init
        
            typedef boost::python::object ( *init_function_type )( ::osiris::ExtensionsExtension &,::osiris::UniqueID const &,::osiris::Path const & );
            
            ExtensionsExtension_exposer.def( 
                "init"
                , init_function_type( &ExtensionsExtension_wrapper::init )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("id"), ::boost::python::arg("path") ) );
        
        }
        { //::osiris::ExtensionsExtension::activate
        
            typedef void ( *activate_function_type )( ::osiris::ExtensionsExtension & );
            
            ExtensionsExtension_exposer.def( 
                "activate"
                , activate_function_type( &ExtensionsExtension_wrapper::activate ) );
        
        }
        { //::osiris::ExtensionsExtension::deactivate
        
            typedef void ( *deactivate_function_type )( ::osiris::ExtensionsExtension & );
            
            ExtensionsExtension_exposer.def( 
                "deactivate"
                , deactivate_function_type( &ExtensionsExtension_wrapper::deactivate ) );
        
        }
        { //::osiris::ExtensionsExtension::getID
        
            typedef ::osiris::UniqueID ( ::osiris::ExtensionsExtension::*getID_function_type )(  ) const;
            typedef ::osiris::UniqueID ( ExtensionsExtension_wrapper::*default_getID_function_type )(  ) const;
            
            ExtensionsExtension_exposer.def( 
                "getID"
                , getID_function_type(&::osiris::ExtensionsExtension::getID)
                , default_getID_function_type(&ExtensionsExtension_wrapper::default_getID) );
        
        }
        { //::osiris::ExtensionsExtension::getName
        
            typedef ::osiris::String ( ::osiris::ExtensionsExtension::*getName_function_type )(  ) const;
            typedef ::osiris::String ( ExtensionsExtension_wrapper::*default_getName_function_type )(  ) const;
            
            ExtensionsExtension_exposer.def( 
                "getName"
                , getName_function_type(&::osiris::ExtensionsExtension::getName)
                , default_getName_function_type(&ExtensionsExtension_wrapper::default_getName) );
        
        }
        { //::osiris::ExtensionsExtension::getDescription
        
            typedef ::osiris::String ( ::osiris::ExtensionsExtension::*getDescription_function_type )(  ) const;
            typedef ::osiris::String ( ExtensionsExtension_wrapper::*default_getDescription_function_type )(  ) const;
            
            ExtensionsExtension_exposer.def( 
                "getDescription"
                , getDescription_function_type(&::osiris::ExtensionsExtension::getDescription)
                , default_getDescription_function_type(&ExtensionsExtension_wrapper::default_getDescription) );
        
        }
        { //::osiris::ExtensionsExtension::getContent
        
            typedef ::osiris::String ( ::osiris::ExtensionsExtension::*getContent_function_type )(  ) const;
            typedef ::osiris::String ( ExtensionsExtension_wrapper::*default_getContent_function_type )(  ) const;
            
            ExtensionsExtension_exposer.def( 
                "getContent"
                , getContent_function_type(&::osiris::ExtensionsExtension::getContent)
                , default_getContent_function_type(&ExtensionsExtension_wrapper::default_getContent) );
        
        }
        { //::osiris::ExtensionsExtension::getCategory
        
            typedef ::osiris::String ( ::osiris::ExtensionsExtension::*getCategory_function_type )(  ) const;
            typedef ::osiris::String ( ExtensionsExtension_wrapper::*default_getCategory_function_type )(  ) const;
            
            ExtensionsExtension_exposer.def( 
                "getCategory"
                , getCategory_function_type(&::osiris::ExtensionsExtension::getCategory)
                , default_getCategory_function_type(&ExtensionsExtension_wrapper::default_getCategory) );
        
        }
        { //::osiris::ExtensionsExtension::getTags
        
            typedef ::osiris::String ( ::osiris::ExtensionsExtension::*getTags_function_type )(  ) const;
            typedef ::osiris::String ( ExtensionsExtension_wrapper::*default_getTags_function_type )(  ) const;
            
            ExtensionsExtension_exposer.def( 
                "getTags"
                , getTags_function_type(&::osiris::ExtensionsExtension::getTags)
                , default_getTags_function_type(&ExtensionsExtension_wrapper::default_getTags) );
        
        }
        { //::osiris::ExtensionsExtension::getTrust
        
            typedef ::osiris::String ( ::osiris::ExtensionsExtension::*getTrust_function_type )(  ) const;
            typedef ::osiris::String ( ExtensionsExtension_wrapper::*default_getTrust_function_type )(  ) const;
            
            ExtensionsExtension_exposer.def( 
                "getTrust"
                , getTrust_function_type(&::osiris::ExtensionsExtension::getTrust)
                , default_getTrust_function_type(&ExtensionsExtension_wrapper::default_getTrust) );
        
        }
        { //::osiris::ExtensionsExtension::getAuthor
        
            typedef ::osiris::String ( ::osiris::ExtensionsExtension::*getAuthor_function_type )(  ) const;
            typedef ::osiris::String ( ExtensionsExtension_wrapper::*default_getAuthor_function_type )(  ) const;
            
            ExtensionsExtension_exposer.def( 
                "getAuthor"
                , getAuthor_function_type(&::osiris::ExtensionsExtension::getAuthor)
                , default_getAuthor_function_type(&ExtensionsExtension_wrapper::default_getAuthor) );
        
        }
        { //::osiris::ExtensionsExtension::getVersion
        
            typedef float ( ::osiris::ExtensionsExtension::*getVersion_function_type )(  ) const;
            typedef float ( ExtensionsExtension_wrapper::*default_getVersion_function_type )(  ) const;
            
            ExtensionsExtension_exposer.def( 
                "getVersion"
                , getVersion_function_type(&::osiris::ExtensionsExtension::getVersion)
                , default_getVersion_function_type(&ExtensionsExtension_wrapper::default_getVersion) );
        
        }
        { //::osiris::ExtensionsExtension::getCompatibility
        
            typedef float ( ::osiris::ExtensionsExtension::*getCompatibility_function_type )(  ) const;
            typedef float ( ExtensionsExtension_wrapper::*default_getCompatibility_function_type )(  ) const;
            
            ExtensionsExtension_exposer.def( 
                "getCompatibility"
                , getCompatibility_function_type(&::osiris::ExtensionsExtension::getCompatibility)
                , default_getCompatibility_function_type(&ExtensionsExtension_wrapper::default_getCompatibility) );
        
        }
        { //::osiris::ExtensionsExtension::getHomePage
        
            typedef ::osiris::String ( ::osiris::ExtensionsExtension::*getHomePage_function_type )(  ) const;
            typedef ::osiris::String ( ExtensionsExtension_wrapper::*default_getHomePage_function_type )(  ) const;
            
            ExtensionsExtension_exposer.def( 
                "getHomePage"
                , getHomePage_function_type(&::osiris::ExtensionsExtension::getHomePage)
                , default_getHomePage_function_type(&ExtensionsExtension_wrapper::default_getHomePage) );
        
        }
        { //::osiris::ExtensionsExtension::getIcon
        
            typedef ::osiris::String ( ::osiris::ExtensionsExtension::*getIcon_function_type )(  ) const;
            typedef ::osiris::String ( ExtensionsExtension_wrapper::*default_getIcon_function_type )(  ) const;
            
            ExtensionsExtension_exposer.def( 
                "getIcon"
                , getIcon_function_type(&::osiris::ExtensionsExtension::getIcon)
                , default_getIcon_function_type(&ExtensionsExtension_wrapper::default_getIcon) );
        
        }
        { //::osiris::ExtensionsExtension::getLogo
        
            typedef ::osiris::String ( ::osiris::ExtensionsExtension::*getLogo_function_type )(  ) const;
            typedef ::osiris::String ( ExtensionsExtension_wrapper::*default_getLogo_function_type )(  ) const;
            
            ExtensionsExtension_exposer.def( 
                "getLogo"
                , getLogo_function_type(&::osiris::ExtensionsExtension::getLogo)
                , default_getLogo_function_type(&ExtensionsExtension_wrapper::default_getLogo) );
        
        }
        { //::osiris::ExtensionsExtension::getInternal
        
            typedef bool ( ::osiris::ExtensionsExtension::*getInternal_function_type )(  ) const;
            typedef bool ( ExtensionsExtension_wrapper::*default_getInternal_function_type )(  ) const;
            
            ExtensionsExtension_exposer.def( 
                "getInternal"
                , getInternal_function_type(&::osiris::ExtensionsExtension::getInternal)
                , default_getInternal_function_type(&ExtensionsExtension_wrapper::default_getInternal) );
        
        }
        { //::osiris::ExtensionsExtension::getPath
        
            typedef ::osiris::String ( ::osiris::ExtensionsExtension::*getPath_function_type )(  ) const;
            typedef ::osiris::String ( ExtensionsExtension_wrapper::*default_getPath_function_type )(  ) const;
            
            ExtensionsExtension_exposer.def( 
                "getPath"
                , getPath_function_type(&::osiris::ExtensionsExtension::getPath)
                , default_getPath_function_type(&ExtensionsExtension_wrapper::default_getPath) );
        
        }
        { //::osiris::ExtensionsExtension::load
        
            typedef void ( ::osiris::ExtensionsExtension::*load_function_type )(  ) ;
            typedef void ( ExtensionsExtension_wrapper::*default_load_function_type )(  ) ;
            
            ExtensionsExtension_exposer.def( 
                "load"
                , load_function_type(&::osiris::ExtensionsExtension::load)
                , default_load_function_type(&ExtensionsExtension_wrapper::default_load) );
        
        }
        { //::osiris::ExtensionsExtension::unload
        
            typedef void ( ::osiris::ExtensionsExtension::*unload_function_type )(  ) ;
            typedef void ( ExtensionsExtension_wrapper::*default_unload_function_type )(  ) ;
            
            ExtensionsExtension_exposer.def( 
                "unload"
                , unload_function_type(&::osiris::ExtensionsExtension::unload)
                , default_unload_function_type(&ExtensionsExtension_wrapper::default_unload) );
        
        }
        { //::osiris::ExtensionsExtension::reload
        
            typedef void ( *reload_function_type )( ::osiris::ExtensionsExtension & );
            
            ExtensionsExtension_exposer.def( 
                "reload"
                , reload_function_type( &ExtensionsExtension_wrapper::reload ) );
        
        }
        { //::osiris::ExtensionsExtension::setEnterUrl
        
            typedef void ( *setEnterUrl_function_type )( ::osiris::ExtensionsExtension &,::osiris::String const & );
            
            ExtensionsExtension_exposer.def( 
                "setEnterUrl"
                , setEnterUrl_function_type( &ExtensionsExtension_wrapper::setEnterUrl )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("url") ) );
        
        }
        { //::osiris::IExtensionsExtension::onPortalLoaded
        
            typedef void ( ExtensionsExtension_wrapper::*onPortalLoaded_function_type )( ::boost::shared_ptr< osiris::Portal >,::boost::shared_ptr< osiris::IPortalDatabase > ) ;
            
            ExtensionsExtension_exposer.def( 
                "onPortalLoaded"
                , onPortalLoaded_function_type( &ExtensionsExtension_wrapper::default_onPortalLoaded )
                , ( ::boost::python::arg("portal"), ::boost::python::arg("database") ) );
        
        }
        { //property "enterUrl"[fget=::osiris::ExtensionsExtension::getEnterUrl, fset=::osiris::ExtensionsExtension::setEnterUrl]
        
            typedef ::osiris::String ( ::osiris::ExtensionsExtension::*fget )(  ) const;
            typedef void ( ::osiris::ExtensionsExtension::*fset )( ::osiris::String const & ) ;
            
            ExtensionsExtension_exposer.add_property( 
                "enterUrl"
                , fget( &::osiris::ExtensionsExtension::getEnterUrl )
                , fset( &::osiris::ExtensionsExtension::setEnterUrl )
                , "get\\set property, built on top of \"osiris::String osiris::ExtensionsExtension::getEnterUrl() const [member function]\" and \"void osiris::ExtensionsExtension::setEnterUrl(osiris::String const & url) [member function]\"" );
        
        }
        { //property "storePath"[fget=::osiris::ExtensionsExtension::getStorePath]
        
            typedef ::osiris::String ( ::osiris::ExtensionsExtension::*fget )(  ) const;
            
            ExtensionsExtension_exposer.add_property( 
                "storePath"
                , fget( &::osiris::ExtensionsExtension::getStorePath )
                , "get property, built on top of \"osiris::String osiris::ExtensionsExtension::getStorePath() const [member function]\"" );
        
        }
        { //property "id"[fget=::osiris::ExtensionsExtension::getID]
        
            typedef ::osiris::UniqueID ( ::osiris::ExtensionsExtension::*fget )(  ) const;
            
            ExtensionsExtension_exposer.add_property( 
                "id"
                , fget( &::osiris::ExtensionsExtension::getID )
                , "get property, built on top of \"osiris::UniqueID osiris::ExtensionsExtension::getID() const [member function]\"" );
        
        }
        { //property "name"[fget=::osiris::ExtensionsExtension::getName]
        
            typedef ::osiris::String ( ::osiris::ExtensionsExtension::*fget )(  ) const;
            
            ExtensionsExtension_exposer.add_property( 
                "name"
                , fget( &::osiris::ExtensionsExtension::getName )
                , "get property, built on top of \"osiris::String osiris::ExtensionsExtension::getName() const [member function]\"" );
        
        }
        { //property "description"[fget=::osiris::ExtensionsExtension::getDescription]
        
            typedef ::osiris::String ( ::osiris::ExtensionsExtension::*fget )(  ) const;
            
            ExtensionsExtension_exposer.add_property( 
                "description"
                , fget( &::osiris::ExtensionsExtension::getDescription )
                , "get property, built on top of \"osiris::String osiris::ExtensionsExtension::getDescription() const [member function]\"" );
        
        }
        { //property "content"[fget=::osiris::ExtensionsExtension::getContent]
        
            typedef ::osiris::String ( ::osiris::ExtensionsExtension::*fget )(  ) const;
            
            ExtensionsExtension_exposer.add_property( 
                "content"
                , fget( &::osiris::ExtensionsExtension::getContent )
                , "get property, built on top of \"osiris::String osiris::ExtensionsExtension::getContent() const [member function]\"" );
        
        }
        { //property "category"[fget=::osiris::ExtensionsExtension::getCategory]
        
            typedef ::osiris::String ( ::osiris::ExtensionsExtension::*fget )(  ) const;
            
            ExtensionsExtension_exposer.add_property( 
                "category"
                , fget( &::osiris::ExtensionsExtension::getCategory )
                , "get property, built on top of \"osiris::String osiris::ExtensionsExtension::getCategory() const [member function]\"" );
        
        }
        { //property "tags"[fget=::osiris::ExtensionsExtension::getTags]
        
            typedef ::osiris::String ( ::osiris::ExtensionsExtension::*fget )(  ) const;
            
            ExtensionsExtension_exposer.add_property( 
                "tags"
                , fget( &::osiris::ExtensionsExtension::getTags )
                , "get property, built on top of \"osiris::String osiris::ExtensionsExtension::getTags() const [member function]\"" );
        
        }
        { //property "trust"[fget=::osiris::ExtensionsExtension::getTrust]
        
            typedef ::osiris::String ( ::osiris::ExtensionsExtension::*fget )(  ) const;
            
            ExtensionsExtension_exposer.add_property( 
                "trust"
                , fget( &::osiris::ExtensionsExtension::getTrust )
                , "get property, built on top of \"osiris::String osiris::ExtensionsExtension::getTrust() const [member function]\"" );
        
        }
        { //property "author"[fget=::osiris::ExtensionsExtension::getAuthor]
        
            typedef ::osiris::String ( ::osiris::ExtensionsExtension::*fget )(  ) const;
            
            ExtensionsExtension_exposer.add_property( 
                "author"
                , fget( &::osiris::ExtensionsExtension::getAuthor )
                , "get property, built on top of \"osiris::String osiris::ExtensionsExtension::getAuthor() const [member function]\"" );
        
        }
        { //property "version"[fget=::osiris::ExtensionsExtension::getVersion]
        
            typedef float ( ::osiris::ExtensionsExtension::*fget )(  ) const;
            
            ExtensionsExtension_exposer.add_property( 
                "version"
                , fget( &::osiris::ExtensionsExtension::getVersion )
                , "get property, built on top of \"float osiris::ExtensionsExtension::getVersion() const [member function]\"" );
        
        }
        { //property "compatibility"[fget=::osiris::ExtensionsExtension::getCompatibility]
        
            typedef float ( ::osiris::ExtensionsExtension::*fget )(  ) const;
            
            ExtensionsExtension_exposer.add_property( 
                "compatibility"
                , fget( &::osiris::ExtensionsExtension::getCompatibility )
                , "get property, built on top of \"float osiris::ExtensionsExtension::getCompatibility() const [member function]\"" );
        
        }
        { //property "homePage"[fget=::osiris::ExtensionsExtension::getHomePage]
        
            typedef ::osiris::String ( ::osiris::ExtensionsExtension::*fget )(  ) const;
            
            ExtensionsExtension_exposer.add_property( 
                "homePage"
                , fget( &::osiris::ExtensionsExtension::getHomePage )
                , "get property, built on top of \"osiris::String osiris::ExtensionsExtension::getHomePage() const [member function]\"" );
        
        }
        { //property "icon"[fget=::osiris::ExtensionsExtension::getIcon]
        
            typedef ::osiris::String ( ::osiris::ExtensionsExtension::*fget )(  ) const;
            
            ExtensionsExtension_exposer.add_property( 
                "icon"
                , fget( &::osiris::ExtensionsExtension::getIcon )
                , "get property, built on top of \"osiris::String osiris::ExtensionsExtension::getIcon() const [member function]\"" );
        
        }
        { //property "logo"[fget=::osiris::ExtensionsExtension::getLogo]
        
            typedef ::osiris::String ( ::osiris::ExtensionsExtension::*fget )(  ) const;
            
            ExtensionsExtension_exposer.add_property( 
                "logo"
                , fget( &::osiris::ExtensionsExtension::getLogo )
                , "get property, built on top of \"osiris::String osiris::ExtensionsExtension::getLogo() const [member function]\"" );
        
        }
        { //property "internal"[fget=::osiris::ExtensionsExtension::getInternal]
        
            typedef bool ( ::osiris::ExtensionsExtension::*fget )(  ) const;
            
            ExtensionsExtension_exposer.add_property( 
                "internal"
                , fget( &::osiris::ExtensionsExtension::getInternal )
                , "get property, built on top of \"bool osiris::ExtensionsExtension::getInternal() const [member function]\"" );
        
        }
        { //property "path"[fget=::osiris::ExtensionsExtension::getPath]
        
            typedef ::osiris::String ( ::osiris::ExtensionsExtension::*fget )(  ) const;
            
            ExtensionsExtension_exposer.add_property( 
                "path"
                , fget( &::osiris::ExtensionsExtension::getPath )
                , "get property, built on top of \"osiris::String osiris::ExtensionsExtension::getPath() const [member function]\"" );
        
        }
    }

}
