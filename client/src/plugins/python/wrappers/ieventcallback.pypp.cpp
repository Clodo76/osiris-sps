// This file has been generated by Py++.

#include "stdafx.h"
#include "pypluspluscommon.h"
#include "boost/python.hpp"
#include "__call_policies.pypp.hpp"
#include "ieventcallback.h"
#include "eventcallback.h"
#include "ievent.h"
#include "ieventcallback.pypp.hpp"

namespace bp = boost::python;

struct IEventCallback_wrapper : ::osiris::IEventCallback, ::osiris::PythonWrapper< ::osiris::IEventCallback > {

    IEventCallback_wrapper( )
    : ::osiris::IEventCallback( )
      , ::osiris::PythonWrapper< ::osiris::IEventCallback >(){
        // null constructor
    
    }

    static void disconnect( ::osiris::IEventCallback & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        inst.disconnect();
        __pythreadSaver.restore();
    }

    virtual void invoke( ::osiris::IEvent * e ){
        ::osiris::PythonState __pystate(getPythonThreadState());
        ::osiris::PythonOverride func_invoke = this->get_override( "invoke" );
        func_invoke( boost::python::ptr(e) );
    }

};

void register_IEventCallback_class(){

    { //::osiris::IEventCallback
        typedef ::boost::python::class_< IEventCallback_wrapper, ::boost::noncopyable > IEventCallback_exposer_t;
        IEventCallback_exposer_t IEventCallback_exposer = IEventCallback_exposer_t( "IEventCallback", ::boost::python::no_init );
        ::boost::python::scope IEventCallback_scope( IEventCallback_exposer );
        IEventCallback_exposer.def( ::boost::python::init< >() );
        { //::osiris::IEventCallback::disconnect
        
            typedef void ( *disconnect_function_type )( ::osiris::IEventCallback & );
            
            IEventCallback_exposer.def( 
                "disconnect"
                , disconnect_function_type( &IEventCallback_wrapper::disconnect ) );
        
        }
        { //::osiris::IEventCallback::invoke
        
            typedef void ( ::osiris::IEventCallback::*invoke_function_type )( ::osiris::IEvent * ) ;
            
            IEventCallback_exposer.def( 
                "invoke"
                , ( invoke_function_type(&::osiris::IEventCallback::invoke) )
                , ( ::boost::python::arg("e") ) );
        
        }
        ::boost::python::register_ptr_to_python< boost::shared_ptr< ::osiris::IEventCallback > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IEventCallback >, boost::shared_ptr< ::osiris::enable_this_ptr< osiris::IEventCallback > > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IEventCallback >, boost::shared_ptr< ::boost::noncopyable_::noncopyable > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::IEventCallback >, boost::shared_ptr< ::osiris::Object > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::EventCallback >, boost::shared_ptr< ::osiris::IEventCallback > >();
    }

}
