// This file has been generated by Py++.

#include "stdafx.h"
#include "pypluspluscommon.h"
#include "boost/python.hpp"
#include "__call_policies.pypp.hpp"
#include "idesystem.h"
#include "idesystemsingleton.pypp.hpp"

namespace bp = boost::python;

static boost::python::object instance_4f05f4afc9aa110f27afe7d93ac3feb9(  ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::IdeSystem * result = ::osiris::DynamicSingleton<osiris::IdeSystem>::instance();
    __pythreadSaver.restore();
    typedef bp::return_value_policy< bp::reference_existing_object > call_policies_t;
    return boost::python::object( pyplusplus::call_policies::make_object< call_policies_t, ::osiris::IdeSystem * >( result ) );
}

static boost::python::object exists_81eaae159c43288e2a142dbd447fb0d3(  ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    bool result = ::osiris::DynamicSingleton<osiris::IdeSystem>::exists();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object create_38b64de394961c0a9bba057cfd9ec69b(  ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::IdeSystem * result = ::osiris::DynamicSingleton<osiris::IdeSystem>::create();
    __pythreadSaver.restore();
    typedef bp::return_value_policy< bp::reference_existing_object > call_policies_t;
    return boost::python::object( pyplusplus::call_policies::make_object< call_policies_t, ::osiris::IdeSystem * >( result ) );
}

static void destroy_cad77072d30ee19fc945592a80fadc42(  ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::DynamicSingleton<osiris::IdeSystem>::destroy();
    __pythreadSaver.restore();
}

void register_IdeSystemSingleton_class(){

    ::boost::python::class_< ::osiris::DynamicSingleton< osiris::IdeSystem >, ::boost::noncopyable >( "IdeSystemSingleton", ::boost::python::init< >() )    
        .def( 
            "instance"
            , (boost::python::object (*)(  ))( &instance_4f05f4afc9aa110f27afe7d93ac3feb9 ) )    
        .def( 
            "exists"
            , (boost::python::object (*)(  ))( &exists_81eaae159c43288e2a142dbd447fb0d3 ) )    
        .def( 
            "create"
            , (boost::python::object (*)(  ))( &create_38b64de394961c0a9bba057cfd9ec69b ) )    
        .def( 
            "destroy"
            , (void (*)(  ))( &destroy_cad77072d30ee19fc945592a80fadc42 ) )    
        .staticmethod( "instance" )    
        .staticmethod( "exists" )    
        .staticmethod( "create" )    
        .staticmethod( "destroy" );

}
