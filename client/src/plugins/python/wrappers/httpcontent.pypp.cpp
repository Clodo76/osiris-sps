// This file has been generated by Py++.

#include "stdafx.h"
#include "pypluspluscommon.h"
#include "boost/python.hpp"
#include "__call_policies.pypp.hpp"
#include "httpcontent.h"
#include "httpcontent.pypp.hpp"

namespace bp = boost::python;

static boost::python::object getCompleted_a9f22a409da5d4d1af44a727c0e956de( ::osiris::HttpContent const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    bool result = inst.getCompleted();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getValid_41ceccaf277c037e1fa4462267571f11( ::osiris::HttpContent const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    bool result = inst.getValid();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getContentEncoding_9ebf6f83bf297aa5d2ac41be02e8e03d( ::osiris::HttpContent const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::HttpContentEncoding result = inst.getContentEncoding();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getContentType_5db5e1655caf0e18d28a208ca7bc49d3( ::osiris::HttpContent const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::std::string const & result = inst.getContentType();
    __pythreadSaver.restore();
    typedef bp::return_value_policy< bp::copy_const_reference > call_policies_t;
    return boost::python::object( pyplusplus::call_policies::make_object< call_policies_t, ::std::string const & >( result ) );
}

static boost::python::object getTransferEncoding_aa883461c047cbbf5a23dd3edc54c50e( ::osiris::HttpContent const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::HttpTransferEncoding result = inst.getTransferEncoding();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getContentLength_f1afae67b7701ac1262dbdb2f4291c83( ::osiris::HttpContent const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::uint32 result = inst.getContentLength();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getBufferPtr_3a6855ece4ac75d707168ea160bf4215( ::osiris::HttpContent const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::boost::shared_ptr<osiris::Buffer> result = inst.getBufferPtr();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getContentPtr_6d2a5dce8619bf4e163d7181a842970b( ::osiris::HttpContent const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::boost::shared_ptr<osiris::Buffer> result = inst.getContentPtr();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static boost::python::object getContent_e1bf959a7e378a16a0dbbabb2bc430b2( ::osiris::HttpContent const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::osiris::Buffer const & result = inst.getContent();
    __pythreadSaver.restore();
    typedef bp::return_value_policy< bp::copy_const_reference > call_policies_t;
    return boost::python::object( pyplusplus::call_policies::make_object< call_policies_t, ::osiris::Buffer const & >( result ) );
}

static boost::python::object empty_01d71dddd722d64fbcb92f73c80615cf( ::osiris::HttpContent const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    bool result = inst.empty();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static void process_68c22ae749d5c67a7f8a2de190b84717( ::osiris::HttpContent & inst, ::osiris::byte const * data, ::osiris::uint32 size ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.process(data, size);
    __pythreadSaver.restore();
}

static boost::python::object toString_0ce4d90cea03c98a196f18fec8292995( ::osiris::HttpContent const & inst ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    ::std::string result = inst.toString();
    __pythreadSaver.restore();
    return boost::python::object( result );
}

static void setContentEncoding_06b416bbfc2516971660baf8d09fdcd1( ::osiris::HttpContent & inst, ::osiris::HttpContentEncoding contentEncoding ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.setContentEncoding(contentEncoding);
    __pythreadSaver.restore();
}

static void setContentLength_d655353b91afa8263c9aba9e43cc7c19( ::osiris::HttpContent & inst, ::osiris::uint32 contentLength ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.setContentLength(contentLength);
    __pythreadSaver.restore();
}

static void setContentType_b44460f033364f13778f84fc24d215b2( ::osiris::HttpContent & inst, ::std::string const & contentType ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.setContentType(contentType);
    __pythreadSaver.restore();
}

static void setTransferEncoding_9bd2d2bb62cd39f0579218b6c045986f( ::osiris::HttpContent & inst, ::osiris::HttpTransferEncoding transferEncoding ){
    ::osiris::PythonThreadSaver __pythreadSaver;
    inst.setTransferEncoding(transferEncoding);
    __pythreadSaver.restore();
}

void register_HttpContent_class(){

    { //::osiris::HttpContent
        typedef ::boost::python::class_< ::osiris::HttpContent > HttpContent_exposer_t;
        HttpContent_exposer_t HttpContent_exposer = HttpContent_exposer_t( "HttpContent", ::boost::python::init< >() );
        ::boost::python::scope HttpContent_scope( HttpContent_exposer );
        { //::osiris::HttpContent::getCompleted
        
            typedef boost::python::object ( *getCompleted_function_type )( ::osiris::HttpContent const & );
            
            HttpContent_exposer.def( 
                "getCompleted"
                , getCompleted_function_type( &getCompleted_a9f22a409da5d4d1af44a727c0e956de ) );
        
        }
        { //::osiris::HttpContent::getValid
        
            typedef boost::python::object ( *getValid_function_type )( ::osiris::HttpContent const & );
            
            HttpContent_exposer.def( 
                "getValid"
                , getValid_function_type( &getValid_41ceccaf277c037e1fa4462267571f11 ) );
        
        }
        { //::osiris::HttpContent::getContentEncoding
        
            typedef boost::python::object ( *getContentEncoding_function_type )( ::osiris::HttpContent const & );
            
            HttpContent_exposer.def( 
                "getContentEncoding"
                , getContentEncoding_function_type( &getContentEncoding_9ebf6f83bf297aa5d2ac41be02e8e03d ) );
        
        }
        { //::osiris::HttpContent::getContentType
        
            typedef boost::python::object ( *getContentType_function_type )( ::osiris::HttpContent const & );
            
            HttpContent_exposer.def( 
                "getContentType"
                , getContentType_function_type( &getContentType_5db5e1655caf0e18d28a208ca7bc49d3 ) );
        
        }
        { //::osiris::HttpContent::getTransferEncoding
        
            typedef boost::python::object ( *getTransferEncoding_function_type )( ::osiris::HttpContent const & );
            
            HttpContent_exposer.def( 
                "getTransferEncoding"
                , getTransferEncoding_function_type( &getTransferEncoding_aa883461c047cbbf5a23dd3edc54c50e ) );
        
        }
        { //::osiris::HttpContent::getContentLength
        
            typedef boost::python::object ( *getContentLength_function_type )( ::osiris::HttpContent const & );
            
            HttpContent_exposer.def( 
                "getContentLength"
                , getContentLength_function_type( &getContentLength_f1afae67b7701ac1262dbdb2f4291c83 ) );
        
        }
        { //::osiris::HttpContent::getBufferPtr
        
            typedef boost::python::object ( *getBufferPtr_function_type )( ::osiris::HttpContent const & );
            
            HttpContent_exposer.def( 
                "getBufferPtr"
                , getBufferPtr_function_type( &getBufferPtr_3a6855ece4ac75d707168ea160bf4215 ) );
        
        }
        { //::osiris::HttpContent::getContentPtr
        
            typedef boost::python::object ( *getContentPtr_function_type )( ::osiris::HttpContent const & );
            
            HttpContent_exposer.def( 
                "getContentPtr"
                , getContentPtr_function_type( &getContentPtr_6d2a5dce8619bf4e163d7181a842970b ) );
        
        }
        { //::osiris::HttpContent::getContent
        
            typedef boost::python::object ( *getContent_function_type )( ::osiris::HttpContent const & );
            
            HttpContent_exposer.def( 
                "getContent"
                , getContent_function_type( &getContent_e1bf959a7e378a16a0dbbabb2bc430b2 ) );
        
        }
        { //::osiris::HttpContent::empty
        
            typedef boost::python::object ( *empty_function_type )( ::osiris::HttpContent const & );
            
            HttpContent_exposer.def( 
                "empty"
                , empty_function_type( &empty_01d71dddd722d64fbcb92f73c80615cf ) );
        
        }
        { //::osiris::HttpContent::process
        
            typedef void ( *process_function_type )( ::osiris::HttpContent &,::osiris::byte const *,::osiris::uint32 );
            
            HttpContent_exposer.def( 
                "process"
                , process_function_type( &process_68c22ae749d5c67a7f8a2de190b84717 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("data"), ::boost::python::arg("size") ) );
        
        }
        { //::osiris::HttpContent::toString
        
            typedef boost::python::object ( *toString_function_type )( ::osiris::HttpContent const & );
            
            HttpContent_exposer.def( 
                "toString"
                , toString_function_type( &toString_0ce4d90cea03c98a196f18fec8292995 ) );
        
        }
        { //::osiris::HttpContent::setContentEncoding
        
            typedef void ( *setContentEncoding_function_type )( ::osiris::HttpContent &,::osiris::HttpContentEncoding );
            
            HttpContent_exposer.def( 
                "setContentEncoding"
                , setContentEncoding_function_type( &setContentEncoding_06b416bbfc2516971660baf8d09fdcd1 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("contentEncoding") ) );
        
        }
        { //::osiris::HttpContent::setContentLength
        
            typedef void ( *setContentLength_function_type )( ::osiris::HttpContent &,::osiris::uint32 );
            
            HttpContent_exposer.def( 
                "setContentLength"
                , setContentLength_function_type( &setContentLength_d655353b91afa8263c9aba9e43cc7c19 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("contentLength") ) );
        
        }
        { //::osiris::HttpContent::setContentType
        
            typedef void ( *setContentType_function_type )( ::osiris::HttpContent &,::std::string const & );
            
            HttpContent_exposer.def( 
                "setContentType"
                , setContentType_function_type( &setContentType_b44460f033364f13778f84fc24d215b2 )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("contentType") ) );
        
        }
        { //::osiris::HttpContent::setTransferEncoding
        
            typedef void ( *setTransferEncoding_function_type )( ::osiris::HttpContent &,::osiris::HttpTransferEncoding );
            
            HttpContent_exposer.def( 
                "setTransferEncoding"
                , setTransferEncoding_function_type( &setTransferEncoding_9bd2d2bb62cd39f0579218b6c045986f )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("transferEncoding") ) );
        
        }
        { //property "contentEncoding"[fget=::osiris::HttpContent::getContentEncoding, fset=::osiris::HttpContent::setContentEncoding]
        
            typedef ::osiris::HttpContentEncoding ( ::osiris::HttpContent::*fget )(  ) const;
            typedef void ( ::osiris::HttpContent::*fset )( ::osiris::HttpContentEncoding ) ;
            
            HttpContent_exposer.add_property( 
                "contentEncoding"
                , fget( &::osiris::HttpContent::getContentEncoding )
                , fset( &::osiris::HttpContent::setContentEncoding )
                , "get\\set property, built on top of \"osiris::HttpContentEncoding osiris::HttpContent::getContentEncoding() const [member function]\" and \"void osiris::HttpContent::setContentEncoding(osiris::HttpContentEncoding contentEncoding) [member function]\"" );
        
        }
        { //property "contentType"[fget=::osiris::HttpContent::getContentType, fset=::osiris::HttpContent::setContentType]
        
            typedef ::std::string const & ( ::osiris::HttpContent::*fget )(  ) const;
            typedef void ( ::osiris::HttpContent::*fset )( ::std::string const & ) ;
            
            HttpContent_exposer.add_property( 
                "contentType"
                , ::boost::python::make_function( 
                      fget( &::osiris::HttpContent::getContentType )
                    , bp::return_value_policy< bp::copy_const_reference >() ) 
                , fset( &::osiris::HttpContent::setContentType )
                , "get\\set property, built on top of \"std::string const & osiris::HttpContent::getContentType() const [member function]\" and \"void osiris::HttpContent::setContentType(std::string const & contentType) [member function]\"" );
        
        }
        { //property "transferEncoding"[fget=::osiris::HttpContent::getTransferEncoding, fset=::osiris::HttpContent::setTransferEncoding]
        
            typedef ::osiris::HttpTransferEncoding ( ::osiris::HttpContent::*fget )(  ) const;
            typedef void ( ::osiris::HttpContent::*fset )( ::osiris::HttpTransferEncoding ) ;
            
            HttpContent_exposer.add_property( 
                "transferEncoding"
                , fget( &::osiris::HttpContent::getTransferEncoding )
                , fset( &::osiris::HttpContent::setTransferEncoding )
                , "get\\set property, built on top of \"osiris::HttpTransferEncoding osiris::HttpContent::getTransferEncoding() const [member function]\" and \"void osiris::HttpContent::setTransferEncoding(osiris::HttpTransferEncoding transferEncoding) [member function]\"" );
        
        }
        { //property "contentLength"[fget=::osiris::HttpContent::getContentLength, fset=::osiris::HttpContent::setContentLength]
        
            typedef ::osiris::uint32 ( ::osiris::HttpContent::*fget )(  ) const;
            typedef void ( ::osiris::HttpContent::*fset )( ::osiris::uint32 ) ;
            
            HttpContent_exposer.add_property( 
                "contentLength"
                , fget( &::osiris::HttpContent::getContentLength )
                , fset( &::osiris::HttpContent::setContentLength )
                , "get\\set property, built on top of \"osiris::uint32 osiris::HttpContent::getContentLength() const [member function]\" and \"void osiris::HttpContent::setContentLength(osiris::uint32 contentLength) [member function]\"" );
        
        }
        { //property "completed"[fget=::osiris::HttpContent::getCompleted]
        
            typedef bool ( ::osiris::HttpContent::*fget )(  ) const;
            
            HttpContent_exposer.add_property( 
                "completed"
                , fget( &::osiris::HttpContent::getCompleted )
                , "get property, built on top of \"bool osiris::HttpContent::getCompleted() const [member function]\"" );
        
        }
        { //property "valid"[fget=::osiris::HttpContent::getValid]
        
            typedef bool ( ::osiris::HttpContent::*fget )(  ) const;
            
            HttpContent_exposer.add_property( 
                "valid"
                , fget( &::osiris::HttpContent::getValid )
                , "get property, built on top of \"bool osiris::HttpContent::getValid() const [member function]\"" );
        
        }
        { //property "bufferPtr"[fget=::osiris::HttpContent::getBufferPtr]
        
            typedef ::boost::shared_ptr<osiris::Buffer> ( ::osiris::HttpContent::*fget )(  ) const;
            
            HttpContent_exposer.add_property( 
                "bufferPtr"
                , fget( &::osiris::HttpContent::getBufferPtr )
                , "get property, built on top of \"boost::shared_ptr<osiris::Buffer> osiris::HttpContent::getBufferPtr() const [member function]\"" );
        
        }
        { //property "contentPtr"[fget=::osiris::HttpContent::getContentPtr]
        
            typedef ::boost::shared_ptr<osiris::Buffer> ( ::osiris::HttpContent::*fget )(  ) const;
            
            HttpContent_exposer.add_property( 
                "contentPtr"
                , fget( &::osiris::HttpContent::getContentPtr )
                , "get property, built on top of \"boost::shared_ptr<osiris::Buffer> osiris::HttpContent::getContentPtr() const [member function]\"" );
        
        }
        { //property "content"[fget=::osiris::HttpContent::getContent]
        
            typedef ::osiris::Buffer const & ( ::osiris::HttpContent::*fget )(  ) const;
            
            HttpContent_exposer.add_property( 
                "content"
                , ::boost::python::make_function( 
                      fget( &::osiris::HttpContent::getContent )
                    , bp::return_value_policy< bp::copy_const_reference >() ) 
                , "get property, built on top of \"osiris::Buffer const & osiris::HttpContent::getContent() const [member function]\"" );
        
        }
        ::boost::python::register_ptr_to_python< boost::shared_ptr< ::osiris::HttpContent > >();
        ::boost::python::implicitly_convertible< boost::shared_ptr< ::osiris::HttpContent >, boost::shared_ptr< ::osiris::Object > >();
    }

}
