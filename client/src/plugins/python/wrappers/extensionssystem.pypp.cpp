// This file has been generated by Py++.

#include "stdafx.h"
#include "pypluspluscommon.h"
#include "boost/python.hpp"
#include "__call_policies.pypp.hpp"
#include "extensionssystem.h"
#include "extensionscomponenteditor.h"
#include "extensionscomponentviewer.h"
#include "extensionsmoduleeditor.h"
#include "extensionsmoduleviewer.h"
#include "extensionssystem.pypp.hpp"

namespace bp = boost::python;

struct ExtensionsSystem_wrapper : ::osiris::ExtensionsSystem, ::osiris::PythonWrapper< ::osiris::ExtensionsSystem > {

    ExtensionsSystem_wrapper( )
    : ::osiris::ExtensionsSystem( )
      , ::osiris::PythonWrapper< ::osiris::ExtensionsSystem >(){
        // nullptr constructor
    
    }

    static boost::python::object getComponents( ::osiris::ExtensionsSystem const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::unordered::unordered_map<osiris::String, boost::shared_ptr<osiris::IExtensionsComponent>, boost::hash<osiris::String>, std::equal_to<osiris::String>, osiris::StdAllocator<std::pair<osiris::String const, boost::shared_ptr<osiris::IExtensionsComponent> >, osiris::SysAllocator<std::pair<osiris::String const, boost::shared_ptr<osiris::IExtensionsComponent> > > > > const & result = inst.getComponents();
        __pythreadSaver.restore();
        typedef bp::return_value_policy< bp::copy_const_reference > call_policies_t;
        return boost::python::object( pyplusplus::call_policies::make_object< call_policies_t, ::boost::unordered::unordered_map<osiris::String, boost::shared_ptr<osiris::IExtensionsComponent>, boost::hash<osiris::String>, std::equal_to<osiris::String>, osiris::StdAllocator<std::pair<osiris::String const, boost::shared_ptr<osiris::IExtensionsComponent> >, osiris::SysAllocator<std::pair<osiris::String const, boost::shared_ptr<osiris::IExtensionsComponent> > > > > const & >( result ) );
    }

    static boost::python::object getModules( ::osiris::ExtensionsSystem const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::unordered::unordered_map<osiris::String, boost::shared_ptr<osiris::IExtensionsModule>, boost::hash<osiris::String>, std::equal_to<osiris::String>, osiris::StdAllocator<std::pair<osiris::String const, boost::shared_ptr<osiris::IExtensionsModule> >, osiris::SysAllocator<std::pair<osiris::String const, boost::shared_ptr<osiris::IExtensionsModule> > > > > const & result = inst.getModules();
        __pythreadSaver.restore();
        typedef bp::return_value_policy< bp::copy_const_reference > call_policies_t;
        return boost::python::object( pyplusplus::call_policies::make_object< call_policies_t, ::boost::unordered::unordered_map<osiris::String, boost::shared_ptr<osiris::IExtensionsModule>, boost::hash<osiris::String>, std::equal_to<osiris::String>, osiris::StdAllocator<std::pair<osiris::String const, boost::shared_ptr<osiris::IExtensionsModule> >, osiris::SysAllocator<std::pair<osiris::String const, boost::shared_ptr<osiris::IExtensionsModule> > > > > const & >( result ) );
    }

    static boost::python::object getExtensions( ::osiris::ExtensionsSystem const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::ordered_map<osiris::UniqueID, boost::shared_ptr<osiris::IExtensionsExtension> > const & result = inst.getExtensions();
        __pythreadSaver.restore();
        typedef bp::return_value_policy< bp::copy_const_reference > call_policies_t;
        return boost::python::object( pyplusplus::call_policies::make_object< call_policies_t, ::osiris::ordered_map<osiris::UniqueID, boost::shared_ptr<osiris::IExtensionsExtension> > const & >( result ) );
    }

    static boost::python::object getDataPath( ::osiris::ExtensionsSystem const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::String result = inst.getDataPath();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getSharePath( ::osiris::ExtensionsSystem const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::String result = inst.getSharePath();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getKnownUpgradableCounter( ::osiris::ExtensionsSystem const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        int const result = inst.getKnownUpgradableCounter();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object generateComponentID( ::osiris::ExtensionsSystem const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::UniqueID result = inst.generateComponentID();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object generateModuleID( ::osiris::ExtensionsSystem const & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::UniqueID result = inst.generateModuleID();
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static void notifyPortalLoaded( ::osiris::ExtensionsSystem & inst, ::boost::shared_ptr< osiris::Portal > portal, ::boost::shared_ptr< osiris::IPortalDatabase > database ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        inst.notifyPortalLoaded(portal, database);
        __pythreadSaver.restore();
    }

    virtual ::boost::shared_ptr< osiris::ExtensionsComponentEditor > createComponentEditor( ::osiris::UniqueID const & id, ::boost::shared_ptr< osiris::EntitiesEntity > entity ) {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_createComponentEditor = this->get_override( "createComponentEditor" ) )
            return func_createComponentEditor( boost::ref(id), entity );
        else{
            __pystate.leave();
            return this->::osiris::ExtensionsSystem::createComponentEditor( boost::ref(id), entity );
        }
    }
    
    ::boost::shared_ptr< osiris::ExtensionsComponentEditor > default_createComponentEditor( ::osiris::UniqueID const & id, ::boost::shared_ptr< osiris::EntitiesEntity > entity ) {
        ::osiris::PythonThreadSaver __pythreadSaver;
        return ::osiris::ExtensionsSystem::createComponentEditor( boost::ref(id), entity );
    }

    virtual ::boost::shared_ptr< osiris::ExtensionsComponentViewer > createComponentViewer( ::osiris::UniqueID const & id, ::boost::shared_ptr< osiris::EntitiesEntity > entity, bool force=true ) {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_createComponentViewer = this->get_override( "createComponentViewer" ) )
            return func_createComponentViewer( boost::ref(id), entity, force );
        else{
            __pystate.leave();
            return this->::osiris::ExtensionsSystem::createComponentViewer( boost::ref(id), entity, force );
        }
    }
    
    ::boost::shared_ptr< osiris::ExtensionsComponentViewer > default_createComponentViewer( ::osiris::UniqueID const & id, ::boost::shared_ptr< osiris::EntitiesEntity > entity, bool force=true ) {
        ::osiris::PythonThreadSaver __pythreadSaver;
        return ::osiris::ExtensionsSystem::createComponentViewer( boost::ref(id), entity, force );
    }

    virtual ::boost::shared_ptr< osiris::ExtensionsModuleViewer > createModuleViewer( ::osiris::UniqueID const & id, bool ensure ) {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_createModuleViewer = this->get_override( "createModuleViewer" ) )
            return func_createModuleViewer( boost::ref(id), ensure );
        else{
            __pystate.leave();
            return this->::osiris::ExtensionsSystem::createModuleViewer( boost::ref(id), ensure );
        }
    }
    
    ::boost::shared_ptr< osiris::ExtensionsModuleViewer > default_createModuleViewer( ::osiris::UniqueID const & id, bool ensure ) {
        ::osiris::PythonThreadSaver __pythreadSaver;
        return ::osiris::ExtensionsSystem::createModuleViewer( boost::ref(id), ensure );
    }

    static void reloadExtensions( ::osiris::ExtensionsSystem & inst ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        inst.reloadExtensions();
        __pythreadSaver.restore();
    }

    static void install( ::osiris::ExtensionsSystem & inst, ::osiris::UniqueID const & id, ::osiris::String const & path, bool load=true ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        inst.install(id, path, load);
        __pythreadSaver.restore();
    }

    virtual ::osiris::String getName(  ) const  {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_getName = this->get_override( "getName" ) )
            return func_getName(  );
        else{
            __pystate.leave();
            return this->::osiris::ExtensionsSystem::getName(  );
        }
    }
    
    ::osiris::String default_getName(  ) const  {
        ::osiris::PythonThreadSaver __pythreadSaver;
        return ::osiris::ExtensionsSystem::getName( );
    }

    virtual void stop(  ) {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_stop = this->get_override( "stop" ) )
            func_stop(  );
        else{
            __pystate.leave();
            this->::osiris::ExtensionsSystem::stop(  );
        }
    }
    
    void default_stop(  ) {
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::osiris::ExtensionsSystem::stop( );
    }

    virtual ::boost::shared_ptr< osiris::ExtensionsModuleEditor > createModuleEditor( ::osiris::UniqueID const & id ) {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_createModuleEditor = this->get_override( "createModuleEditor" ) )
            return func_createModuleEditor( boost::ref(id) );
        else{
            __pystate.leave();
            return this->::osiris::ExtensionsSystem::createModuleEditor( boost::ref(id) );
        }
    }
    
    ::boost::shared_ptr< osiris::ExtensionsModuleEditor > default_createModuleEditor( ::osiris::UniqueID const & id ) {
        ::osiris::PythonThreadSaver __pythreadSaver;
        return ::osiris::ExtensionsSystem::createModuleEditor( boost::ref(id) );
    }

    static boost::python::object getCodeProvider( ::osiris::ExtensionsSystem const & inst, ::osiris::String const & name ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::shared_ptr<osiris::IExtensionsCodeProvider> result = inst.getCodeProvider(name);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getComponent( ::osiris::ExtensionsSystem const & inst, ::osiris::UniqueID const & id ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::shared_ptr<osiris::IExtensionsComponent> result = inst.getComponent(id);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getExtension( ::osiris::ExtensionsSystem const & inst, ::osiris::UniqueID const & id ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::shared_ptr<osiris::IExtensionsExtension> result = inst.getExtension(id);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object getModule( ::osiris::ExtensionsSystem const & inst, ::osiris::UniqueID const & id ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        ::boost::shared_ptr<osiris::IExtensionsModule> result = inst.getModule(id);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object hasComponent( ::osiris::ExtensionsSystem const & inst, ::osiris::UniqueID const & id ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.hasComponent(id);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object hasExtension( ::osiris::ExtensionsSystem const & inst, ::osiris::UniqueID const & id ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.hasExtension(id);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object hasModule( ::osiris::ExtensionsSystem const & inst, ::osiris::UniqueID const & id ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.hasModule(id);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static void installShare( ::osiris::ExtensionsSystem & inst, bool recovery ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        inst.installShare(recovery);
        __pythreadSaver.restore();
    }

    static boost::python::object loadExtension( ::osiris::ExtensionsSystem & inst, ::boost::shared_ptr< osiris::IExtensionsExtension > extension ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.loadExtension(extension);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object registerCodeProvider( ::osiris::ExtensionsSystem & inst, ::boost::shared_ptr< osiris::IExtensionsCodeProvider > codeProvider ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.registerCodeProvider(codeProvider);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object registerComponent( ::osiris::ExtensionsSystem & inst, ::boost::shared_ptr< osiris::IExtensionsComponent > component ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.registerComponent(component);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static boost::python::object registerModule( ::osiris::ExtensionsSystem & inst, ::boost::shared_ptr< osiris::IExtensionsModule > module ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        bool result = inst.registerModule(module);
        __pythreadSaver.restore();
        return boost::python::object( result );
    }

    static void setKnownUpgradableCounter( ::osiris::ExtensionsSystem & inst, int v ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        inst.setKnownUpgradableCounter(v);
        __pythreadSaver.restore();
    }

    virtual bool start( bool recovery ) {
        ::osiris::PythonState __pystate(getPythonThreadState());
        if( ::osiris::PythonOverride func_start = this->get_override( "start" ) )
            return func_start( recovery );
        else{
            __pystate.leave();
            return this->::osiris::ExtensionsSystem::start( recovery );
        }
    }
    
    bool default_start( bool recovery ) {
        ::osiris::PythonThreadSaver __pythreadSaver;
        return ::osiris::ExtensionsSystem::start( recovery );
    }

    static void uninstall( ::osiris::ExtensionsSystem & inst, ::osiris::UniqueID const & id ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        inst.uninstall(id);
        __pythreadSaver.restore();
    }

    static void unregisterCodeProvider( ::osiris::ExtensionsSystem & inst, ::boost::shared_ptr< osiris::IExtensionsCodeProvider > codeProvider ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        inst.unregisterCodeProvider(codeProvider);
        __pythreadSaver.restore();
    }

    static void unregisterComponent( ::osiris::ExtensionsSystem & inst, ::boost::shared_ptr< osiris::IExtensionsComponent > component ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        inst.unregisterComponent(component);
        __pythreadSaver.restore();
    }

    static void unregisterModule( ::osiris::ExtensionsSystem & inst, ::boost::shared_ptr< osiris::IExtensionsModule > module ){
        ::osiris::PythonThreadSaver __pythreadSaver;
        inst.unregisterModule(module);
        __pythreadSaver.restore();
    }

};

void register_ExtensionsSystem_class(){

    { //::osiris::ExtensionsSystem
        typedef ::boost::python::class_< ExtensionsSystem_wrapper, ::boost::python::bases< ::osiris::DynamicSingleton< osiris::ExtensionsSystem > >, ::boost::noncopyable > ExtensionsSystem_exposer_t;
        ExtensionsSystem_exposer_t ExtensionsSystem_exposer = ExtensionsSystem_exposer_t( "ExtensionsSystem", ::boost::python::no_init );
        ::boost::python::scope ExtensionsSystem_scope( ExtensionsSystem_exposer );
        ExtensionsSystem_exposer.def( ::boost::python::init< >() );
        { //::osiris::ExtensionsSystem::getComponents
        
            typedef boost::python::object ( *getComponents_function_type )( ::osiris::ExtensionsSystem const & );
            
            ExtensionsSystem_exposer.def( 
                "getComponents"
                , getComponents_function_type( &ExtensionsSystem_wrapper::getComponents ) );
        
        }
        { //::osiris::ExtensionsSystem::getModules
        
            typedef boost::python::object ( *getModules_function_type )( ::osiris::ExtensionsSystem const & );
            
            ExtensionsSystem_exposer.def( 
                "getModules"
                , getModules_function_type( &ExtensionsSystem_wrapper::getModules ) );
        
        }
        { //::osiris::ExtensionsSystem::getExtensions
        
            typedef boost::python::object ( *getExtensions_function_type )( ::osiris::ExtensionsSystem const & );
            
            ExtensionsSystem_exposer.def( 
                "getExtensions"
                , getExtensions_function_type( &ExtensionsSystem_wrapper::getExtensions ) );
        
        }
        { //::osiris::ExtensionsSystem::getDataPath
        
            typedef boost::python::object ( *getDataPath_function_type )( ::osiris::ExtensionsSystem const & );
            
            ExtensionsSystem_exposer.def( 
                "getDataPath"
                , getDataPath_function_type( &ExtensionsSystem_wrapper::getDataPath ) );
        
        }
        { //::osiris::ExtensionsSystem::getSharePath
        
            typedef boost::python::object ( *getSharePath_function_type )( ::osiris::ExtensionsSystem const & );
            
            ExtensionsSystem_exposer.def( 
                "getSharePath"
                , getSharePath_function_type( &ExtensionsSystem_wrapper::getSharePath ) );
        
        }
        { //::osiris::ExtensionsSystem::getKnownUpgradableCounter
        
            typedef boost::python::object ( *getKnownUpgradableCounter_function_type )( ::osiris::ExtensionsSystem const & );
            
            ExtensionsSystem_exposer.def( 
                "getKnownUpgradableCounter"
                , getKnownUpgradableCounter_function_type( &ExtensionsSystem_wrapper::getKnownUpgradableCounter ) );
        
        }
        { //::osiris::ExtensionsSystem::generateComponentID
        
            typedef boost::python::object ( *generateComponentID_function_type )( ::osiris::ExtensionsSystem const & );
            
            ExtensionsSystem_exposer.def( 
                "generateComponentID"
                , generateComponentID_function_type( &ExtensionsSystem_wrapper::generateComponentID ) );
        
        }
        { //::osiris::ExtensionsSystem::generateModuleID
        
            typedef boost::python::object ( *generateModuleID_function_type )( ::osiris::ExtensionsSystem const & );
            
            ExtensionsSystem_exposer.def( 
                "generateModuleID"
                , generateModuleID_function_type( &ExtensionsSystem_wrapper::generateModuleID ) );
        
        }
        { //::osiris::ExtensionsSystem::notifyPortalLoaded
        
            typedef void ( *notifyPortalLoaded_function_type )( ::osiris::ExtensionsSystem &,::boost::shared_ptr<osiris::Portal>,::boost::shared_ptr<osiris::IPortalDatabase> );
            
            ExtensionsSystem_exposer.def( 
                "notifyPortalLoaded"
                , notifyPortalLoaded_function_type( &ExtensionsSystem_wrapper::notifyPortalLoaded )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("portal"), ::boost::python::arg("database") ) );
        
        }
        { //::osiris::ExtensionsSystem::createComponentEditor
        
            typedef ::boost::shared_ptr< osiris::ExtensionsComponentEditor > ( ::osiris::ExtensionsSystem::*createComponentEditor_function_type )( ::osiris::UniqueID const &,::boost::shared_ptr< osiris::EntitiesEntity > ) ;
            typedef ::boost::shared_ptr< osiris::ExtensionsComponentEditor > ( ExtensionsSystem_wrapper::*default_createComponentEditor_function_type )( ::osiris::UniqueID const &,::boost::shared_ptr< osiris::EntitiesEntity > ) ;
            
            ExtensionsSystem_exposer.def( 
                "createComponentEditor"
                , createComponentEditor_function_type(&::osiris::ExtensionsSystem::createComponentEditor)
                , default_createComponentEditor_function_type(&ExtensionsSystem_wrapper::default_createComponentEditor)
                , ( ::boost::python::arg("id"), ::boost::python::arg("entity") ) );
        
        }
        { //::osiris::ExtensionsSystem::createComponentViewer
        
            typedef ::boost::shared_ptr< osiris::ExtensionsComponentViewer > ( ::osiris::ExtensionsSystem::*createComponentViewer_function_type )( ::osiris::UniqueID const &,::boost::shared_ptr< osiris::EntitiesEntity >,bool ) ;
            typedef ::boost::shared_ptr< osiris::ExtensionsComponentViewer > ( ExtensionsSystem_wrapper::*default_createComponentViewer_function_type )( ::osiris::UniqueID const &,::boost::shared_ptr< osiris::EntitiesEntity >,bool ) ;
            
            ExtensionsSystem_exposer.def( 
                "createComponentViewer"
                , createComponentViewer_function_type(&::osiris::ExtensionsSystem::createComponentViewer)
                , default_createComponentViewer_function_type(&ExtensionsSystem_wrapper::default_createComponentViewer)
                , ( ::boost::python::arg("id"), ::boost::python::arg("entity"), ::boost::python::arg("force")=(bool)(true) ) );
        
        }
        { //::osiris::ExtensionsSystem::createModuleViewer
        
            typedef ::boost::shared_ptr< osiris::ExtensionsModuleViewer > ( ::osiris::ExtensionsSystem::*createModuleViewer_function_type )( ::osiris::UniqueID const &,bool ) ;
            typedef ::boost::shared_ptr< osiris::ExtensionsModuleViewer > ( ExtensionsSystem_wrapper::*default_createModuleViewer_function_type )( ::osiris::UniqueID const &,bool ) ;
            
            ExtensionsSystem_exposer.def( 
                "createModuleViewer"
                , createModuleViewer_function_type(&::osiris::ExtensionsSystem::createModuleViewer)
                , default_createModuleViewer_function_type(&ExtensionsSystem_wrapper::default_createModuleViewer)
                , ( ::boost::python::arg("id"), ::boost::python::arg("ensure") ) );
        
        }
        { //::osiris::ExtensionsSystem::reloadExtensions
        
            typedef void ( *reloadExtensions_function_type )( ::osiris::ExtensionsSystem & );
            
            ExtensionsSystem_exposer.def( 
                "reloadExtensions"
                , reloadExtensions_function_type( &ExtensionsSystem_wrapper::reloadExtensions ) );
        
        }
        { //::osiris::ExtensionsSystem::install
        
            typedef void ( *install_function_type )( ::osiris::ExtensionsSystem &,::osiris::UniqueID const &,::osiris::String const &,bool );
            
            ExtensionsSystem_exposer.def( 
                "install"
                , install_function_type( &ExtensionsSystem_wrapper::install )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("id"), ::boost::python::arg("path"), ::boost::python::arg("load")=(bool)(true) ) );
        
        }
        { //::osiris::ExtensionsSystem::getName
        
            typedef ::osiris::String ( ::osiris::ExtensionsSystem::*getName_function_type )(  ) const;
            typedef ::osiris::String ( ExtensionsSystem_wrapper::*default_getName_function_type )(  ) const;
            
            ExtensionsSystem_exposer.def( 
                "getName"
                , getName_function_type(&::osiris::ExtensionsSystem::getName)
                , default_getName_function_type(&ExtensionsSystem_wrapper::default_getName) );
        
        }
        { //::osiris::ExtensionsSystem::stop
        
            typedef void ( ::osiris::ExtensionsSystem::*stop_function_type )(  ) ;
            typedef void ( ExtensionsSystem_wrapper::*default_stop_function_type )(  ) ;
            
            ExtensionsSystem_exposer.def( 
                "stop"
                , stop_function_type(&::osiris::ExtensionsSystem::stop)
                , default_stop_function_type(&ExtensionsSystem_wrapper::default_stop) );
        
        }
        { //::osiris::ExtensionsSystem::createModuleEditor
        
            typedef ::boost::shared_ptr< osiris::ExtensionsModuleEditor > ( ::osiris::ExtensionsSystem::*createModuleEditor_function_type )( ::osiris::UniqueID const & ) ;
            typedef ::boost::shared_ptr< osiris::ExtensionsModuleEditor > ( ExtensionsSystem_wrapper::*default_createModuleEditor_function_type )( ::osiris::UniqueID const & ) ;
            
            ExtensionsSystem_exposer.def( 
                "createModuleEditor"
                , createModuleEditor_function_type(&::osiris::ExtensionsSystem::createModuleEditor)
                , default_createModuleEditor_function_type(&ExtensionsSystem_wrapper::default_createModuleEditor)
                , ( ::boost::python::arg("id") ) );
        
        }
        { //::osiris::ExtensionsSystem::getCodeProvider
        
            typedef boost::python::object ( *getCodeProvider_function_type )( ::osiris::ExtensionsSystem const &,::osiris::String const & );
            
            ExtensionsSystem_exposer.def( 
                "getCodeProvider"
                , getCodeProvider_function_type( &ExtensionsSystem_wrapper::getCodeProvider )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("name") ) );
        
        }
        { //::osiris::ExtensionsSystem::getComponent
        
            typedef boost::python::object ( *getComponent_function_type )( ::osiris::ExtensionsSystem const &,::osiris::UniqueID const & );
            
            ExtensionsSystem_exposer.def( 
                "getComponent"
                , getComponent_function_type( &ExtensionsSystem_wrapper::getComponent )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("id") ) );
        
        }
        { //::osiris::ExtensionsSystem::getExtension
        
            typedef boost::python::object ( *getExtension_function_type )( ::osiris::ExtensionsSystem const &,::osiris::UniqueID const & );
            
            ExtensionsSystem_exposer.def( 
                "getExtension"
                , getExtension_function_type( &ExtensionsSystem_wrapper::getExtension )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("id") ) );
        
        }
        { //::osiris::ExtensionsSystem::getModule
        
            typedef boost::python::object ( *getModule_function_type )( ::osiris::ExtensionsSystem const &,::osiris::UniqueID const & );
            
            ExtensionsSystem_exposer.def( 
                "getModule"
                , getModule_function_type( &ExtensionsSystem_wrapper::getModule )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("id") ) );
        
        }
        { //::osiris::ExtensionsSystem::hasComponent
        
            typedef boost::python::object ( *hasComponent_function_type )( ::osiris::ExtensionsSystem const &,::osiris::UniqueID const & );
            
            ExtensionsSystem_exposer.def( 
                "hasComponent"
                , hasComponent_function_type( &ExtensionsSystem_wrapper::hasComponent )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("id") ) );
        
        }
        { //::osiris::ExtensionsSystem::hasExtension
        
            typedef boost::python::object ( *hasExtension_function_type )( ::osiris::ExtensionsSystem const &,::osiris::UniqueID const & );
            
            ExtensionsSystem_exposer.def( 
                "hasExtension"
                , hasExtension_function_type( &ExtensionsSystem_wrapper::hasExtension )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("id") ) );
        
        }
        { //::osiris::ExtensionsSystem::hasModule
        
            typedef boost::python::object ( *hasModule_function_type )( ::osiris::ExtensionsSystem const &,::osiris::UniqueID const & );
            
            ExtensionsSystem_exposer.def( 
                "hasModule"
                , hasModule_function_type( &ExtensionsSystem_wrapper::hasModule )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("id") ) );
        
        }
        { //::osiris::ExtensionsSystem::installShare
        
            typedef void ( *installShare_function_type )( ::osiris::ExtensionsSystem &,bool );
            
            ExtensionsSystem_exposer.def( 
                "installShare"
                , installShare_function_type( &ExtensionsSystem_wrapper::installShare )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("recovery") ) );
        
        }
        { //::osiris::ExtensionsSystem::loadExtension
        
            typedef boost::python::object ( *loadExtension_function_type )( ::osiris::ExtensionsSystem &,::boost::shared_ptr<osiris::IExtensionsExtension> );
            
            ExtensionsSystem_exposer.def( 
                "loadExtension"
                , loadExtension_function_type( &ExtensionsSystem_wrapper::loadExtension )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("extension") ) );
        
        }
        { //::osiris::ExtensionsSystem::registerCodeProvider
        
            typedef boost::python::object ( *registerCodeProvider_function_type )( ::osiris::ExtensionsSystem &,::boost::shared_ptr<osiris::IExtensionsCodeProvider> );
            
            ExtensionsSystem_exposer.def( 
                "registerCodeProvider"
                , registerCodeProvider_function_type( &ExtensionsSystem_wrapper::registerCodeProvider )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("codeProvider") ) );
        
        }
        { //::osiris::ExtensionsSystem::registerComponent
        
            typedef boost::python::object ( *registerComponent_function_type )( ::osiris::ExtensionsSystem &,::boost::shared_ptr<osiris::IExtensionsComponent> );
            
            ExtensionsSystem_exposer.def( 
                "registerComponent"
                , registerComponent_function_type( &ExtensionsSystem_wrapper::registerComponent )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("component") ) );
        
        }
        { //::osiris::ExtensionsSystem::registerModule
        
            typedef boost::python::object ( *registerModule_function_type )( ::osiris::ExtensionsSystem &,::boost::shared_ptr<osiris::IExtensionsModule> );
            
            ExtensionsSystem_exposer.def( 
                "registerModule"
                , registerModule_function_type( &ExtensionsSystem_wrapper::registerModule )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("module") ) );
        
        }
        { //::osiris::ExtensionsSystem::setKnownUpgradableCounter
        
            typedef void ( *setKnownUpgradableCounter_function_type )( ::osiris::ExtensionsSystem &,int );
            
            ExtensionsSystem_exposer.def( 
                "setKnownUpgradableCounter"
                , setKnownUpgradableCounter_function_type( &ExtensionsSystem_wrapper::setKnownUpgradableCounter )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("v") ) );
        
        }
        { //::osiris::ExtensionsSystem::start
        
            typedef bool ( ::osiris::ExtensionsSystem::*start_function_type )( bool ) ;
            typedef bool ( ExtensionsSystem_wrapper::*default_start_function_type )( bool ) ;
            
            ExtensionsSystem_exposer.def( 
                "start"
                , start_function_type(&::osiris::ExtensionsSystem::start)
                , default_start_function_type(&ExtensionsSystem_wrapper::default_start)
                , ( ::boost::python::arg("recovery") ) );
        
        }
        { //::osiris::ExtensionsSystem::uninstall
        
            typedef void ( *uninstall_function_type )( ::osiris::ExtensionsSystem &,::osiris::UniqueID const & );
            
            ExtensionsSystem_exposer.def( 
                "uninstall"
                , uninstall_function_type( &ExtensionsSystem_wrapper::uninstall )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("id") ) );
        
        }
        { //::osiris::ExtensionsSystem::unregisterCodeProvider
        
            typedef void ( *unregisterCodeProvider_function_type )( ::osiris::ExtensionsSystem &,::boost::shared_ptr<osiris::IExtensionsCodeProvider> );
            
            ExtensionsSystem_exposer.def( 
                "unregisterCodeProvider"
                , unregisterCodeProvider_function_type( &ExtensionsSystem_wrapper::unregisterCodeProvider )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("codeProvider") ) );
        
        }
        { //::osiris::ExtensionsSystem::unregisterComponent
        
            typedef void ( *unregisterComponent_function_type )( ::osiris::ExtensionsSystem &,::boost::shared_ptr<osiris::IExtensionsComponent> );
            
            ExtensionsSystem_exposer.def( 
                "unregisterComponent"
                , unregisterComponent_function_type( &ExtensionsSystem_wrapper::unregisterComponent )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("component") ) );
        
        }
        { //::osiris::ExtensionsSystem::unregisterModule
        
            typedef void ( *unregisterModule_function_type )( ::osiris::ExtensionsSystem &,::boost::shared_ptr<osiris::IExtensionsModule> );
            
            ExtensionsSystem_exposer.def( 
                "unregisterModule"
                , unregisterModule_function_type( &ExtensionsSystem_wrapper::unregisterModule )
                , ( ::boost::python::arg("inst"), ::boost::python::arg("module") ) );
        
        }
        { //property "components"[fget=::osiris::ExtensionsSystem::getComponents]
        
            typedef ::boost::unordered::unordered_map<osiris::String, boost::shared_ptr<osiris::IExtensionsComponent>, boost::hash<osiris::String>, std::equal_to<osiris::String>, osiris::StdAllocator<std::pair<osiris::String const, boost::shared_ptr<osiris::IExtensionsComponent> >, osiris::SysAllocator<std::pair<osiris::String const, boost::shared_ptr<osiris::IExtensionsComponent> > > > > const & ( ::osiris::ExtensionsSystem::*fget )(  ) const;
            
            ExtensionsSystem_exposer.add_property( 
                "components"
                , ::boost::python::make_function( 
                      fget( &::osiris::ExtensionsSystem::getComponents )
                    , bp::return_value_policy< bp::copy_const_reference >() ) 
                , "get property, built on top of \"boost::unordered::unordered_map<osiris::String, boost::shared_ptr<osiris::IExtensionsComponent>, boost::hash<osiris::String>, std::equal_to<osiris::String>, osiris::StdAllocator<std::pair<osiris::String const, boost::shared_ptr<osiris::IExtensionsComponent> >, osiris::SysAllocator<std::pair<osiris::String const, boost::shared_ptr<osiris::IExtensionsComponent> > > > > const & osiris::ExtensionsSystem::getComponents() const [member function]\"" );
        
        }
        { //property "modules"[fget=::osiris::ExtensionsSystem::getModules]
        
            typedef ::boost::unordered::unordered_map<osiris::String, boost::shared_ptr<osiris::IExtensionsModule>, boost::hash<osiris::String>, std::equal_to<osiris::String>, osiris::StdAllocator<std::pair<osiris::String const, boost::shared_ptr<osiris::IExtensionsModule> >, osiris::SysAllocator<std::pair<osiris::String const, boost::shared_ptr<osiris::IExtensionsModule> > > > > const & ( ::osiris::ExtensionsSystem::*fget )(  ) const;
            
            ExtensionsSystem_exposer.add_property( 
                "modules"
                , ::boost::python::make_function( 
                      fget( &::osiris::ExtensionsSystem::getModules )
                    , bp::return_value_policy< bp::copy_const_reference >() ) 
                , "get property, built on top of \"boost::unordered::unordered_map<osiris::String, boost::shared_ptr<osiris::IExtensionsModule>, boost::hash<osiris::String>, std::equal_to<osiris::String>, osiris::StdAllocator<std::pair<osiris::String const, boost::shared_ptr<osiris::IExtensionsModule> >, osiris::SysAllocator<std::pair<osiris::String const, boost::shared_ptr<osiris::IExtensionsModule> > > > > const & osiris::ExtensionsSystem::getModules() const [member function]\"" );
        
        }
        { //property "extensions"[fget=::osiris::ExtensionsSystem::getExtensions]
        
            typedef ::osiris::ordered_map<osiris::UniqueID, boost::shared_ptr<osiris::IExtensionsExtension> > const & ( ::osiris::ExtensionsSystem::*fget )(  ) const;
            
            ExtensionsSystem_exposer.add_property( 
                "extensions"
                , ::boost::python::make_function( 
                      fget( &::osiris::ExtensionsSystem::getExtensions )
                    , bp::return_value_policy< bp::copy_const_reference >() ) 
                , "get property, built on top of \"osiris::ordered_map<osiris::UniqueID, boost::shared_ptr<osiris::IExtensionsExtension> > const & osiris::ExtensionsSystem::getExtensions() const [member function]\"" );
        
        }
        { //property "dataPath"[fget=::osiris::ExtensionsSystem::getDataPath]
        
            typedef ::osiris::String ( ::osiris::ExtensionsSystem::*fget )(  ) const;
            
            ExtensionsSystem_exposer.add_property( 
                "dataPath"
                , fget( &::osiris::ExtensionsSystem::getDataPath )
                , "get property, built on top of \"osiris::String osiris::ExtensionsSystem::getDataPath() const [member function]\"" );
        
        }
        { //property "sharePath"[fget=::osiris::ExtensionsSystem::getSharePath]
        
            typedef ::osiris::String ( ::osiris::ExtensionsSystem::*fget )(  ) const;
            
            ExtensionsSystem_exposer.add_property( 
                "sharePath"
                , fget( &::osiris::ExtensionsSystem::getSharePath )
                , "get property, built on top of \"osiris::String osiris::ExtensionsSystem::getSharePath() const [member function]\"" );
        
        }
        { //property "knownUpgradableCounter"[fget=::osiris::ExtensionsSystem::getKnownUpgradableCounter]
        
            typedef int const ( ::osiris::ExtensionsSystem::*fget )(  ) const;
            
            ExtensionsSystem_exposer.add_property( 
                "knownUpgradableCounter"
                , fget( &::osiris::ExtensionsSystem::getKnownUpgradableCounter )
                , "get property, built on top of \"int const osiris::ExtensionsSystem::getKnownUpgradableCounter() const [member function]\"" );
        
        }
        { //property "name"[fget=::osiris::ExtensionsSystem::getName]
        
            typedef ::osiris::String ( ::osiris::ExtensionsSystem::*fget )(  ) const;
            
            ExtensionsSystem_exposer.add_property( 
                "name"
                , fget( &::osiris::ExtensionsSystem::getName )
                , "get property, built on top of \"osiris::String osiris::ExtensionsSystem::getName() const [member function]\"" );
        
        }
    }

}
